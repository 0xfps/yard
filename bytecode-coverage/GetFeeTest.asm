[018] 00000000: PUSH1 0x80                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000002: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000004: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000005: CALLVALUE                      // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000006: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000007: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000008: PUSH3 0x11                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000000c: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000000d: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000000f: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000010: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000011: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000012: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000013: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000015: CALLDATASIZE                   // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000016: LT                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000017: PUSH3 0x178                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000001b: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000001c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000001e: CALLDATALOAD                   // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000001f: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000021: SHR                            // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000022: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000023: PUSH4 0x85226c81               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000028: GT                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 00000029: PUSH3 0xd5                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[018] 0000002d: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 0000002e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 0000002f: PUSH4 0xcd4b99f4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 00000034: GT                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 00000035: PUSH3 0x87                     // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 00000039: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 0000003a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 0000003b: PUSH4 0xcd4b99f4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000040: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000041: PUSH3 0x347                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000045: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000046: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000047: PUSH4 0xd4ee1d90               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 0000004c: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 0000004d: PUSH3 0x353                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000051: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000052: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000053: PUSH4 0xd647ddd4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000058: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000059: PUSH3 0x375                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 0000005d: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000005e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000005f: PUSH4 0xdfad5476               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000064: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000065: PUSH3 0x381                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000069: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000006a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000006b: PUSH4 0xe20c9f71               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000070: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000071: PUSH3 0x38d                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000075: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000076: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000077: PUSH4 0xfa7626d4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000007c: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000007d: PUSH3 0x3af                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000081: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000082: PUSH3 0x178                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000086: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000087: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000088: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000089: PUSH4 0x85226c81               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000008e: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000008f: PUSH3 0x291                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000093: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000094: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000095: PUSH4 0x8b19483d               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000009a: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000009b: PUSH3 0x2b3                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000009f: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000a0: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000a1: PUSH4 0x8da5cb5b               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000a6: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000a7: PUSH3 0x2bf                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000ab: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000ac: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000ad: PUSH4 0x916a17c6               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000b2: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000b3: PUSH3 0x2e1                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000b7: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000b8: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000b9: PUSH4 0xb5508aa9               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000be: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000bf: PUSH3 0x303                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000c3: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000c4: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000c5: PUSH4 0xba414fa6               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000ca: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000cb: PUSH3 0x325                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000cf: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000d0: PUSH3 0x178                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      000000d4: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000d5: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000d6: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000d7: PUSH4 0x3f7286f4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000dc: GT                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000dd: PUSH3 0x12f                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[014] 000000e1: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000e2: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000e3: PUSH4 0x3f7286f4               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000e8: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000e9: PUSH3 0x21d                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000ed: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000ee: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000ef: PUSH4 0x5babb758               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000f4: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000f5: PUSH3 0x23f                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[004] 000000f9: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 000000fa: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 000000fb: PUSH4 0x66d9a9a0               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000100: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000101: PUSH3 0x24b                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000105: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000106: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000107: PUSH4 0x6ded6e2a               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 0000010c: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 0000010d: PUSH3 0x26d                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[003] 00000111: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000112: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000113: PUSH4 0x711c8e6e               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000118: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 00000119: PUSH3 0x279                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[002] 0000011d: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000011e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000011f: PUSH4 0x7d56f234               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000124: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000125: PUSH3 0x285                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000129: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000012a: PUSH3 0x178                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000012e: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 0000012f: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 00000130: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 00000131: PUSH4 0xa9254e4                // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 00000136: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 00000137: PUSH3 0x17d                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[010] 0000013b: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000013c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 0000013d: PUSH4 0x175b34a0               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000142: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000143: PUSH3 0x189                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[001] 00000147: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000148: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000149: PUSH4 0x1b702c2e               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000014e: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000014f: PUSH3 0x195                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000153: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000154: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000155: PUSH4 0x1ed7831c               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000015a: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000015b: PUSH3 0x1b7                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000015f: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000160: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000161: PUSH4 0x38d1af2d               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000166: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000167: PUSH3 0x1d9                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000016b: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000016c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000016d: PUSH4 0x3e5e3c23               // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000172: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000173: PUSH3 0x1fb                    // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000177: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000178: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      00000179: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000017b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
      0000017c: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 6:1-62:2 (91-1470)
[009] 0000017d: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 0000017e: PUSH3 0x187                    // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 00000182: PUSH3 0x3d1                    // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 00000186: JUMP                           // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 00000187: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 00000188: STOP                           // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[001] 00000189: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 0000018a: PUSH3 0x193                    // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 0000018e: PUSH3 0x6b8                    // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 00000192: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 00000193: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 00000194: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
      00000195: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      00000196: PUSH3 0x19f                    // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      0000019a: PUSH3 0x8b3                    // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      0000019e: JUMP                           // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      0000019f: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a0: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a2: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a3: PUSH3 0x1ae                    // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a7: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a8: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001a9: PUSH3 0x231d                   // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001ad: JUMP                           // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001ae: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001af: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b1: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b2: DUP1                           // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b3: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b4: SUB                            // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b5: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b6: RETURN                         // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000001b7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001b8: PUSH3 0x1c1                    // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001bc: PUSH3 0x8d9                    // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c4: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c5: PUSH3 0x1d0                    // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001c9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001ca: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001cb: PUSH3 0x241c                   // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001cf: JUMP                           // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d3: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d5: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d6: SUB                            // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d8: RETURN                         // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000001d9: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001da: PUSH3 0x1e3                    // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001de: PUSH3 0x969                    // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001e2: JUMP                           // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001e3: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001e4: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001e6: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001e7: PUSH3 0x1f2                    // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001eb: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001ec: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001ed: PUSH3 0x2451                   // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f1: JUMP                           // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f2: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f3: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f5: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f6: DUP1                           // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f7: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f8: SUB                            // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001f9: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001fa: RETURN                         // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      000001fb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      000001fc: PUSH3 0x205                    // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000200: PUSH3 0x98f                    // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000204: JUMP                           // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000205: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000206: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000208: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000209: PUSH3 0x214                    // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000020d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000020e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000020f: PUSH3 0x241c                   // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000213: JUMP                           // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000214: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000215: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000217: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000218: DUP1                           // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000219: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000021a: SUB                            // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000021b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000021c: RETURN                         // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      0000021d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000021e: PUSH3 0x227                    // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000222: PUSH3 0xa1f                    // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000226: JUMP                           // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000227: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000228: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000022a: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000022b: PUSH3 0x236                    // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000022f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000230: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000231: PUSH3 0x241c                   // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000235: JUMP                           // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000236: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000237: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000239: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000023a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000023b: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000023c: SUB                            // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000023d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      0000023e: RETURN                         // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
[001] 0000023f: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 00000240: PUSH3 0x249                    // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 00000244: PUSH3 0xaaf                    // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 00000248: JUMP                           // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 00000249: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 0000024a: STOP                           // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
      0000024b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000024c: PUSH3 0x255                    // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000250: PUSH3 0xc9f                    // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000254: JUMP                           // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000255: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000256: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000258: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000259: PUSH3 0x264                    // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000025d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000025e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000025f: PUSH3 0x2679                   // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000263: JUMP                           // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000264: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000265: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000267: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000268: DUP1                           // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000269: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000026a: SUB                            // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000026b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      0000026c: RETURN                         // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
[001] 0000026d: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 0000026e: PUSH3 0x277                    // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000272: PUSH3 0xdf2                    // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000276: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000277: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000278: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000279: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 0000027a: PUSH3 0x283                    // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 0000027e: PUSH3 0xfe8                    // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 00000282: JUMP                           // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 00000283: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 00000284: STOP                           // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 00000285: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[001] 00000286: PUSH3 0x28f                    // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[001] 0000028a: PUSH3 0x11c3                   // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[001] 0000028e: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[001] 0000028f: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[001] 00000290: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
      00000291: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      00000292: PUSH3 0x29b                    // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      00000296: PUSH3 0x13be                   // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      0000029a: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      0000029b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      0000029c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      0000029e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      0000029f: PUSH3 0x2aa                    // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002a3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002a4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002a5: PUSH3 0x2807                   // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002a9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002aa: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002ab: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002ad: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002ae: DUP1                           // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002af: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002b0: SUB                            // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002b1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000002b2: RETURN                         // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
[001] 000002b3: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000002b4: PUSH3 0x2bd                    // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000002b8: PUSH3 0x14a1                   // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000002bc: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000002bd: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000002be: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
      000002bf: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002c0: PUSH3 0x2c9                    // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002c4: PUSH3 0x1547                   // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002c8: JUMP                           // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002c9: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002ca: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002cc: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002cd: PUSH3 0x2d8                    // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d1: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d2: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d3: PUSH3 0x2451                   // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d7: JUMP                           // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d8: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002d9: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002db: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002dc: DUP1                           // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002dd: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002de: SUB                            // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002df: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002e0: RETURN                         // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      000002e1: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002e2: PUSH3 0x2eb                    // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002e6: PUSH3 0x156d                   // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002ea: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002eb: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002ec: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002ee: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002ef: PUSH3 0x2fa                    // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002f3: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002f4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002f5: PUSH3 0x2679                   // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002f9: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002fa: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002fb: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002fd: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002fe: DUP1                           // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000002ff: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      00000300: SUB                            // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      00000301: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      00000302: RETURN                         // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      00000303: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000304: PUSH3 0x30d                    // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000308: PUSH3 0x16c0                   // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000030c: JUMP                           // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000030d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000030e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000310: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000311: PUSH3 0x31c                    // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000315: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000316: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000317: PUSH3 0x2807                   // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000031b: JUMP                           // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000031c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000031d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      0000031f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000320: DUP1                           // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000321: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000322: SUB                            // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000323: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000324: RETURN                         // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      00000325: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000326: PUSH3 0x32f                    // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000032a: PUSH3 0x17a3                   // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000032e: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000032f: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000330: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000332: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000333: PUSH3 0x33e                    // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000337: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000338: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000339: PUSH3 0x2848                   // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000033d: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000033e: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000033f: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000341: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000342: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000343: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000344: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000345: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      00000346: RETURN                         // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
[001] 00000347: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 00000348: PUSH3 0x351                    // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 0000034c: PUSH3 0x194f                   // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 00000350: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 00000351: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 00000352: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
      00000353: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000354: PUSH3 0x35d                    // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000358: PUSH3 0x1b37                   // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000035c: JUMP                           // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000035d: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000035e: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000360: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000361: PUSH3 0x36c                    // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000365: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000366: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000367: PUSH3 0x2451                   // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000036b: JUMP                           // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000036c: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000036d: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      0000036f: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000370: DUP1                           // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000371: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000372: SUB                            // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000373: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00000374: RETURN                         // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
[001] 00000375: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 00000376: PUSH3 0x37f                    // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 0000037a: PUSH3 0x1b5d                   // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 0000037e: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 0000037f: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 00000380: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 00000381: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 00000382: PUSH3 0x38b                    // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 00000386: PUSH3 0x1d53                   // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 0000038a: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 0000038b: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 0000038c: STOP                           // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
      0000038d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      0000038e: PUSH3 0x397                    // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00000392: PUSH3 0x1f40                   // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00000396: JUMP                           // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00000397: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00000398: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      0000039a: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      0000039b: PUSH3 0x3a6                    // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      0000039f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a1: PUSH3 0x241c                   // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a5: JUMP                           // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003a9: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003aa: DUP1                           // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003ab: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003ac: SUB                            // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003ad: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003ae: RETURN                         // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      000003af: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003b0: PUSH3 0x3b9                    // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003b4: PUSH3 0x1fd0                   // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003b8: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003b9: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003ba: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003bc: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003bd: PUSH3 0x3c8                    // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c1: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c2: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c3: PUSH3 0x2848                   // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c7: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c8: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003c9: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003cb: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003cc: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003cd: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003ce: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003cf: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      000003d0: RETURN                         // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
[009] 000003d1: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[009] 000003d2: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[009] 000003f3: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[009] 000003f5: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[009] 000003f6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 16:9-16:17 (445-453)
[009] 0000040b: AND                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:17 (445-453)
[009] 0000040c: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.t.sol: 16:9-16:17 (445-453)
[009] 00000411: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000413: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000415: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000416: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000417: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000418: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 0000041b: EXP                            // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 0000041c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 0000041d: DIV                            // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 0000041e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000433: AND                            // test/yard-fee-test/YardFee.t.sol: 16:18-16:23 (454-459)
[009] 00000434: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000436: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000437: DUP3                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000438: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000043d: AND                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000043e: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000440: SHL                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000441: DUP2                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000442: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000443: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000445: ADD                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000446: PUSH3 0x451                    // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000044a: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000044b: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000044c: PUSH3 0x2451                   // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000450: JUMP                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000451: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000452: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000454: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000456: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000457: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000458: DUP4                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000459: SUB                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000045a: DUP2                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000045b: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000045d: DUP8                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000045e: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000045f: EXTCODESIZE                    // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000460: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000461: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000462: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000463: PUSH3 0x46c                    // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000467: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      00000468: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000046a: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000046b: REVERT                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000046c: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000046d: POP                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000046e: GAS                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 0000046f: CALL                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000470: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000471: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000472: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000473: PUSH3 0x481                    // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000477: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      00000478: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      00000479: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000047b: DUP1                           // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000047c: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000047d: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      0000047e: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
      00000480: REVERT                         // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000481: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000482: POP                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000483: POP                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000484: POP                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000485: POP                            // test/yard-fee-test/YardFee.t.sol: 16:9-16:24 (445-460)
[009] 00000486: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 00000488: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 0000048a: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 0000048b: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 0000048c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 0000048d: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 00000490: EXP                            // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 00000491: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 00000492: DIV                            // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 00000493: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 000004a8: AND                            // test/yard-fee-test/YardFee.t.sol: 17:31-17:36 (492-497)
[009] 000004a9: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 17:38-17:41 (499-502)
[009] 000004ab: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 17:38-17:41 (499-502)
[009] 000004ac: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004ae: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004af: PUSH3 0x4b9                    // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004b3: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004b4: PUSH3 0x2284                   // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004b8: JUMP                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004b9: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004ba: PUSH3 0x4c6                    // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004be: SWAP3                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004bf: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c0: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c1: PUSH3 0x2880                   // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c5: JUMP                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c6: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c7: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004c9: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004ca: DUP1                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004cb: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004cc: SUB                            // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004cd: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004ce: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d0: CREATE                         // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d1: DUP1                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d2: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d3: DUP1                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d4: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d5: PUSH3 0x4e3                    // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004d9: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004da: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004db: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004dd: DUP1                           // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004de: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004df: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004e0: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
      000004e2: REVERT                         // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004e3: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004e4: POP                            // test/yard-fee-test/YardFee.t.sol: 17:19-17:42 (480-503)
[009] 000004e5: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 17:9-17:16 (470-477)
[009] 000004e7: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 17:9-17:16 (470-477)
[009] 000004e9: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 000004ec: EXP                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 000004ed: DUP2                           // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 000004ee: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 000004ef: DUP2                           // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 000004f0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000505: MUL                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000506: NOT                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000507: AND                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000508: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000509: DUP4                           // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 0000050a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 0000051f: AND                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000520: MUL                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000521: OR                             // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000522: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000523: SSTORE                         // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000524: POP                            // test/yard-fee-test/YardFee.t.sol: 17:9-17:42 (470-503)
[009] 00000525: PUSH3 0x612                    // test/yard-fee-test/YardFee.t.sol: 18:9-18:45 (513-549)
[009] 00000529: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000052b: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000052d: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000052e: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000052f: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 00000530: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 00000533: EXP                            // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 00000534: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 00000535: DIV                            // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 00000536: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000054b: AND                            // test/yard-fee-test/YardFee.t.sol: 18:39-18:44 (543-548)
[009] 0000054c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 18:20-18:44 (524-548)
[009] 00000561: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:44 (524-548)
[009] 00000562: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000564: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000566: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000567: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000568: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000569: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 0000056c: EXP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 0000056d: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 0000056e: DIV                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 0000056f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000584: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:27 (524-531)
[009] 00000585: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 18:20-18:33 (524-537)
[009] 0000059a: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:33 (524-537)
[009] 0000059b: PUSH4 0x8da5cb5b               // test/yard-fee-test/YardFee.t.sol: 18:20-18:33 (524-537)
[009] 000005a0: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005a2: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005a3: DUP2                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005a4: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005a9: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005aa: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ac: SHL                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ad: DUP2                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ae: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005af: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b1: ADD                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b2: PUSH1 0x20                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b4: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b6: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b7: DUP1                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b8: DUP4                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005b9: SUB                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ba: DUP2                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005bb: DUP7                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005bc: GAS                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005bd: STATICCALL                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005be: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005bf: DUP1                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005c0: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005c1: PUSH3 0x5cf                    // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005c5: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005c6: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005c7: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005c9: DUP1                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005ca: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005cb: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005cc: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
      000005ce: REVERT                         // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005cf: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d0: POP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d1: POP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d2: POP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d3: POP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d4: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d6: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d7: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005d8: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005da: NOT                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005db: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005dd: DUP3                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005de: ADD                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005df: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e0: DUP3                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e1: ADD                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e2: DUP1                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e3: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e5: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e6: POP                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e7: DUP2                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e8: ADD                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005e9: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ea: PUSH3 0x5f5                    // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ee: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005ef: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005f0: PUSH3 0x28e3                   // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005f4: JUMP                           // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005f5: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 18:20-18:35 (524-539)
[009] 000005f6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 18:20-18:44 (524-548)
[009] 0000060b: AND                            // test/yard-fee-test/YardFee.t.sol: 18:20-18:44 (524-548)
[009] 0000060c: EQ                             // test/yard-fee-test/YardFee.t.sol: 18:20-18:44 (524-548)
[009] 0000060d: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.t.sol: 18:9-18:19 (513-523)
[009] 00000611: JUMP                           // test/yard-fee-test/YardFee.t.sol: 18:9-18:45 (513-549)
[009] 00000612: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 18:9-18:45 (513-549)
[009] 00000613: PUSH3 0x6b6                    // test/yard-fee-test/YardFee.t.sol: 19:9-19:44 (559-594)
[009] 00000617: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 19:40-19:43 (590-593)
[009] 00000619: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 19:40-19:43 (590-593)
[009] 0000061a: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 0000061c: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 0000061e: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 0000061f: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000620: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000621: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000624: EXP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000625: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000626: DIV                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 00000627: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 0000063c: AND                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:27 (570-577)
[009] 0000063d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 19:20-19:34 (570-584)
[009] 00000652: AND                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:34 (570-584)
[009] 00000653: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.t.sol: 19:20-19:34 (570-584)
[009] 00000658: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000065a: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000065b: DUP2                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000065c: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000661: AND                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000662: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000664: SHL                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000665: DUP2                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000666: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000667: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000669: ADD                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000066a: PUSH1 0x20                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000066c: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000066e: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000066f: DUP1                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000670: DUP4                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000671: SUB                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000672: DUP2                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000673: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000675: DUP8                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000676: GAS                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000677: CALL                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000678: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000679: DUP1                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000067a: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000067b: PUSH3 0x689                    // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000067f: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000680: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000681: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000683: DUP1                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000684: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000685: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000686: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
      00000688: REVERT                         // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000689: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000068a: POP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000068b: POP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000068c: POP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000068d: POP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000068e: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000690: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000691: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000692: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000694: NOT                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000695: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000697: DUP3                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000698: ADD                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 00000699: AND                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000069a: DUP3                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000069b: ADD                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000069c: DUP1                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000069d: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 0000069f: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a0: POP                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a1: DUP2                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a2: ADD                            // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a3: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a4: PUSH3 0x6af                    // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a8: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006a9: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006aa: PUSH3 0x2946                   // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006ae: JUMP                           // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006af: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 19:20-19:36 (570-586)
[009] 000006b0: EQ                             // test/yard-fee-test/YardFee.t.sol: 19:20-19:43 (570-593)
[009] 000006b1: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.t.sol: 19:9-19:19 (559-569)
[009] 000006b5: JUMP                           // test/yard-fee-test/YardFee.t.sol: 19:9-19:44 (559-594)
[009] 000006b6: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 19:9-19:44 (559-594)
[009] 000006b7: JUMP                           // test/yard-fee-test/YardFee.t.sol: 15:5-20:6 (411-601)
[001] 000006b8: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
[001] 000006b9: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000006da: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000006dc: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000006dd: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:17 (458-466)
[001] 000006f2: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:17 (458-466)
[001] 000006f3: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:17 (458-466)
[001] 000006f8: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 000006fa: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 000006fc: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 000006fd: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 000006fe: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 000006ff: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 00000702: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 00000703: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 00000704: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 00000705: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 0000071a: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:18-19:23 (467-472)
[001] 0000071b: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000071d: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000071e: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000071f: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000724: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000725: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000727: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000728: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000729: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000072a: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000072c: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000072d: PUSH3 0x738                    // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000731: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000732: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000733: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000737: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000738: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000739: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000073b: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000073d: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000073e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000073f: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000740: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000741: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000742: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000744: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000745: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000746: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000747: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000748: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000749: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000074a: PUSH3 0x753                    // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000074e: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      0000074f: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000751: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000752: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000753: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000754: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000755: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000756: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000757: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000758: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000759: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000075a: PUSH3 0x768                    // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000075e: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      0000075f: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000760: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000762: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000763: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000764: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000765: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
      00000767: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000768: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 00000769: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000076a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000076b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000076c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 19:9-19:24 (458-473)
[001] 0000076d: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 0000076f: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000771: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000772: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000773: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000774: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000777: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000778: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000779: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 0000077a: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 0000078f: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:16 (483-490)
[001] 00000790: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:31 (483-505)
[001] 000007a5: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:31 (483-505)
[001] 000007a6: PUSH4 0xac40876a               // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:31 (483-505)
[001] 000007ab: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 20:32-20:40 (506-514)
[001] 000007ad: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:32-20:40 (506-514)
[001] 000007ae: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007b0: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007b1: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007b2: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007b7: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007b8: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ba: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007bb: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007bc: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007bd: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007bf: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007c0: PUSH3 0x7cb                    // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007c4: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007c5: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007c6: PUSH3 0x2978                   // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ca: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007cb: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007cc: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ce: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d0: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d1: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d2: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d3: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d4: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d5: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d7: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d8: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007d9: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007da: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007db: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007dc: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007dd: PUSH3 0x7e6                    // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007e1: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007e2: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007e4: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007e5: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007e6: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007e7: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007e8: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007e9: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ea: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007eb: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ec: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ed: PUSH3 0x7fb                    // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007f1: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f2: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f3: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f5: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f6: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f7: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007f8: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
      000007fa: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007fb: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007fc: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007fd: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007fe: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 000007ff: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 20:9-20:41 (483-515)
[001] 00000800: PUSH3 0x80d                    // test/yard-fee-test/YardFee.getFee.t.sol: 22:9-22:21 (526-538)
[001] 00000804: PUSH3 0x69780                  // test/yard-fee-test/YardFee.getFee.t.sol: 22:14-22:20 (531-537)
[001] 00000808: PUSH3 0x202c                   // test/yard-fee-test/YardFee.getFee.t.sol: 22:9-22:13 (526-530)
[001] 0000080c: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 22:9-22:21 (526-538)
[001] 0000080d: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 22:9-22:21 (526-538)
[001] 0000080e: PUSH3 0x8b1                    // test/yard-fee-test/YardFee.getFee.t.sol: 24:9-24:44 (549-584)
[001] 00000812: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:40-24:43 (580-583)
[001] 00000814: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:40-24:43 (580-583)
[001] 00000815: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000817: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000819: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 0000081a: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 0000081b: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 0000081c: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 0000081f: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000820: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000821: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000822: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000837: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:27 (560-567)
[001] 00000838: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:34 (560-574)
[001] 0000084d: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:34 (560-574)
[001] 0000084e: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:34 (560-574)
[001] 00000853: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000855: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000856: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000857: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000085c: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000085d: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000085f: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000860: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000861: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000862: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000864: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000865: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000867: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000869: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000086a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000086b: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000086c: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000086d: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000086e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000870: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000871: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000872: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000873: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000874: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000875: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000876: PUSH3 0x884                    // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000087a: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      0000087b: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      0000087c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      0000087e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      0000087f: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      00000880: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      00000881: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
      00000883: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000884: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000885: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000886: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000887: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000888: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000889: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000088b: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000088c: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000088d: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000088f: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000890: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000892: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000893: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000894: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000895: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000896: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000897: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 00000898: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089a: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089c: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089d: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 0000089f: PUSH3 0x8aa                    // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008a3: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008a4: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008a5: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008a9: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008aa: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:36 (560-576)
[001] 000008ab: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 24:20-24:43 (560-583)
[001] 000008ac: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 24:9-24:19 (549-559)
[001] 000008b0: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 24:9-24:44 (549-584)
[001] 000008b1: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 24:9-24:44 (549-584)
[001] 000008b2: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 18:5-25:6 (393-591)
      000008b3: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008b4: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008b6: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008b8: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008b9: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008ba: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008bb: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008be: EXP                            // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008bf: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008c0: DIV                            // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008c1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008d6: AND                            // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008d7: DUP2                           // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008d8: JUMP                           // test/yard-fee-test/YardFee.t.sol: 8:5-8:27 (192-214)
      000008d9: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      000008da: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 69:52-69:85 (2208-2241)
      000008dc: PUSH1 0xd                      // lib/forge-std/src/StdInvariant.sol: 70:28-70:44 (2272-2288)
      000008de: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008df: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e3: MUL                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e6: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e7: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008e9: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008ea: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008eb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008ec: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008ed: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008ef: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f1: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f2: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f5: DUP2                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008fa: DUP3                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008fb: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008fc: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008fd: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008fe: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      000008ff: PUSH3 0x95f                    // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000903: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000904: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000906: MUL                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000907: DUP3                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000908: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000909: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000090a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000090b: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000090d: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000090e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000910: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000912: SHA3                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000913: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000914: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000915: DUP2                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000916: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000918: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000919: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000091a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000091b: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000091e: EXP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000091f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000920: DIV                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000921: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000936: AND                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000937: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000094c: AND                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000094d: DUP2                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000094e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000094f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000951: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000952: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000953: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000955: ADD                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000956: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000957: DUP1                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000958: DUP4                           // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000959: GT                             // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000095a: PUSH3 0x914                    // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000095e: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      0000095f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000960: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000961: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000962: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000963: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000964: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000965: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000966: POP                            // lib/forge-std/src/StdInvariant.sol: 70:9-70:44 (2253-2288)
      00000967: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      00000968: JUMP                           // lib/forge-std/src/StdInvariant.sol: 69:5-71:6 (2161-2295)
      00000969: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000096a: PUSH1 0x1d                     // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000096c: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000096e: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000096f: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000970: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000971: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000974: EXP                            // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000975: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000976: DIV                            // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      00000977: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000098c: AND                            // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000098d: DUP2                           // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000098e: JUMP                           // test/yard-fee-test/YardFee.t.sol: 10:5-10:39 (259-293)
      0000098f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000990: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 89:51-89:84 (2976-3009)
      00000992: PUSH1 0xf                      // lib/forge-std/src/StdInvariant.sol: 90:28-90:44 (3040-3056)
      00000994: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000995: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000996: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000997: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000999: MUL                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      0000099a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      0000099c: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      0000099d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      0000099f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a2: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a7: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a8: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009a9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009aa: DUP2                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ab: DUP2                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ac: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ad: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009af: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b0: DUP3                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b1: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b2: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b4: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b5: PUSH3 0xa15                    // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009b9: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ba: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009bc: MUL                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009bd: DUP3                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009be: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009bf: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c6: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c8: SHA3                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009c9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ca: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009cb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009cc: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009cf: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d1: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d4: EXP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d6: DIV                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009d7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ec: AND                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      000009ed: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a02: AND                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a03: DUP2                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a04: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a05: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a07: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a08: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a09: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a0b: ADD                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a0c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a0d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a0e: DUP4                           // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a0f: GT                             // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a10: PUSH3 0x9ca                    // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a14: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a15: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a16: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a17: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a18: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a19: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a1a: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a1b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a1c: POP                            // lib/forge-std/src/StdInvariant.sol: 90:9-90:44 (3021-3056)
      00000a1d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000a1e: JUMP                           // lib/forge-std/src/StdInvariant.sol: 89:5-91:6 (2930-3063)
      00000a1f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000a20: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 81:53-81:88 (2679-2714)
      00000a22: PUSH1 0xe                      // lib/forge-std/src/StdInvariant.sol: 82:30-82:48 (2747-2765)
      00000a24: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a25: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a26: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a27: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a29: MUL                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a2a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a2c: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a2d: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a2f: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a30: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a31: DUP2                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a32: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a33: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a35: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a36: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a37: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a38: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a39: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a3a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a3b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a3c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a3d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a3f: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a40: DUP3                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a41: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a42: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a43: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a44: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a45: PUSH3 0xaa5                    // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a49: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a4a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a4c: MUL                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a4d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a4e: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a4f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a50: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a51: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a53: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a54: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a56: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a58: SHA3                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a59: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a5a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a5b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a5c: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a5e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a5f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a60: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a61: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a64: EXP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a65: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a66: DIV                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a67: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a7c: AND                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a7d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a92: AND                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a93: DUP2                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a94: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a95: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a97: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a98: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a99: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a9b: ADD                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a9c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a9d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a9e: DUP4                           // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000a9f: GT                             // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa0: PUSH3 0xa5a                    // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa4: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa5: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa6: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa7: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa8: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aa9: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aaa: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aab: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aac: POP                            // lib/forge-std/src/StdInvariant.sol: 82:9-82:48 (2726-2765)
      00000aad: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
      00000aae: JUMP                           // lib/forge-std/src/StdInvariant.sol: 81:5-83:6 (2631-2772)
[001] 00000aaf: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
[001] 00000ab0: PUSH3 0xb0b                    // test/yard-fee-test/YardFee.t.sol: 29:9-29:52 (786-829)
[001] 00000ab4: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 29:49-29:50 (826-827)
[001] 00000ab6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 29:21-29:51 (798-828)
[001] 00000acb: AND                            // test/yard-fee-test/YardFee.t.sol: 29:21-29:51 (798-828)
[001] 00000acc: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ace: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad0: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad1: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad2: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad3: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad6: EXP                            // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad7: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad8: DIV                            // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000ad9: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000aee: AND                            // test/yard-fee-test/YardFee.t.sol: 29:29-29:36 (806-813)
[001] 00000aef: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 29:21-29:51 (798-828)
[001] 00000b04: AND                            // test/yard-fee-test/YardFee.t.sol: 29:21-29:51 (798-828)
[001] 00000b05: EQ                             // test/yard-fee-test/YardFee.t.sol: 29:21-29:51 (798-828)
[001] 00000b06: PUSH3 0x20ce                   // test/yard-fee-test/YardFee.t.sol: 29:9-29:20 (786-797)
[001] 00000b0a: JUMP                           // test/yard-fee-test/YardFee.t.sol: 29:9-29:52 (786-829)
[001] 00000b0b: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 29:9-29:52 (786-829)
[001] 00000b0c: PUSH3 0xbf9                    // test/yard-fee-test/YardFee.t.sol: 30:9-30:45 (839-875)
[001] 00000b10: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b12: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b14: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b15: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b16: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b17: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b1a: EXP                            // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b1b: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b1c: DIV                            // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b1d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b32: AND                            // test/yard-fee-test/YardFee.t.sol: 30:39-30:44 (869-874)
[001] 00000b33: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 30:20-30:44 (850-874)
[001] 00000b48: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:44 (850-874)
[001] 00000b49: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b4b: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b4d: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b4e: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b4f: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b50: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b53: EXP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b54: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b55: DIV                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b56: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b6b: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:27 (850-857)
[001] 00000b6c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 30:20-30:33 (850-863)
[001] 00000b81: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:33 (850-863)
[001] 00000b82: PUSH4 0x8da5cb5b               // test/yard-fee-test/YardFee.t.sol: 30:20-30:33 (850-863)
[001] 00000b87: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b89: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b8a: DUP2                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b8b: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b90: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b91: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b93: SHL                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b94: DUP2                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b95: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b96: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b98: ADD                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b99: PUSH1 0x20                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b9b: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b9d: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b9e: DUP1                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000b9f: DUP4                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba0: SUB                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba1: DUP2                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba2: DUP7                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba3: GAS                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba4: STATICCALL                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba5: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba6: DUP1                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba7: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000ba8: PUSH3 0xbb6                    // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bac: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bad: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bae: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bb0: DUP1                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bb1: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bb2: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bb3: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
      00000bb5: REVERT                         // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bb6: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bb7: POP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bb8: POP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bb9: POP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bba: POP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bbb: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bbd: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bbe: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bbf: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc1: NOT                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc2: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc4: DUP3                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc5: ADD                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc6: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc7: DUP3                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc8: ADD                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bc9: DUP1                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bca: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bcc: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bcd: POP                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bce: DUP2                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bcf: ADD                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bd0: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bd1: PUSH3 0xbdc                    // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bd5: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bd6: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bd7: PUSH3 0x28e3                   // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bdb: JUMP                           // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bdc: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 30:20-30:35 (850-865)
[001] 00000bdd: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 30:20-30:44 (850-874)
[001] 00000bf2: AND                            // test/yard-fee-test/YardFee.t.sol: 30:20-30:44 (850-874)
[001] 00000bf3: EQ                             // test/yard-fee-test/YardFee.t.sol: 30:20-30:44 (850-874)
[001] 00000bf4: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.t.sol: 30:9-30:19 (839-849)
[001] 00000bf8: JUMP                           // test/yard-fee-test/YardFee.t.sol: 30:9-30:45 (839-875)
[001] 00000bf9: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 30:9-30:45 (839-875)
[001] 00000bfa: PUSH3 0xc9d                    // test/yard-fee-test/YardFee.t.sol: 31:9-31:44 (885-920)
[001] 00000bfe: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 31:40-31:43 (916-919)
[001] 00000c00: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 31:40-31:43 (916-919)
[001] 00000c01: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c03: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c05: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c06: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c07: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c08: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c0b: EXP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c0c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c0d: DIV                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c0e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c23: AND                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:27 (896-903)
[001] 00000c24: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 31:20-31:34 (896-910)
[001] 00000c39: AND                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:34 (896-910)
[001] 00000c3a: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.t.sol: 31:20-31:34 (896-910)
[001] 00000c3f: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c41: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c42: DUP2                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c43: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c48: AND                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c49: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c4b: SHL                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c4c: DUP2                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c4d: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c4e: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c50: ADD                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c51: PUSH1 0x20                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c53: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c55: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c56: DUP1                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c57: DUP4                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c58: SUB                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c59: DUP2                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c5a: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c5c: DUP8                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c5d: GAS                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c5e: CALL                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c5f: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c60: DUP1                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c61: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c62: PUSH3 0xc70                    // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c66: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c67: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c68: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c6a: DUP1                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c6b: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c6c: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c6d: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
      00000c6f: REVERT                         // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c70: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c71: POP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c72: POP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c73: POP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c74: POP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c75: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c77: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c78: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c79: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c7b: NOT                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c7c: PUSH1 0x1f                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c7e: DUP3                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c7f: ADD                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c80: AND                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c81: DUP3                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c82: ADD                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c83: DUP1                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c84: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c86: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c87: POP                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c88: DUP2                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c89: ADD                            // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c8a: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c8b: PUSH3 0xc96                    // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c8f: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c90: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c91: PUSH3 0x2946                   // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c95: JUMP                           // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c96: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 31:20-31:36 (896-912)
[001] 00000c97: EQ                             // test/yard-fee-test/YardFee.t.sol: 31:20-31:43 (896-919)
[001] 00000c98: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.t.sol: 31:9-31:19 (885-895)
[001] 00000c9c: JUMP                           // test/yard-fee-test/YardFee.t.sol: 31:9-31:44 (885-920)
[001] 00000c9d: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 31:9-31:44 (885-920)
[001] 00000c9e: JUMP                           // test/yard-fee-test/YardFee.t.sol: 28:5-32:6 (748-927)
      00000c9f: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000ca0: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 77:61-77:109 (2503-2551)
      00000ca2: PUSH1 0x12                     // lib/forge-std/src/StdInvariant.sol: 78:38-78:64 (2592-2618)
      00000ca4: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ca5: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ca6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ca7: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ca9: MUL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000caa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cac: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cad: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000caf: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb1: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb2: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb3: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb7: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb8: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cb9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cba: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cbb: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cbc: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cbd: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cbf: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc0: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc2: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc3: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc4: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc6: LT                             // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc7: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cc8: PUSH3 0xde9                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ccc: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ccd: DUP4                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cce: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ccf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd0: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd2: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd3: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd5: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd7: SHA3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cd9: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cdb: MUL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cdc: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cdd: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cdf: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce0: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce1: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce3: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce7: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ce9: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ceb: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cec: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ced: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cef: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf0: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf2: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf5: EXP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf7: DIV                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000cf8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d0d: AND                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d0e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d23: AND                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d24: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d39: AND                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d3a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d3b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d3c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d3e: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d3f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d41: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d42: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d43: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d44: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d45: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d46: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d48: MUL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d49: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d4b: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d4c: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d4e: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d4f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d50: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d51: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d52: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d54: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d55: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d56: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d57: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d58: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d59: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d5a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d5b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d5c: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d5e: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d5f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d60: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d61: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d62: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d63: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d64: PUSH3 0xdd0                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d68: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d69: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d6b: MUL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d6c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d6d: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d6e: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d6f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d70: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d72: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d73: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d75: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d77: SHA3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d78: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d79: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d7b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d7c: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d7d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d7e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d7f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d80: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d81: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d82: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d85: EXP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d86: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d87: DIV                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d88: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d8a: SHL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000d8b: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000da8: NOT                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000da9: AND                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000daa: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dab: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dac: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dae: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000daf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db0: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db2: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db7: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000db9: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dba: DIV                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dbb: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dbc: DUP4                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dbd: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dbe: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dbf: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc1: SUB                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc2: DUP3                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc3: MUL                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc4: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc5: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc6: DUP1                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc7: DUP5                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc8: GT                             // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dc9: PUSH3 0xd7c                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dcd: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dcf: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd1: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd2: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd3: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd4: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd5: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd7: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd8: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dd9: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dda: DUP2                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ddb: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ddc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dde: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ddf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de0: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de2: ADD                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de4: PUSH3 0xcc3                    // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de8: JUMP                           // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000de9: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dea: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000deb: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dec: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000ded: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000dee: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000def: POP                            // lib/forge-std/src/StdInvariant.sol: 78:9-78:64 (2563-2618)
      00000df0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
      00000df1: JUMP                           // lib/forge-std/src/StdInvariant.sol: 77:5-79:6 (2447-2625)
[001] 00000df2: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000df3: PUSH3 0xdfc                    // test/yard-fee-test/YardFee.getFee.t.sol: 55:9-55:44 (1303-1338)
[001] 00000df7: PUSH3 0x11c3                   // test/yard-fee-test/YardFee.getFee.t.sol: 55:9-55:42 (1303-1336)
[001] 00000dfb: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 55:9-55:44 (1303-1338)
[001] 00000dfc: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 55:9-55:44 (1303-1338)
[001] 00000dfd: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00000e1e: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000e20: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00000e21: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:17 (1349-1357)
[001] 00000e36: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:17 (1349-1357)
[001] 00000e37: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:17 (1349-1357)
[001] 00000e3c: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e3e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e40: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e41: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e42: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e43: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e46: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e47: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e48: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e49: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e5e: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:18-57:23 (1358-1363)
[001] 00000e5f: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e61: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e62: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e63: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e68: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e69: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e6b: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e6c: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e6d: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e6e: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e70: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e71: PUSH3 0xe7c                    // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e75: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e76: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e77: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e7b: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e7c: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e7d: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e7f: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e81: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e82: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e83: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e84: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e85: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e86: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e88: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e89: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e8a: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e8b: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e8c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e8d: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e8e: PUSH3 0xe97                    // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e92: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000e93: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000e95: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000e96: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e97: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e98: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e99: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e9a: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e9b: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e9c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e9d: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000e9e: PUSH3 0xeac                    // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000ea2: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea3: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea4: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea6: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea7: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea8: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000ea9: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
      00000eab: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000eac: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000ead: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000eae: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000eaf: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000eb0: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 57:9-57:24 (1349-1364)
[001] 00000eb1: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000eb3: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000eb5: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000eb6: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000eb7: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000eb8: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ebb: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ebc: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ebd: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ebe: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ed3: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:16 (1374-1381)
[001] 00000ed4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:26 (1374-1391)
[001] 00000ee9: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:26 (1374-1391)
[001] 00000eea: PUSH4 0x48cc5d75               // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:26 (1374-1391)
[001] 00000eef: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000ef1: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000ef2: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000ef3: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000ef8: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000ef9: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000efb: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000efc: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000efd: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000efe: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f00: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f01: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f03: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f05: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f06: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f07: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f08: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f09: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f0a: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f0c: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f0d: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f0e: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f0f: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f10: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f11: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f12: PUSH3 0xf1b                    // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f16: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f17: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f19: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f1a: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f1b: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f1c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f1d: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f1e: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f1f: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f20: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f21: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f22: PUSH3 0xf30                    // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f26: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f27: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f28: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f2a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f2b: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f2c: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f2d: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
      00000f2f: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f30: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f31: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f32: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f33: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f34: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 58:9-58:28 (1374-1393)
[001] 00000f35: PUSH3 0xf42                    // test/yard-fee-test/YardFee.getFee.t.sol: 59:9-59:22 (1403-1416)
[001] 00000f39: PUSH3 0xe8080                  // test/yard-fee-test/YardFee.getFee.t.sol: 59:14-59:21 (1408-1415)
[001] 00000f3d: PUSH3 0x202c                   // test/yard-fee-test/YardFee.getFee.t.sol: 59:9-59:13 (1403-1407)
[001] 00000f41: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 59:9-59:22 (1403-1416)
[001] 00000f42: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 59:9-59:22 (1403-1416)
[001] 00000f43: PUSH3 0xfe6                    // test/yard-fee-test/YardFee.getFee.t.sol: 60:9-60:44 (1426-1461)
[001] 00000f47: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:40-60:43 (1457-1460)
[001] 00000f49: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:40-60:43 (1457-1460)
[001] 00000f4a: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f4c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f4e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f4f: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f50: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f51: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f54: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f55: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f56: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f57: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f6c: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:27 (1437-1444)
[001] 00000f6d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:34 (1437-1451)
[001] 00000f82: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:34 (1437-1451)
[001] 00000f83: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:34 (1437-1451)
[001] 00000f88: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f8a: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f8b: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f8c: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f91: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f92: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f94: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f95: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f96: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f97: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f99: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f9a: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f9c: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f9e: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000f9f: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa0: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa1: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa2: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa3: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa5: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa6: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa7: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa8: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fa9: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000faa: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fab: PUSH3 0xfb9                    // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000faf: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb0: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb1: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb3: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb4: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb5: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb6: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
      00000fb8: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fb9: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fba: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fbb: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fbc: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fbd: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fbe: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc0: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc1: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc2: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc4: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc5: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc7: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc8: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fc9: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fca: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fcb: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fcc: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fcd: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fcf: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd0: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd1: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd2: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd3: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd4: PUSH3 0xfdf                    // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd8: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fd9: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fda: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fde: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fdf: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:36 (1437-1453)
[001] 00000fe0: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 60:20-60:43 (1437-1460)
[001] 00000fe1: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 60:9-60:19 (1426-1436)
[001] 00000fe5: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 60:9-60:44 (1426-1461)
[001] 00000fe6: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 60:9-60:44 (1426-1461)
[001] 00000fe7: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 54:5-61:6 (1243-1468)
[001] 00000fe8: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[001] 00000fe9: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 0000100a: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000100c: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000100d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 23:9-23:17 (650-658)
[001] 00001022: AND                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:17 (650-658)
[001] 00001023: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.t.sol: 23:9-23:17 (650-658)
[001] 00001028: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000102a: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000102c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000102d: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000102e: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000102f: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 00001032: EXP                            // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 00001033: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 00001034: DIV                            // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 00001035: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000104a: AND                            // test/yard-fee-test/YardFee.t.sol: 23:18-23:23 (659-664)
[001] 0000104b: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000104d: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000104e: DUP3                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000104f: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001054: AND                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001055: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001057: SHL                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001058: DUP2                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001059: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000105a: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000105c: ADD                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000105d: PUSH3 0x1068                   // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001061: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001062: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001063: PUSH3 0x2451                   // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001067: JUMP                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001068: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001069: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000106b: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000106d: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000106e: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000106f: DUP4                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001070: SUB                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001071: DUP2                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001072: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001074: DUP8                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001075: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001076: EXTCODESIZE                    // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001077: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001078: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001079: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000107a: PUSH3 0x1083                   // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000107e: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      0000107f: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001081: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001082: REVERT                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001083: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001084: POP                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001085: GAS                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001086: CALL                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001087: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001088: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001089: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000108a: PUSH3 0x1098                   // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000108e: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      0000108f: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001090: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001092: DUP1                           // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001093: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001094: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001095: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
      00001097: REVERT                         // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001098: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 00001099: POP                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000109a: POP                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000109b: POP                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000109c: POP                            // test/yard-fee-test/YardFee.t.sol: 23:9-23:24 (650-665)
[001] 0000109d: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 000010be: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000010c0: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 000010c1: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 24:9-24:24 (675-690)
[001] 000010d6: AND                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:24 (675-690)
[001] 000010d7: PUSH4 0xf4844814               // test/yard-fee-test/YardFee.t.sol: 24:9-24:24 (675-690)
[001] 000010dc: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010de: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010df: DUP2                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010e0: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010e5: AND                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010e6: PUSH1 0xe0                     // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010e8: SHL                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010e9: DUP2                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010ea: MSTORE                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010eb: PUSH1 0x4                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010ed: ADD                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010ee: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f0: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f2: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f3: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f4: DUP4                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f5: SUB                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f6: DUP2                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f7: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010f9: DUP8                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010fa: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010fb: EXTCODESIZE                    // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010fc: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010fd: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010fe: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 000010ff: PUSH3 0x1108                   // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001103: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001104: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001106: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001107: REVERT                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001108: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001109: POP                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110a: GAS                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110b: CALL                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110c: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110d: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110e: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000110f: PUSH3 0x111d                   // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001113: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001114: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001115: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001117: DUP1                           // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001118: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      00001119: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      0000111a: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
      0000111c: REVERT                         // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000111d: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000111e: POP                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 0000111f: POP                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001120: POP                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001121: POP                            // test/yard-fee-test/YardFee.t.sol: 24:9-24:26 (675-692)
[001] 00001122: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001124: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001126: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001127: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001128: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001129: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 0000112c: EXP                            // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 0000112d: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 0000112e: DIV                            // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 0000112f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001144: AND                            // test/yard-fee-test/YardFee.t.sol: 25:31-25:36 (724-729)
[001] 00001145: PUSH3 0x30d40                  // test/yard-fee-test/YardFee.t.sol: 25:38-25:41 (731-734)
[001] 00001149: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000114b: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000114c: PUSH3 0x1156                   // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001150: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001151: PUSH3 0x2284                   // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001155: JUMP                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001156: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001157: PUSH3 0x1163                   // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000115b: SWAP3                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000115c: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000115d: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000115e: PUSH3 0x29d8                   // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001162: JUMP                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001163: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001164: PUSH1 0x40                     // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001166: MLOAD                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001167: DUP1                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001168: SWAP2                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001169: SUB                            // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000116a: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000116b: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000116d: CREATE                         // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000116e: DUP1                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 0000116f: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001170: DUP1                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001171: ISZERO                         // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001172: PUSH3 0x1180                   // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001176: JUMPI                          // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      00001177: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      00001178: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      0000117a: DUP1                           // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      0000117b: RETURNDATACOPY                 // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      0000117c: RETURNDATASIZE                 // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      0000117d: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
      0000117f: REVERT                         // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001180: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001181: POP                            // test/yard-fee-test/YardFee.t.sol: 25:19-25:42 (712-735)
[001] 00001182: PUSH1 0x1b                     // test/yard-fee-test/YardFee.t.sol: 25:9-25:16 (702-709)
[001] 00001184: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 25:9-25:16 (702-709)
[001] 00001186: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 00001189: EXP                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 0000118a: DUP2                           // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 0000118b: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 0000118c: DUP2                           // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 0000118d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a2: MUL                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a3: NOT                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a4: AND                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a5: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a6: DUP4                           // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011a7: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011bc: AND                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011bd: MUL                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011be: OR                             // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011bf: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011c0: SSTORE                         // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011c1: POP                            // test/yard-fee-test/YardFee.t.sol: 25:9-25:42 (702-735)
[001] 000011c2: JUMP                           // test/yard-fee-test/YardFee.t.sol: 22:5-26:6 (607-742)
[004] 000011c3: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
[004] 000011c4: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[004] 000011e5: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[004] 000011e7: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[004] 000011e8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:17 (659-667)
[004] 000011fd: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:17 (659-667)
[004] 000011fe: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:17 (659-667)
[004] 00001203: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001205: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001207: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001208: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001209: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 0000120a: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 0000120d: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 0000120e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 0000120f: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001210: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001225: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:18-28:23 (668-673)
[004] 00001226: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001228: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001229: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000122a: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000122f: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001230: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001232: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001233: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001234: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001235: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001237: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001238: PUSH3 0x1243                   // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000123c: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000123d: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000123e: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001242: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001243: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001244: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001246: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001248: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001249: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000124a: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000124b: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000124c: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000124d: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000124f: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001250: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001251: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001252: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001253: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001254: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001255: PUSH3 0x125e                   // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001259: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000125a: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000125c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000125d: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000125e: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 0000125f: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001260: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001261: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001262: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001263: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001264: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001265: PUSH3 0x1273                   // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001269: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000126a: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000126b: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000126d: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000126e: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      0000126f: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      00001270: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
      00001272: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001273: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001274: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001275: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001276: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001277: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 28:9-28:24 (659-674)
[004] 00001278: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000127a: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000127c: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000127d: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000127e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000127f: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 00001282: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 00001283: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 00001284: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 00001285: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000129a: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:16 (684-691)
[004] 0000129b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:31 (684-706)
[004] 000012b0: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:31 (684-706)
[004] 000012b1: PUSH4 0xac40876a               // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:31 (684-706)
[004] 000012b6: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 29:32-29:40 (707-715)
[004] 000012b8: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:32-29:40 (707-715)
[004] 000012b9: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012bb: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012bc: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012bd: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c2: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c3: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c5: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c6: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c7: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012c8: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012ca: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012cb: PUSH3 0x12d6                   // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012cf: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d0: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d1: PUSH3 0x2978                   // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d5: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d6: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d7: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012d9: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012db: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012dc: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012dd: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012de: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012df: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e0: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e2: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e3: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e4: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e5: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e6: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e7: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012e8: PUSH3 0x12f1                   // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012ec: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      000012ed: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      000012ef: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      000012f0: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f1: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f2: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f3: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f4: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f5: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f6: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f7: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012f8: PUSH3 0x1306                   // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 000012fc: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      000012fd: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      000012fe: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      00001300: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      00001301: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      00001302: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      00001303: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
      00001305: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 00001306: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 00001307: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 00001308: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 00001309: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 0000130a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 29:9-29:41 (684-716)
[004] 0000130b: PUSH3 0x1318                   // test/yard-fee-test/YardFee.getFee.t.sol: 31:9-31:22 (727-740)
[004] 0000130f: PUSH3 0xe8080                  // test/yard-fee-test/YardFee.getFee.t.sol: 31:14-31:21 (732-739)
[004] 00001313: PUSH3 0x202c                   // test/yard-fee-test/YardFee.getFee.t.sol: 31:9-31:13 (727-731)
[004] 00001317: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 31:9-31:22 (727-740)
[004] 00001318: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 31:9-31:22 (727-740)
[004] 00001319: PUSH3 0x13bc                   // test/yard-fee-test/YardFee.getFee.t.sol: 33:9-33:49 (751-791)
[004] 0000131d: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:40-33:48 (782-790)
[004] 0000131f: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:40-33:48 (782-790)
[004] 00001320: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001322: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001324: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001325: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001326: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001327: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 0000132a: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 0000132b: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 0000132c: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 0000132d: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001342: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:27 (762-769)
[004] 00001343: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:34 (762-776)
[004] 00001358: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:34 (762-776)
[004] 00001359: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:34 (762-776)
[004] 0000135e: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001360: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001361: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001362: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001367: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001368: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000136a: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000136b: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000136c: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000136d: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000136f: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001370: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001372: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001374: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001375: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001376: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001377: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001378: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001379: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000137b: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000137c: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000137d: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000137e: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000137f: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001380: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001381: PUSH3 0x138f                   // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001385: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      00001386: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      00001387: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      00001389: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      0000138a: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      0000138b: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      0000138c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
      0000138e: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000138f: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001390: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001391: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001392: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001393: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001394: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001396: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001397: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 00001398: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000139a: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000139b: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000139d: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000139e: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 0000139f: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a0: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a1: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a2: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a3: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a5: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a6: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a7: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a8: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013a9: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013aa: PUSH3 0x13b5                   // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013ae: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013af: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013b0: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013b4: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013b5: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:36 (762-778)
[004] 000013b6: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 33:20-33:48 (762-790)
[004] 000013b7: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 33:9-33:19 (751-761)
[004] 000013bb: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 33:9-33:49 (751-791)
[004] 000013bc: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 33:9-33:49 (751-791)
[004] 000013bd: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 27:5-34:6 (597-798)
      000013be: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000013bf: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 73:53-73:87 (2349-2383)
      000013c1: PUSH1 0x11                     // lib/forge-std/src/StdInvariant.sol: 74:30-74:48 (2416-2434)
      000013c3: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013c4: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013c5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013c6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013c8: MUL                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013c9: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013cb: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013cc: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ce: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013cf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d0: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d1: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d4: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d6: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d7: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d8: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013d9: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013da: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013db: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013dc: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013de: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013df: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e2: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e3: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e4: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e5: LT                             // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e6: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013e7: PUSH3 0x1498                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013eb: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ec: DUP4                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ed: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ee: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ef: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f1: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f2: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f4: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f6: SHA3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f7: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f8: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013f9: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013fa: PUSH3 0x1404                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013fe: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      000013ff: PUSH3 0x2a34                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001403: JUMP                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001404: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001405: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001406: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001408: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001409: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000140b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000140c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000140d: DIV                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000140e: MUL                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000140f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001411: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001412: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001414: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001415: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001416: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001417: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001418: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141a: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141b: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141c: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000141f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001420: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001421: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001422: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001424: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001425: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001426: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001427: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001428: PUSH3 0x1432                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000142c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000142d: PUSH3 0x2a34                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001431: JUMP                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001432: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001433: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001434: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001435: PUSH3 0x1483                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001439: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000143a: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000143b: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000143d: LT                             // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000143e: PUSH3 0x1457                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001442: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001443: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001446: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001447: DUP4                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001448: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001449: DIV                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000144a: MUL                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000144b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000144c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000144d: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000144e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001450: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001451: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001452: PUSH3 0x1483                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001456: JUMP                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001457: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001458: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001459: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000145a: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000145b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000145c: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000145e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000145f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001461: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001463: SHA3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001464: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001465: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001466: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001467: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001468: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001469: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000146a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000146b: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000146d: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000146e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000146f: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001471: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001472: DUP1                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001473: DUP4                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001474: GT                             // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001475: PUSH3 0x1465                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001479: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000147a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000147b: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000147c: SUB                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000147d: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000147f: AND                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001480: DUP3                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001481: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001482: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001483: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001484: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001485: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001486: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001487: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001488: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001489: DUP2                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000148a: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000148b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000148d: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000148e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000148f: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001491: ADD                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001492: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001493: PUSH3 0x13e2                   // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001497: JUMP                           // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001498: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      00001499: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149a: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149b: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149c: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149e: POP                            // lib/forge-std/src/StdInvariant.sol: 74:9-74:48 (2395-2434)
      0000149f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
      000014a0: JUMP                           // lib/forge-std/src/StdInvariant.sol: 73:5-75:6 (2301-2441)
[001] 000014a1: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
[001] 000014a2: PUSH3 0x1545                   // test/yard-fee-test/YardFee.getFee.t.sol: 8:9-8:44 (180-215)
[001] 000014a6: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:40-8:43 (211-214)
[001] 000014a8: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:40-8:43 (211-214)
[001] 000014a9: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014ab: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014ad: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014ae: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014af: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014b0: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014b3: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014b4: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014b5: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014b6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014cb: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:27 (191-198)
[001] 000014cc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:34 (191-205)
[001] 000014e1: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:34 (191-205)
[001] 000014e2: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:34 (191-205)
[001] 000014e7: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014e9: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014ea: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014eb: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f0: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f1: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f3: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f4: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f5: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f6: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f8: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014f9: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014fb: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014fd: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014fe: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 000014ff: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001500: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001501: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001502: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001504: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001505: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001506: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001507: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001508: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001509: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000150a: PUSH3 0x1518                   // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000150e: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      0000150f: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001510: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001512: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001513: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001514: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001515: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
      00001517: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001518: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001519: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000151a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000151b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000151c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000151d: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000151f: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001520: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001521: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001523: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001524: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001526: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001527: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001528: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001529: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000152a: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000152b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000152c: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000152e: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000152f: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001530: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001531: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001532: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001533: PUSH3 0x153e                   // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001537: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001538: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 00001539: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000153d: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000153e: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:36 (191-207)
[001] 0000153f: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 8:20-8:43 (191-214)
[001] 00001540: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 8:9-8:19 (180-190)
[001] 00001544: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 8:9-8:44 (180-215)
[001] 00001545: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 8:9-8:44 (180-215)
[001] 00001546: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 7:5-9:6 (132-222)
      00001547: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      00001548: PUSH1 0x1c                     // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000154a: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000154c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000154d: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000154e: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000154f: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      00001552: EXP                            // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      00001553: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      00001554: DIV                            // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      00001555: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000156a: AND                            // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000156b: DUP2                           // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000156c: JUMP                           // test/yard-fee-test/YardFee.t.sol: 9:5-9:38 (220-253)
      0000156d: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      0000156e: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 85:53-85:93 (2826-2866)
      00001570: PUSH1 0x13                     // lib/forge-std/src/StdInvariant.sol: 86:30-86:48 (2899-2917)
      00001572: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001573: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001574: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001575: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001577: MUL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001578: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000157a: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000157b: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000157d: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000157e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000157f: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001580: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001581: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001583: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001584: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001585: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001586: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001587: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001588: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001589: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000158a: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000158b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000158d: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000158e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001590: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001591: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001592: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001593: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001594: LT                             // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001595: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001596: PUSH3 0x16b7                   // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000159a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000159b: DUP4                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000159c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000159d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000159e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a0: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a1: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a3: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a5: SHA3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a6: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a7: PUSH1 0x2                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015a9: MUL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015aa: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015ab: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015ad: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015ae: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015af: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b1: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b2: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b4: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b5: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b6: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b7: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015b9: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015ba: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015bb: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015bd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015be: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015bf: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015c0: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015c3: EXP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015c4: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015c5: DIV                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015c6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015db: AND                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015dc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015f1: AND                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000015f2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001607: AND                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001608: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001609: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000160a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000160c: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000160d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000160f: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001610: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001611: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001612: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001613: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001614: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001616: MUL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001617: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001619: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000161a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000161c: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000161d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000161e: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000161f: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001620: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001622: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001623: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001624: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001625: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001626: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001627: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001628: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001629: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000162a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000162c: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000162d: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000162e: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000162f: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001630: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001631: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001632: PUSH3 0x169e                   // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001636: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001637: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001639: MUL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000163a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000163b: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000163c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000163d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000163e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001640: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001641: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001643: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001645: SHA3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001646: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001647: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001649: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164b: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164e: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000164f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001650: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001653: EXP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001654: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001655: DIV                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001656: PUSH1 0xe0                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001658: SHL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001659: PUSH28 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001676: NOT                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001677: AND                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001678: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001679: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000167a: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000167c: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000167d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000167e: PUSH1 0x4                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001680: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001681: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001682: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001684: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001685: PUSH1 0x3                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001687: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001688: DIV                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001689: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000168a: DUP4                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000168b: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000168c: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000168d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000168f: SUB                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001690: DUP3                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001691: MUL                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001692: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001693: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001694: DUP1                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001695: DUP5                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001696: GT                             // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      00001697: PUSH3 0x164a                   // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000169b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000169c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000169d: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000169e: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      0000169f: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a0: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a1: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a2: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a3: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a6: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a7: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a8: DUP2                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016a9: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016aa: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016ac: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016ad: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016ae: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b0: ADD                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b2: PUSH3 0x1591                   // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b6: JUMP                           // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b7: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b8: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016b9: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016ba: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016bb: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016bc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016bd: POP                            // lib/forge-std/src/StdInvariant.sol: 86:9-86:48 (2878-2917)
      000016be: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000016bf: JUMP                           // lib/forge-std/src/StdInvariant.sol: 85:5-87:6 (2778-2924)
      000016c0: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      000016c1: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 61:54-61:88 (1915-1949)
      000016c3: PUSH1 0x10                     // lib/forge-std/src/StdInvariant.sol: 62:30-62:48 (1982-2000)
      000016c5: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016c6: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016c7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016c8: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016ca: MUL                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016cb: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016cd: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016ce: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d0: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d2: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d3: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d4: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d6: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d7: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d8: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016d9: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016da: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016db: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016dc: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016dd: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016de: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e0: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e3: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e4: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e5: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e6: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e7: LT                             // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e8: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016e9: PUSH3 0x179a                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016ed: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016ee: DUP4                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016ef: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f0: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f1: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f3: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f4: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f6: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f8: SHA3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016f9: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016fa: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016fb: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000016fc: PUSH3 0x1706                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001700: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001701: PUSH3 0x2a34                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001705: JUMP                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001706: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001707: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001708: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000170a: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000170b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000170d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000170e: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000170f: DIV                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001710: MUL                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001711: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001713: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001714: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001716: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001717: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001718: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001719: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000171a: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000171c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000171d: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000171e: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000171f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001720: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001721: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001722: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001723: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001724: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001726: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001727: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001728: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001729: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000172a: PUSH3 0x1734                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000172e: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000172f: PUSH3 0x2a34                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001733: JUMP                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001734: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001735: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001736: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001737: PUSH3 0x1785                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000173b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000173c: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000173d: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000173f: LT                             // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001740: PUSH3 0x1759                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001744: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001745: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001748: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001749: DUP4                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174a: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174b: DIV                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174c: MUL                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174d: DUP4                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174e: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000174f: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001750: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001752: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001753: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001754: PUSH3 0x1785                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001758: JUMP                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001759: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000175a: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000175b: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000175c: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000175d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000175e: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001760: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001761: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001763: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001765: SHA3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001766: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001767: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001768: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001769: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000176a: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000176b: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000176c: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000176d: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000176f: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001770: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001771: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001773: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001774: DUP1                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001775: DUP4                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001776: GT                             // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001777: PUSH3 0x1767                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000177b: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000177c: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000177d: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000177e: SUB                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000177f: PUSH1 0x1f                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001781: AND                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001782: DUP3                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001783: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001784: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001785: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001786: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001787: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001788: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001789: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000178a: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000178b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000178c: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000178d: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000178f: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001790: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001791: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001793: ADD                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001794: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001795: PUSH3 0x16e4                   // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      00001799: JUMP                           // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179a: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179b: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179c: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179d: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179e: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      0000179f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000017a0: POP                            // lib/forge-std/src/StdInvariant.sol: 62:9-62:48 (1961-2000)
      000017a1: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      000017a2: JUMP                           // lib/forge-std/src/StdInvariant.sol: 61:5-63:6 (1866-2007)
      000017a3: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      000017a4: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 47:39-47:43 (1853-1857)
      000017a6: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017a7: PUSH1 0x1                      // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017a9: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017aa: SLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017ab: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017ac: PUSH2 0x100                    // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017af: EXP                            // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017b0: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017b1: DIV                            // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017b2: PUSH1 0xff                     // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017b4: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 48:13-48:20 (1873-1880)
      000017b5: ISZERO                         // lib/forge-std/lib/ds-test/src/test.sol: 48:9-62:10 (1869-2397)
      000017b6: PUSH3 0x17d2                   // lib/forge-std/lib/ds-test/src/test.sol: 48:9-62:10 (1869-2397)
      000017ba: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 48:9-62:10 (1869-2397)
      000017bb: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017bd: PUSH1 0x1                      // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017bf: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c0: SLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c1: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c2: PUSH2 0x100                    // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c5: EXP                            // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c6: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c7: DIV                            // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017c8: PUSH1 0xff                     // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017ca: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 49:20-49:27 (1903-1910)
      000017cb: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 49:13-49:27 (1896-1910)
      000017cc: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 49:13-49:27 (1896-1910)
      000017cd: PUSH3 0x194c                   // lib/forge-std/lib/ds-test/src/test.sol: 49:13-49:27 (1896-1910)
      000017d1: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 49:13-49:27 (1896-1910)
      000017d2: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 48:9-62:10 (1869-2397)
      000017d3: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 51:13-51:30 (1941-1958)
      000017d5: PUSH3 0x17de                   // lib/forge-std/lib/ds-test/src/test.sol: 52:17-52:33 (1984-2000)
      000017d9: PUSH3 0x20dd                   // lib/forge-std/lib/ds-test/src/test.sol: 52:17-52:31 (1984-1998)
      000017dd: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 52:17-52:33 (1984-2000)
      000017de: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 52:17-52:33 (1984-2000)
      000017df: ISZERO                         // lib/forge-std/lib/ds-test/src/test.sol: 52:13-60:14 (1980-2354)
      000017e0: PUSH3 0x1947                   // lib/forge-std/lib/ds-test/src/test.sol: 52:13-60:14 (1980-2354)
      000017e4: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 52:13-60:14 (1980-2354)
      000017e5: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 53:20-53:40 (2023-2043)
      000017e7: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/lib/ds-test/src/test.sol: 42:41-42:69 (1703-1731)
      00001808: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000180a: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000180b: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      0000180d: SHL                            // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      0000180e: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00001810: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00001811: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/lib/ds-test/src/test.sol: 53:44-53:61 (2047-2064)
      00001826: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-53:61 (2047-2064)
      00001827: PUSH32 0x667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4 // lib/forge-std/lib/ds-test/src/test.sol: 55:32-55:66 (2135-2169)
      00001848: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/lib/ds-test/src/test.sol: 42:41-42:69 (1703-1731)
      00001869: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000186b: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000186c: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      0000186e: SHL                            // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      0000186f: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00001871: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00001872: PUSH32 0x6661696c65640000000000000000000000000000000000000000000000000000 // lib/forge-std/lib/ds-test/src/test.sol: 56:50-56:67 (2221-2238)
      00001893: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      00001895: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      00001896: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      00001898: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      00001899: PUSH3 0x18a5                   // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      0000189d: SWAP3                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      0000189e: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      0000189f: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a0: PUSH3 0x2a84                   // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a4: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a5: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a6: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a8: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018a9: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018ab: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018ac: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018ad: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018ae: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018af: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018b0: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018b1: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018b2: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018b4: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 56:25-56:68 (2196-2239)
      000018b5: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018b7: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018b8: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018ba: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018bb: PUSH3 0x18c7                   // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018bf: SWAP3                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c0: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c1: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c2: PUSH3 0x2b23                   // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c6: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c7: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018c8: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018ca: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018cb: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018cd: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018ce: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018cf: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d0: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d1: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d2: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d3: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d4: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d6: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 54:21-57:22 (2086-2261)
      000018d7: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018d9: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018da: PUSH3 0x18e5                   // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018de: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018df: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018e0: PUSH3 0x2b4f                   // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018e4: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018e5: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018e6: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018e8: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018ea: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018eb: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018ec: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018ed: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018ee: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018ef: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f1: DUP7                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f2: GAS                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f3: CALL                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f4: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f5: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f6: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f7: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f8: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018f9: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018fb: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018fc: EQ                             // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      000018fd: PUSH3 0x1924                   // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001901: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001902: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001904: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001905: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001906: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001907: PUSH1 0x1f                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001909: NOT                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000190a: PUSH1 0x3f                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000190c: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000190d: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000190e: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000190f: DUP3                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001910: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001911: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001913: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001914: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001915: DUP3                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001916: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001917: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001918: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000191a: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000191c: DUP5                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000191d: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000191e: RETURNDATACOPY                 // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000191f: PUSH3 0x1929                   // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001923: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001924: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001925: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001927: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001928: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      00001929: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000192a: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:44-58:18 (2047-2279)
      0000192b: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 53:17-58:18 (2020-2279)
      0000192c: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:17-58:18 (2020-2279)
      0000192d: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 53:17-58:18 (2020-2279)
      0000192e: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 59:43-59:50 (2323-2330)
      0000192f: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001930: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001932: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001933: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001934: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001935: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001936: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001937: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001938: PUSH3 0x1943                   // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      0000193c: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      0000193d: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      0000193e: PUSH3 0x2b99                   // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001942: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001943: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 59:32-59:59 (2312-2339)
      00001944: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 59:17-59:59 (2297-2339)
      00001945: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 59:17-59:59 (2297-2339)
      00001946: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 52:35-60:14 (2002-2354)
      00001947: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 52:13-60:14 (1980-2354)
      00001948: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 61:20-61:32 (2374-2386)
      00001949: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 61:13-61:32 (2367-2386)
      0000194a: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 61:13-61:32 (2367-2386)
      0000194b: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 61:13-61:32 (2367-2386)
      0000194c: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000194d: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
      0000194e: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 47:5-63:6 (1819-2403)
[001] 0000194f: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
[001] 00001950: PUSH3 0x1959                   // test/yard-fee-test/YardFee.getFee.t.sol: 37:9-37:44 (851-886)
[001] 00001954: PUSH3 0x11c3                   // test/yard-fee-test/YardFee.getFee.t.sol: 37:9-37:42 (851-884)
[001] 00001958: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 37:9-37:44 (851-886)
[001] 00001959: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 37:9-37:44 (851-886)
[001] 0000195a: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 0000197b: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000197d: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 0000197e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:17 (897-905)
[001] 00001993: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:17 (897-905)
[001] 00001994: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:17 (897-905)
[001] 00001999: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 0000199b: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 0000199d: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 0000199e: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 0000199f: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019a0: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019a3: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019a4: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019a5: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019a6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019bb: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:18-39:23 (906-911)
[001] 000019bc: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019be: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019bf: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019c0: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019c5: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019c6: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019c8: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019c9: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019ca: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019cb: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019cd: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019ce: PUSH3 0x19d9                   // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019d2: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019d3: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019d4: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019d8: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019d9: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019da: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019dc: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019de: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019df: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e0: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e1: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e2: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e3: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e5: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e6: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e7: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e8: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019e9: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019ea: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019eb: PUSH3 0x19f4                   // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019ef: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      000019f0: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      000019f2: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      000019f3: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f4: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f5: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f6: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f7: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f8: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019f9: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019fa: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019fb: PUSH3 0x1a09                   // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 000019ff: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a00: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a01: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a03: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a04: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a05: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a06: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
      00001a08: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a09: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a0a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a0b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a0c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a0d: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 39:9-39:24 (897-912)
[001] 00001a0e: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a10: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a12: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a13: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a14: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a15: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a18: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a19: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a1a: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a1b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a30: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:16 (922-929)
[001] 00001a31: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:26 (922-939)
[001] 00001a46: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:26 (922-939)
[001] 00001a47: PUSH4 0x48cc5d75               // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:26 (922-939)
[001] 00001a4c: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a4e: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a4f: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a50: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a55: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a56: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a58: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a59: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a5a: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a5b: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a5d: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a5e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a60: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a62: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a63: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a64: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a65: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a66: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a67: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a69: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6b: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6c: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6d: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6e: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a6f: PUSH3 0x1a78                   // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a73: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a74: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a76: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a77: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a78: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a79: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7a: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7b: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7c: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7d: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7e: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a7f: PUSH3 0x1a8d                   // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a83: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a84: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a85: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a87: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a88: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a89: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a8a: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
      00001a8c: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a8d: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a8e: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a8f: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a90: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a91: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 40:9-40:28 (922-941)
[001] 00001a92: PUSH3 0x1b35                   // test/yard-fee-test/YardFee.getFee.t.sol: 41:9-41:49 (951-991)
[001] 00001a96: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:40-41:48 (982-990)
[001] 00001a98: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:40-41:48 (982-990)
[001] 00001a99: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001a9b: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001a9d: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001a9e: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001a9f: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001aa0: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001aa3: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001aa4: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001aa5: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001aa6: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001abb: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:27 (962-969)
[001] 00001abc: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:34 (962-976)
[001] 00001ad1: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:34 (962-976)
[001] 00001ad2: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:34 (962-976)
[001] 00001ad7: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ad9: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ada: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001adb: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae0: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae1: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae3: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae4: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae5: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae6: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae8: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001ae9: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001aeb: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001aed: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001aee: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001aef: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af0: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af1: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af2: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af4: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af5: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af6: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af7: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af8: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001af9: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001afa: PUSH3 0x1b08                   // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001afe: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001aff: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b00: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b02: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b03: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b04: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b05: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
      00001b07: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b08: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b09: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b0a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b0b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b0c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b0d: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b0f: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b10: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b11: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b13: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b14: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b16: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b17: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b18: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b19: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b1a: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b1b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b1c: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b1e: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b1f: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b20: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b21: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b22: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b23: PUSH3 0x1b2e                   // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b27: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b28: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b29: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b2d: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b2e: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:36 (962-978)
[001] 00001b2f: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 41:20-41:48 (962-990)
[001] 00001b30: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 41:9-41:19 (951-961)
[001] 00001b34: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 41:9-41:49 (951-991)
[001] 00001b35: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 41:9-41:49 (951-991)
[001] 00001b36: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 36:5-42:6 (804-998)
      00001b37: JUMPDEST                       // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b38: PUSH1 0x1e                     // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b3a: PUSH1 0x0                      // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b3c: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b3d: SLOAD                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b3e: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b3f: PUSH2 0x100                    // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b42: EXP                            // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b43: SWAP1                          // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b44: DIV                            // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b45: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b5a: AND                            // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b5b: DUP2                           // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
      00001b5c: JUMP                           // test/yard-fee-test/YardFee.t.sol: 11:5-11:41 (299-335)
[001] 00001b5d: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 00001b5e: PUSH3 0x1b67                   // test/yard-fee-test/YardFee.getFee.t.sol: 45:9-45:44 (1067-1102)
[001] 00001b62: PUSH3 0x11c3                   // test/yard-fee-test/YardFee.getFee.t.sol: 45:9-45:42 (1067-1100)
[001] 00001b66: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 45:9-45:44 (1067-1102)
[001] 00001b67: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 45:9-45:44 (1067-1102)
[001] 00001b68: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001b89: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b8b: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001b8c: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:17 (1113-1121)
[001] 00001ba1: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:17 (1113-1121)
[001] 00001ba2: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:17 (1113-1121)
[001] 00001ba7: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001ba9: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bab: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bac: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bad: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bae: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bb1: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bb2: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bb3: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bb4: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bc9: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:18-47:23 (1122-1127)
[001] 00001bca: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bcc: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bcd: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bce: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd3: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd4: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd6: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd7: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd8: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bd9: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bdb: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bdc: PUSH3 0x1be7                   // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be0: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be1: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be2: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be6: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be7: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001be8: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bea: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bec: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bed: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bee: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bef: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf0: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf1: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf3: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf4: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf5: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf6: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf7: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf8: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bf9: PUSH3 0x1c02                   // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001bfd: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001bfe: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c00: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c01: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c02: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c03: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c04: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c05: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c06: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c07: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c08: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c09: PUSH3 0x1c17                   // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c0d: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c0e: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c0f: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c11: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c12: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c13: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c14: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
      00001c16: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c17: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c18: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c19: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c1a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c1b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 47:9-47:24 (1113-1128)
[001] 00001c1c: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c1e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c20: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c21: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c22: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c23: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c26: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c27: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c28: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c29: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c3e: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:16 (1138-1145)
[001] 00001c3f: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:26 (1138-1155)
[001] 00001c54: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:26 (1138-1155)
[001] 00001c55: PUSH4 0x48cc5d75               // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:26 (1138-1155)
[001] 00001c5a: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c5c: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c5d: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c5e: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c63: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c64: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c66: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c67: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c68: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c69: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c6b: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c6c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c6e: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c70: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c71: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c72: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c73: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c74: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c75: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c77: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c78: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c79: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c7a: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c7b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c7c: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c7d: PUSH3 0x1c86                   // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c81: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c82: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c84: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c85: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c86: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c87: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c88: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c89: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c8a: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c8b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c8c: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c8d: PUSH3 0x1c9b                   // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c91: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c92: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c93: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c95: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c96: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c97: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c98: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
      00001c9a: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c9b: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c9c: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c9d: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c9e: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001c9f: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 48:9-48:28 (1138-1157)
[001] 00001ca0: PUSH3 0x1cad                   // test/yard-fee-test/YardFee.getFee.t.sol: 49:9-49:21 (1167-1179)
[001] 00001ca4: PUSH3 0x69780                  // test/yard-fee-test/YardFee.getFee.t.sol: 49:14-49:20 (1172-1178)
[001] 00001ca8: PUSH3 0x202c                   // test/yard-fee-test/YardFee.getFee.t.sol: 49:9-49:13 (1167-1171)
[001] 00001cac: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 49:9-49:21 (1167-1179)
[001] 00001cad: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 49:9-49:21 (1167-1179)
[001] 00001cae: PUSH3 0x1d51                   // test/yard-fee-test/YardFee.getFee.t.sol: 50:9-50:49 (1189-1229)
[001] 00001cb2: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:40-50:48 (1220-1228)
[001] 00001cb4: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:40-50:48 (1220-1228)
[001] 00001cb5: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cb7: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cb9: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cba: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cbb: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cbc: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cbf: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cc0: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cc1: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cc2: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cd7: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:27 (1200-1207)
[001] 00001cd8: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:34 (1200-1214)
[001] 00001ced: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:34 (1200-1214)
[001] 00001cee: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:34 (1200-1214)
[001] 00001cf3: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cf5: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cf6: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cf7: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cfc: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cfd: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001cff: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d00: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d01: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d02: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d04: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d05: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d07: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d09: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d0a: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d0b: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d0c: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d0d: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d0e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d10: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d11: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d12: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d13: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d14: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d15: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d16: PUSH3 0x1d24                   // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d1a: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d1b: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d1c: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d1e: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d1f: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d20: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d21: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
      00001d23: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d24: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d25: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d26: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d27: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d28: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d29: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d2b: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d2c: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d2d: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d2f: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d30: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d32: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d33: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d34: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d35: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d36: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d37: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d38: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3a: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3b: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3c: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3d: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d3f: PUSH3 0x1d4a                   // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d43: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d44: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d45: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d49: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d4a: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:36 (1200-1216)
[001] 00001d4b: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 50:20-50:48 (1200-1228)
[001] 00001d4c: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 50:9-50:19 (1189-1199)
[001] 00001d50: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 50:9-50:49 (1189-1229)
[001] 00001d51: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 50:9-50:49 (1189-1229)
[001] 00001d52: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 44:5-51:6 (1004-1236)
[001] 00001d53: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
[001] 00001d54: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/Base.sol: 9:68-9:96 (317-345)
[001] 00001d75: PUSH1 0x0                      // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001d77: SHR                            // lib/forge-std/src/Base.sol: 9:60-9:97 (309-346)
[001] 00001d78: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:17 (277-285)
[001] 00001d8d: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:17 (277-285)
[001] 00001d8e: PUSH4 0xca669fa7               // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:17 (277-285)
[001] 00001d93: PUSH1 0x1c                     // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d95: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d97: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d98: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d99: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d9a: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d9d: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d9e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001d9f: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001da0: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001db5: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:18-12:23 (286-291)
[001] 00001db6: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001db8: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001db9: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dba: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dbf: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc0: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc2: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc3: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc4: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc5: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc7: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dc8: PUSH3 0x1dd3                   // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dcc: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dcd: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dce: PUSH3 0x2451                   // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd2: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd3: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd4: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd6: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd8: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dd9: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dda: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001ddb: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001ddc: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001ddd: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001ddf: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de0: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de1: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de2: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de3: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de4: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de5: PUSH3 0x1dee                   // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001de9: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dea: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dec: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001ded: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001dee: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001def: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df0: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df1: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df2: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df3: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df4: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df5: PUSH3 0x1e03                   // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001df9: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dfa: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dfb: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dfd: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dfe: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001dff: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001e00: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
      00001e02: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e03: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e04: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e05: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e06: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e07: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 12:9-12:24 (277-292)
[001] 00001e08: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e0a: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e0c: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e0d: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e0e: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e0f: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e12: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e13: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e14: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e15: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e2a: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:16 (302-309)
[001] 00001e2b: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:31 (302-324)
[001] 00001e40: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:31 (302-324)
[001] 00001e41: PUSH4 0xac40876a               // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:31 (302-324)
[001] 00001e46: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 13:32-13:40 (325-333)
[001] 00001e48: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:32-13:40 (325-333)
[001] 00001e49: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e4b: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e4c: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e4d: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e52: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e53: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e55: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e56: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e57: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e58: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e5a: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e5b: PUSH3 0x1e66                   // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e5f: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e60: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e61: PUSH3 0x2978                   // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e65: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e66: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e67: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e69: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e6b: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e6c: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e6d: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e6e: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e6f: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e70: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e72: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e73: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e74: EXTCODESIZE                    // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e75: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e76: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e77: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e78: PUSH3 0x1e81                   // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e7c: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e7d: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e7f: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e80: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e81: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e82: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e83: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e84: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e85: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e86: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e87: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e88: PUSH3 0x1e96                   // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e8c: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e8d: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e8e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e90: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e91: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e92: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e93: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
      00001e95: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e96: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e97: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e98: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e99: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e9a: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 13:9-13:41 (302-334)
[001] 00001e9b: PUSH3 0x1f3e                   // test/yard-fee-test/YardFee.getFee.t.sol: 15:9-15:44 (345-380)
[001] 00001e9f: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:40-15:43 (376-379)
[001] 00001ea1: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:40-15:43 (376-379)
[001] 00001ea2: PUSH1 0x1b                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ea4: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ea6: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ea7: SLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ea8: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ea9: PUSH2 0x100                    // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001eac: EXP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ead: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001eae: DIV                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001eaf: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ec4: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:27 (356-363)
[001] 00001ec5: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:34 (356-370)
[001] 00001eda: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:34 (356-370)
[001] 00001edb: PUSH4 0xced72f87               // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:34 (356-370)
[001] 00001ee0: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ee2: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ee3: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ee4: PUSH4 0xffffffff               // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ee9: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eea: PUSH1 0xe0                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eec: SHL                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eed: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eee: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eef: PUSH1 0x4                      // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef1: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef2: PUSH1 0x20                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef4: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef6: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef7: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef8: DUP4                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001ef9: SUB                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001efa: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001efb: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001efd: DUP8                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001efe: GAS                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001eff: CALL                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f00: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f01: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f02: ISZERO                         // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f03: PUSH3 0x1f11                   // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f07: JUMPI                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f08: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f09: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f0b: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f0c: RETURNDATACOPY                 // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f0d: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f0e: PUSH1 0x0                      // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
      00001f10: REVERT                         // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f11: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f12: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f13: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f14: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f15: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f16: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f18: MLOAD                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f19: RETURNDATASIZE                 // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f1a: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f1c: NOT                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f1d: PUSH1 0x1f                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f1f: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f20: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f21: AND                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f22: DUP3                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f23: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f24: DUP1                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f25: PUSH1 0x40                     // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f27: MSTORE                         // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f28: POP                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f29: DUP2                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f2a: ADD                            // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f2b: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f2c: PUSH3 0x1f37                   // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f30: SWAP2                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f31: SWAP1                          // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f32: PUSH3 0x2946                   // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f36: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f37: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:36 (356-372)
[001] 00001f38: EQ                             // test/yard-fee-test/YardFee.getFee.t.sol: 15:20-15:43 (356-379)
[001] 00001f39: PUSH3 0x1fe1                   // test/yard-fee-test/YardFee.getFee.t.sol: 15:9-15:19 (345-355)
[001] 00001f3d: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 15:9-15:44 (345-380)
[001] 00001f3e: JUMPDEST                       // test/yard-fee-test/YardFee.getFee.t.sol: 15:9-15:44 (345-380)
[001] 00001f3f: JUMP                           // test/yard-fee-test/YardFee.getFee.t.sol: 11:5-16:6 (228-387)
      00001f40: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00001f41: PUSH1 0x60                     // lib/forge-std/src/StdInvariant.sol: 65:54-65:89 (2062-2097)
      00001f43: PUSH1 0xc                      // lib/forge-std/src/StdInvariant.sol: 66:30-66:48 (2130-2148)
      00001f45: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f46: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f47: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f48: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f4a: MUL                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f4b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f4d: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f4e: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f50: MLOAD                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f51: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f52: DUP2                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f53: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f54: PUSH1 0x40                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f56: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f57: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f58: SWAP3                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f59: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f5a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f5b: DUP2                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f5c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f5d: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f5e: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f60: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f61: DUP3                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f62: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f63: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f64: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f65: ISZERO                         // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f66: PUSH3 0x1fc6                   // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f6a: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f6b: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f6d: MUL                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f6e: DUP3                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f6f: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f70: SWAP2                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f71: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f72: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f74: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f75: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f77: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f79: SHA3                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f7a: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f7b: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f7c: DUP2                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f7d: PUSH1 0x0                      // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f7f: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f80: SLOAD                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f81: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f82: PUSH2 0x100                    // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f85: EXP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f86: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f87: DIV                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f88: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f9d: AND                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001f9e: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb3: AND                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb4: DUP2                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb5: MSTORE                         // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb6: PUSH1 0x20                     // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb8: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fb9: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fba: PUSH1 0x1                      // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fbc: ADD                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fbd: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fbe: DUP1                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fbf: DUP4                           // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc0: GT                             // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc1: PUSH3 0x1f7b                   // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc5: JUMPI                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc6: JUMPDEST                       // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc7: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc8: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fc9: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fca: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fcb: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fcc: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fcd: POP                            // lib/forge-std/src/StdInvariant.sol: 66:9-66:48 (2109-2148)
      00001fce: SWAP1                          // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00001fcf: JUMP                           // lib/forge-std/src/StdInvariant.sol: 65:5-67:6 (2013-2155)
      00001fd0: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd1: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd3: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd4: SLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd5: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd6: PUSH2 0x100                    // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fd9: EXP                            // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fda: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fdb: DIV                            // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fdc: PUSH1 0xff                     // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fde: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fdf: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
      00001fe0: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 38:5-38:31 (1572-1598)
[031] 00001fe1: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 93:5-98:6 (3262-3419)
[031] 00001fe2: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 94:14-94:23 (3322-3331)
[031] 00001fe3: PUSH3 0x2029                   // lib/forge-std/lib/ds-test/src/test.sol: 94:9-97:10 (3317-3413)
[031] 00001fe7: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 94:9-97:10 (3317-3413)
      00001fe8: PUSH32 0x41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50 // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002009: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000200b: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000200c: PUSH3 0x2016                   // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002010: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002011: PUSH3 0x2c2c                   // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002015: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002016: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002017: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      00002019: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201a: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201b: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201c: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201d: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201e: LOG1                           // lib/forge-std/lib/ds-test/src/test.sol: 95:18-95:48 (3352-3382)
      0000201f: PUSH3 0x2028                   // lib/forge-std/lib/ds-test/src/test.sol: 96:13-96:19 (3396-3402)
      00002023: PUSH3 0x2106                   // lib/forge-std/lib/ds-test/src/test.sol: 96:13-96:17 (3396-3400)
      00002027: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 96:13-96:19 (3396-3402)
      00002028: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 96:13-96:19 (3396-3402)
[031] 00002029: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 94:9-97:10 (3317-3413)
[031] 0000202a: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 93:5-98:6 (3262-3419)
[031] 0000202b: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 93:5-98:6 (3262-3419)
[007] 0000202c: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 529:5-531:6 (19817-19910)
[007] 0000202d: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/src/StdCheats.sol: 526:57-526:85 (19708-19736)
[007] 0000204e: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 526:49-526:86 (19700-19737)
[007] 00002050: SHR                            // lib/forge-std/src/StdCheats.sol: 526:49-526:86 (19700-19737)
[007] 00002051: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/src/StdCheats.sol: 530:9-530:16 (19872-19879)
[007] 00002066: AND                            // lib/forge-std/src/StdCheats.sol: 530:9-530:16 (19872-19879)
[007] 00002067: PUSH4 0xe5d6bf02               // lib/forge-std/src/StdCheats.sol: 530:9-530:16 (19872-19879)
[007] 0000206c: DUP3                           // lib/forge-std/src/StdCheats.sol: 530:35-530:39 (19898-19902)
[007] 0000206d: TIMESTAMP                      // lib/forge-std/src/StdCheats.sol: 530:17-530:32 (19880-19895)
[007] 0000206e: PUSH3 0x2079                   // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 00002072: SWAP2                          // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 00002073: SWAP1                          // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 00002074: PUSH3 0x2c7d                   // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 00002078: JUMP                           // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 00002079: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 530:17-530:39 (19880-19902)
[007] 0000207a: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000207c: MLOAD                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000207d: DUP3                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000207e: PUSH4 0xffffffff               // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002083: AND                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002084: PUSH1 0xe0                     // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002086: SHL                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002087: DUP2                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002088: MSTORE                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002089: PUSH1 0x4                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000208b: ADD                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000208c: PUSH3 0x2097                   // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002090: SWAP2                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002091: SWAP1                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002092: PUSH3 0x2978                   // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002096: JUMP                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002097: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 00002098: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000209a: PUSH1 0x40                     // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000209c: MLOAD                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000209d: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000209e: DUP4                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 0000209f: SUB                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a0: DUP2                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a1: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a3: DUP8                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a4: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a5: EXTCODESIZE                    // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a6: ISZERO                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a7: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a8: ISZERO                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020a9: PUSH3 0x20b2                   // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020ad: JUMPI                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020ae: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020b0: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020b1: REVERT                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b2: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b3: POP                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b4: GAS                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b5: CALL                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b6: ISZERO                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b7: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b8: ISZERO                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020b9: PUSH3 0x20c7                   // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020bd: JUMPI                          // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020be: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020bf: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020c1: DUP1                           // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020c2: RETURNDATACOPY                 // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020c3: RETURNDATASIZE                 // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020c4: PUSH1 0x0                      // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
      000020c6: REVERT                         // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020c7: JUMPDEST                       // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020c8: POP                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020c9: POP                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020ca: POP                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020cb: POP                            // lib/forge-std/src/StdCheats.sol: 530:9-530:40 (19872-19903)
[007] 000020cc: POP                            // lib/forge-std/src/StdCheats.sol: 529:5-531:6 (19817-19910)
[007] 000020cd: JUMP                           // lib/forge-std/src/StdCheats.sol: 529:5-531:6 (19817-19910)
[001] 000020ce: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 20:5-22:6 (587-670)
[001] 000020cf: PUSH3 0x20da                   // lib/forge-std/src/StdAssertions.sol: 21:9-21:26 (646-663)
[001] 000020d3: DUP2                           // lib/forge-std/src/StdAssertions.sol: 21:21-21:25 (658-662)
[001] 000020d4: ISZERO                         // lib/forge-std/src/StdAssertions.sol: 21:20-21:25 (657-662)
[001] 000020d5: PUSH3 0x1fe1                   // lib/forge-std/src/StdAssertions.sol: 21:9-21:19 (646-656)
[001] 000020d9: JUMP                           // lib/forge-std/src/StdAssertions.sol: 21:9-21:26 (646-663)
[001] 000020da: JUMPDEST                       // lib/forge-std/src/StdAssertions.sol: 21:9-21:26 (646-663)
[001] 000020db: POP                            // lib/forge-std/src/StdAssertions.sol: 20:5-22:6 (587-670)
[001] 000020dc: JUMP                           // lib/forge-std/src/StdAssertions.sol: 20:5-22:6 (587-670)
      000020dd: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 78:5-84:6 (2847-3089)
      000020de: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 78:54-78:58 (2896-2900)
      000020e0: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 79:9-79:29 (2912-2932)
      000020e1: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 79:32-79:33 (2935-2936)
      000020e3: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 79:9-79:33 (2912-2936)
      000020e4: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 79:9-79:33 (2912-2936)
      000020e5: PUSH20 0x7109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/lib/ds-test/src/test.sol: 81:41-81:83 (2997-3039)
      000020fa: EXTCODESIZE                    // lib/forge-std/lib/ds-test/src/test.sol: 81:29-81:84 (2985-3040)
      000020fb: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 81:13-81:84 (2969-3040)
      000020fc: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 81:13-81:84 (2969-3040)
      000020fd: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 83:31-83:32 (3081-3082)
      000020ff: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 83:16-83:28 (3066-3078)
      00002100: GT                             // lib/forge-std/lib/ds-test/src/test.sol: 83:16-83:32 (3066-3082)
      00002101: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 83:9-83:32 (3059-3082)
      00002102: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 83:9-83:32 (3059-3082)
      00002103: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 83:9-83:32 (3059-3082)
      00002104: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 78:5-84:6 (2847-3089)
      00002105: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 78:5-84:6 (2847-3089)
      00002106: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 65:5-76:6 (2409-2841)
      00002107: PUSH3 0x2110                   // lib/forge-std/lib/ds-test/src/test.sol: 66:13-66:29 (2456-2472)
      0000210b: PUSH3 0x20dd                   // lib/forge-std/lib/ds-test/src/test.sol: 66:13-66:27 (2456-2470)
      0000210f: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 66:13-66:29 (2456-2472)
      00002110: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 66:13-66:29 (2456-2472)
      00002111: ISZERO                         // lib/forge-std/lib/ds-test/src/test.sol: 66:9-74:10 (2452-2811)
      00002112: PUSH3 0x2267                   // lib/forge-std/lib/ds-test/src/test.sol: 66:9-74:10 (2452-2811)
      00002116: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 66:9-74:10 (2452-2811)
      00002117: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 67:14-67:25 (2489-2500)
      00002119: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/lib/ds-test/src/test.sol: 42:41-42:69 (1703-1731)
      0000213a: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000213c: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000213d: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      0000213f: SHL                            // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      00002140: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00002142: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      00002143: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // lib/forge-std/lib/ds-test/src/test.sol: 67:31-67:48 (2506-2523)
      00002158: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-67:48 (2506-2523)
      00002159: PUSH32 0x70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc4 // lib/forge-std/lib/ds-test/src/test.sol: 69:28-69:71 (2586-2629)
      0000217a: PUSH32 0x885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d // lib/forge-std/lib/ds-test/src/test.sol: 42:41-42:69 (1703-1731)
      0000219b: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000219d: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:33-42:70 (1695-1732)
      0000219e: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      000021a0: SHL                            // lib/forge-std/lib/ds-test/src/test.sol: 42:17-42:72 (1679-1734)
      000021a1: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      000021a3: SHR                            // lib/forge-std/lib/ds-test/src/test.sol: 42:9-42:73 (1671-1735)
      000021a4: PUSH32 0x6661696c65640000000000000000000000000000000000000000000000000000 // lib/forge-std/lib/ds-test/src/test.sol: 70:46-70:63 (2677-2694)
      000021c5: PUSH1 0x1                      // lib/forge-std/lib/ds-test/src/test.sol: 70:81-70:85 (2712-2716)
      000021c7: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 70:65-70:87 (2696-2718)
      000021c9: SHL                            // lib/forge-std/lib/ds-test/src/test.sol: 70:65-70:87 (2696-2718)
      000021ca: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021cc: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021cd: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021cf: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d0: PUSH3 0x21dd                   // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d4: SWAP4                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d5: SWAP3                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d6: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d7: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021d8: PUSH3 0x2cb8                   // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021dc: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021dd: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021de: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e0: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e1: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e3: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e4: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e5: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e6: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e7: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e8: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021e9: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021ea: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021ec: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 70:21-70:88 (2652-2719)
      000021ed: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021ef: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f0: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f2: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f3: PUSH3 0x21ff                   // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f7: SWAP3                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f8: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021f9: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021fa: PUSH3 0x2b23                   // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021fe: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      000021ff: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002200: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002202: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002203: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002205: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002206: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002207: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002208: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      00002209: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      0000220a: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      0000220b: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      0000220c: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      0000220e: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 68:17-71:18 (2541-2737)
      0000220f: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002211: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002212: PUSH3 0x221d                   // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002216: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002217: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002218: PUSH3 0x2b4f                   // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000221c: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000221d: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000221e: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002220: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002222: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002223: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002224: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002225: SUB                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002226: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002227: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002229: DUP7                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222a: GAS                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222b: CALL                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222c: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222d: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222e: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000222f: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002230: DUP1                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002231: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002233: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002234: EQ                             // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002235: PUSH3 0x225c                   // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002239: JUMPI                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000223a: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000223c: MLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000223d: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000223e: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000223f: PUSH1 0x1f                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002241: NOT                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002242: PUSH1 0x3f                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002244: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002245: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002246: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002247: DUP3                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002248: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002249: PUSH1 0x40                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000224b: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000224c: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000224d: DUP3                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000224e: MSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000224f: RETURNDATASIZE                 // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002250: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002252: PUSH1 0x20                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002254: DUP5                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002255: ADD                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002256: RETURNDATACOPY                 // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002257: PUSH3 0x2261                   // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000225b: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000225c: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000225d: PUSH1 0x60                     // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      0000225f: SWAP2                          // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002260: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002261: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002262: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:31-72:14 (2506-2751)
      00002263: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:13-72:14 (2488-2751)
      00002264: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 67:13-72:14 (2488-2751)
      00002265: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 67:13-72:14 (2488-2751)
      00002266: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 66:31-74:10 (2474-2811)
      00002267: JUMPDEST                       // lib/forge-std/lib/ds-test/src/test.sol: 66:9-74:10 (2452-2811)
      00002268: PUSH1 0x1                      // lib/forge-std/lib/ds-test/src/test.sol: 75:19-75:23 (2830-2834)
      0000226a: PUSH1 0x0                      // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:16 (2820-2827)
      0000226c: PUSH1 0x1                      // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:16 (2820-2827)
      0000226e: PUSH2 0x100                    // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002271: EXP                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002272: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002273: SLOAD                          // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002274: DUP2                           // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002275: PUSH1 0xff                     // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002277: MUL                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002278: NOT                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002279: AND                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227a: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227b: DUP4                           // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227c: ISZERO                         // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227d: ISZERO                         // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227e: MUL                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      0000227f: OR                             // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002280: SWAP1                          // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002281: SSTORE                         // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002282: POP                            // lib/forge-std/lib/ds-test/src/test.sol: 75:9-75:23 (2820-2834)
      00002283: JUMP                           // lib/forge-std/lib/ds-test/src/test.sol: 65:5-76:6 (2409-2841)
[010] 00002284: JUMPDEST                      
[010] 00002285: PUSH2 0xfb4                   
[010] 00002288: DUP1                          
[010] 00002289: PUSH3 0x2cf6                  
[010] 0000228d: DUP4                          
[010] 0000228e: CODECOPY                      
[010] 0000228f: ADD                           
[010] 00002290: SWAP1                         
[010] 00002291: JUMP                          
[039] 00002292: JUMPDEST                       // SRCID51: (7-133)
[039] 00002293: PUSH1 0x0                      // SRCID51: (44-51)
[039] 00002295: PUSH20 0xffffffffffffffffffffffffffffffffffffffff // SRCID51: (84-126)
[039] 000022aa: DUP3                           // SRCID51: (77-82)
[039] 000022ab: AND                            // SRCID51: (73-127)
[039] 000022ac: SWAP1                          // SRCID51: (62-127)
[039] 000022ad: POP                            // SRCID51: (62-127)
[039] 000022ae: SWAP2                          // SRCID51: (7-133)
[039] 000022af: SWAP1                          // SRCID51: (7-133)
[039] 000022b0: POP                            // SRCID51: (7-133)
[039] 000022b1: JUMP                           // SRCID51: (7-133)
[001] 000022b2: JUMPDEST                       // SRCID51: (139-199)
[001] 000022b3: PUSH1 0x0                      // SRCID51: (167-170)
[001] 000022b5: DUP2                           // SRCID51: (188-193)
[001] 000022b6: SWAP1                          // SRCID51: (181-193)
[001] 000022b7: POP                            // SRCID51: (181-193)
[001] 000022b8: SWAP2                          // SRCID51: (139-199)
[001] 000022b9: SWAP1                          // SRCID51: (139-199)
[001] 000022ba: POP                            // SRCID51: (139-199)
[001] 000022bb: JUMP                           // SRCID51: (139-199)
      000022bc: JUMPDEST                       // SRCID51: (205-347)
      000022bd: PUSH1 0x0                      // SRCID51: (255-264)
      000022bf: PUSH3 0x22dd                   // SRCID51: (288-341)
      000022c3: PUSH3 0x22d7                   // SRCID51: (306-340)
      000022c7: PUSH3 0x22d1                   // SRCID51: (315-339)
      000022cb: DUP5                           // SRCID51: (333-338)
      000022cc: PUSH3 0x2292                   // SRCID51: (315-339)
      000022d0: JUMP                           // SRCID51: (315-339)
      000022d1: JUMPDEST                       // SRCID51: (315-339)
      000022d2: PUSH3 0x22b2                   // SRCID51: (306-340)
      000022d6: JUMP                           // SRCID51: (306-340)
      000022d7: JUMPDEST                       // SRCID51: (306-340)
      000022d8: PUSH3 0x2292                   // SRCID51: (288-341)
      000022dc: JUMP                           // SRCID51: (288-341)
      000022dd: JUMPDEST                       // SRCID51: (288-341)
      000022de: SWAP1                          // SRCID51: (275-341)
      000022df: POP                            // SRCID51: (275-341)
      000022e0: SWAP2                          // SRCID51: (205-347)
      000022e1: SWAP1                          // SRCID51: (205-347)
      000022e2: POP                            // SRCID51: (205-347)
      000022e3: JUMP                           // SRCID51: (205-347)
      000022e4: JUMPDEST                       // SRCID51: (353-479)
      000022e5: PUSH1 0x0                      // SRCID51: (403-412)
      000022e7: PUSH3 0x22f1                   // SRCID51: (436-473)
      000022eb: DUP3                           // SRCID51: (467-472)
      000022ec: PUSH3 0x22bc                   // SRCID51: (436-473)
      000022f0: JUMP                           // SRCID51: (436-473)
      000022f1: JUMPDEST                       // SRCID51: (436-473)
      000022f2: SWAP1                          // SRCID51: (423-473)
      000022f3: POP                            // SRCID51: (423-473)
      000022f4: SWAP2                          // SRCID51: (353-479)
      000022f5: SWAP1                          // SRCID51: (353-479)
      000022f6: POP                            // SRCID51: (353-479)
      000022f7: JUMP                           // SRCID51: (353-479)
      000022f8: JUMPDEST                       // SRCID51: (485-628)
      000022f9: PUSH1 0x0                      // SRCID51: (552-561)
      000022fb: PUSH3 0x2305                   // SRCID51: (585-622)
      000022ff: DUP3                           // SRCID51: (616-621)
      00002300: PUSH3 0x22e4                   // SRCID51: (585-622)
      00002304: JUMP                           // SRCID51: (585-622)
      00002305: JUMPDEST                       // SRCID51: (585-622)
      00002306: SWAP1                          // SRCID51: (572-622)
      00002307: POP                            // SRCID51: (572-622)
      00002308: SWAP2                          // SRCID51: (485-628)
      00002309: SWAP1                          // SRCID51: (485-628)
      0000230a: POP                            // SRCID51: (485-628)
      0000230b: JUMP                           // SRCID51: (485-628)
      0000230c: JUMPDEST                       // SRCID51: (634-799)
      0000230d: PUSH3 0x2317                   // SRCID51: (738-792)
      00002311: DUP2                           // SRCID51: (786-791)
      00002312: PUSH3 0x22f8                   // SRCID51: (738-792)
      00002316: JUMP                           // SRCID51: (738-792)
      00002317: JUMPDEST                       // SRCID51: (738-792)
      00002318: DUP3                           // SRCID51: (733-736)
      00002319: MSTORE                         // SRCID51: (726-793)
      0000231a: POP                            // SRCID51: (634-799)
      0000231b: POP                            // SRCID51: (634-799)
      0000231c: JUMP                           // SRCID51: (634-799)
      0000231d: JUMPDEST                       // SRCID51: (805-1061)
      0000231e: PUSH1 0x0                      // SRCID51: (915-919)
      00002320: PUSH1 0x20                     // SRCID51: (953-955)
      00002322: DUP3                           // SRCID51: (942-951)
      00002323: ADD                            // SRCID51: (938-956)
      00002324: SWAP1                          // SRCID51: (930-956)
      00002325: POP                            // SRCID51: (930-956)
      00002326: PUSH3 0x2334                   // SRCID51: (966-1054)
      0000232a: PUSH1 0x0                      // SRCID51: (1051-1052)
      0000232c: DUP4                           // SRCID51: (1040-1049)
      0000232d: ADD                            // SRCID51: (1036-1053)
      0000232e: DUP5                           // SRCID51: (1027-1033)
      0000232f: PUSH3 0x230c                   // SRCID51: (966-1054)
      00002333: JUMP                           // SRCID51: (966-1054)
      00002334: JUMPDEST                       // SRCID51: (966-1054)
      00002335: SWAP3                          // SRCID51: (805-1061)
      00002336: SWAP2                          // SRCID51: (805-1061)
      00002337: POP                            // SRCID51: (805-1061)
      00002338: POP                            // SRCID51: (805-1061)
      00002339: JUMP                           // SRCID51: (805-1061)
      0000233a: JUMPDEST                       // SRCID51: (1067-1181)
      0000233b: PUSH1 0x0                      // SRCID51: (1134-1140)
      0000233d: DUP2                           // SRCID51: (1168-1173)
      0000233e: MLOAD                          // SRCID51: (1162-1174)
      0000233f: SWAP1                          // SRCID51: (1152-1174)
      00002340: POP                            // SRCID51: (1152-1174)
      00002341: SWAP2                          // SRCID51: (1067-1181)
      00002342: SWAP1                          // SRCID51: (1067-1181)
      00002343: POP                            // SRCID51: (1067-1181)
      00002344: JUMP                           // SRCID51: (1067-1181)
      00002345: JUMPDEST                       // SRCID51: (1187-1371)
      00002346: PUSH1 0x0                      // SRCID51: (1286-1297)
      00002348: DUP3                           // SRCID51: (1320-1326)
      00002349: DUP3                           // SRCID51: (1315-1318)
      0000234a: MSTORE                         // SRCID51: (1308-1327)
      0000234b: PUSH1 0x20                     // SRCID51: (1360-1364)
      0000234d: DUP3                           // SRCID51: (1355-1358)
      0000234e: ADD                            // SRCID51: (1351-1365)
      0000234f: SWAP1                          // SRCID51: (1336-1365)
      00002350: POP                            // SRCID51: (1336-1365)
      00002351: SWAP3                          // SRCID51: (1187-1371)
      00002352: SWAP2                          // SRCID51: (1187-1371)
      00002353: POP                            // SRCID51: (1187-1371)
      00002354: POP                            // SRCID51: (1187-1371)
      00002355: JUMP                           // SRCID51: (1187-1371)
      00002356: JUMPDEST                       // SRCID51: (1377-1509)
      00002357: PUSH1 0x0                      // SRCID51: (1444-1448)
      00002359: DUP2                           // SRCID51: (1467-1470)
      0000235a: SWAP1                          // SRCID51: (1459-1470)
      0000235b: POP                            // SRCID51: (1459-1470)
      0000235c: PUSH1 0x20                     // SRCID51: (1497-1501)
      0000235e: DUP3                           // SRCID51: (1492-1495)
      0000235f: ADD                            // SRCID51: (1488-1502)
      00002360: SWAP1                          // SRCID51: (1480-1502)
      00002361: POP                            // SRCID51: (1480-1502)
      00002362: SWAP2                          // SRCID51: (1377-1509)
      00002363: SWAP1                          // SRCID51: (1377-1509)
      00002364: POP                            // SRCID51: (1377-1509)
      00002365: JUMP                           // SRCID51: (1377-1509)
[039] 00002366: JUMPDEST                       // SRCID51: (1515-1611)
[039] 00002367: PUSH1 0x0                      // SRCID51: (1552-1559)
[039] 00002369: PUSH3 0x2373                   // SRCID51: (1581-1605)
[039] 0000236d: DUP3                           // SRCID51: (1599-1604)
[039] 0000236e: PUSH3 0x2292                   // SRCID51: (1581-1605)
[039] 00002372: JUMP                           // SRCID51: (1581-1605)
[039] 00002373: JUMPDEST                       // SRCID51: (1581-1605)
[039] 00002374: SWAP1                          // SRCID51: (1570-1605)
[039] 00002375: POP                            // SRCID51: (1570-1605)
[039] 00002376: SWAP2                          // SRCID51: (1515-1611)
[039] 00002377: SWAP1                          // SRCID51: (1515-1611)
[039] 00002378: POP                            // SRCID51: (1515-1611)
[039] 00002379: JUMP                           // SRCID51: (1515-1611)
      0000237a: JUMPDEST                       // SRCID51: (1617-1725)
      0000237b: PUSH3 0x2385                   // SRCID51: (1694-1718)
      0000237f: DUP2                           // SRCID51: (1712-1717)
      00002380: PUSH3 0x2366                   // SRCID51: (1694-1718)
      00002384: JUMP                           // SRCID51: (1694-1718)
      00002385: JUMPDEST                       // SRCID51: (1694-1718)
      00002386: DUP3                           // SRCID51: (1689-1692)
      00002387: MSTORE                         // SRCID51: (1682-1719)
      00002388: POP                            // SRCID51: (1617-1725)
      00002389: POP                            // SRCID51: (1617-1725)
      0000238a: JUMP                           // SRCID51: (1617-1725)
      0000238b: JUMPDEST                       // SRCID51: (1731-1910)
      0000238c: PUSH1 0x0                      // SRCID51: (1800-1810)
      0000238e: PUSH3 0x2399                   // SRCID51: (1821-1867)
      00002392: DUP4                           // SRCID51: (1863-1866)
      00002393: DUP4                           // SRCID51: (1855-1861)
      00002394: PUSH3 0x237a                   // SRCID51: (1821-1867)
      00002398: JUMP                           // SRCID51: (1821-1867)
      00002399: JUMPDEST                       // SRCID51: (1821-1867)
      0000239a: PUSH1 0x20                     // SRCID51: (1899-1903)
      0000239c: DUP4                           // SRCID51: (1894-1897)
      0000239d: ADD                            // SRCID51: (1890-1904)
      0000239e: SWAP1                          // SRCID51: (1876-1904)
      0000239f: POP                            // SRCID51: (1876-1904)
      000023a0: SWAP3                          // SRCID51: (1731-1910)
      000023a1: SWAP2                          // SRCID51: (1731-1910)
      000023a2: POP                            // SRCID51: (1731-1910)
      000023a3: POP                            // SRCID51: (1731-1910)
      000023a4: JUMP                           // SRCID51: (1731-1910)
      000023a5: JUMPDEST                       // SRCID51: (1916-2029)
      000023a6: PUSH1 0x0                      // SRCID51: (1986-1990)
      000023a8: PUSH1 0x20                     // SRCID51: (2018-2022)
      000023aa: DUP3                           // SRCID51: (2013-2016)
      000023ab: ADD                            // SRCID51: (2009-2023)
      000023ac: SWAP1                          // SRCID51: (2001-2023)
      000023ad: POP                            // SRCID51: (2001-2023)
      000023ae: SWAP2                          // SRCID51: (1916-2029)
      000023af: SWAP1                          // SRCID51: (1916-2029)
      000023b0: POP                            // SRCID51: (1916-2029)
      000023b1: JUMP                           // SRCID51: (1916-2029)
      000023b2: JUMPDEST                       // SRCID51: (2065-2797)
      000023b3: PUSH1 0x0                      // SRCID51: (2184-2187)
      000023b5: PUSH3 0x23bf                   // SRCID51: (2213-2267)
      000023b9: DUP3                           // SRCID51: (2261-2266)
      000023ba: PUSH3 0x233a                   // SRCID51: (2213-2267)
      000023be: JUMP                           // SRCID51: (2213-2267)
      000023bf: JUMPDEST                       // SRCID51: (2213-2267)
      000023c0: PUSH3 0x23cb                   // SRCID51: (2283-2369)
      000023c4: DUP2                           // SRCID51: (2362-2368)
      000023c5: DUP6                           // SRCID51: (2357-2360)
      000023c6: PUSH3 0x2345                   // SRCID51: (2283-2369)
      000023ca: JUMP                           // SRCID51: (2283-2369)
      000023cb: JUMPDEST                       // SRCID51: (2283-2369)
      000023cc: SWAP4                          // SRCID51: (2276-2369)
      000023cd: POP                            // SRCID51: (2276-2369)
      000023ce: PUSH3 0x23d8                   // SRCID51: (2393-2449)
      000023d2: DUP4                           // SRCID51: (2443-2448)
      000023d3: PUSH3 0x2356                   // SRCID51: (2393-2449)
      000023d7: JUMP                           // SRCID51: (2393-2449)
      000023d8: JUMPDEST                       // SRCID51: (2393-2449)
      000023d9: DUP1                           // SRCID51: (2472-2479)
      000023da: PUSH1 0x0                      // SRCID51: (2503-2504)
      000023dc: JUMPDEST                       // SRCID51: (2488-2772)
      000023dd: DUP4                           // SRCID51: (2513-2519)
      000023de: DUP2                           // SRCID51: (2510-2511)
      000023df: LT                             // SRCID51: (2507-2520)
      000023e0: ISZERO                         // SRCID51: (2488-2772)
      000023e1: PUSH3 0x240f                   // SRCID51: (2488-2772)
      000023e5: JUMPI                          // SRCID51: (2488-2772)
      000023e6: DUP2                           // SRCID51: (2589-2595)
      000023e7: MLOAD                          // SRCID51: (2583-2596)
      000023e8: PUSH3 0x23f3                   // SRCID51: (2616-2679)
      000023ec: DUP9                           // SRCID51: (2675-2678)
      000023ed: DUP3                           // SRCID51: (2660-2673)
      000023ee: PUSH3 0x238b                   // SRCID51: (2616-2679)
      000023f2: JUMP                           // SRCID51: (2616-2679)
      000023f3: JUMPDEST                       // SRCID51: (2616-2679)
      000023f4: SWAP8                          // SRCID51: (2609-2679)
      000023f5: POP                            // SRCID51: (2609-2679)
      000023f6: PUSH3 0x2400                   // SRCID51: (2702-2762)
      000023fa: DUP4                           // SRCID51: (2755-2761)
      000023fb: PUSH3 0x23a5                   // SRCID51: (2702-2762)
      000023ff: JUMP                           // SRCID51: (2702-2762)
      00002400: JUMPDEST                       // SRCID51: (2702-2762)
      00002401: SWAP3                          // SRCID51: (2692-2762)
      00002402: POP                            // SRCID51: (2692-2762)
      00002403: POP                            // SRCID51: (2548-2772)
      00002404: PUSH1 0x1                      // SRCID51: (2535-2536)
      00002406: DUP2                           // SRCID51: (2532-2533)
      00002407: ADD                            // SRCID51: (2528-2537)
      00002408: SWAP1                          // SRCID51: (2523-2537)
      00002409: POP                            // SRCID51: (2523-2537)
      0000240a: PUSH3 0x23dc                   // SRCID51: (2488-2772)
      0000240e: JUMP                           // SRCID51: (2488-2772)
      0000240f: JUMPDEST                       // SRCID51: (2488-2772)
      00002410: POP                            // SRCID51: (2492-2506)
      00002411: DUP6                           // SRCID51: (2788-2791)
      00002412: SWAP4                          // SRCID51: (2781-2791)
      00002413: POP                            // SRCID51: (2781-2791)
      00002414: POP                            // SRCID51: (2189-2797)
      00002415: POP                            // SRCID51: (2189-2797)
      00002416: POP                            // SRCID51: (2189-2797)
      00002417: SWAP3                          // SRCID51: (2065-2797)
      00002418: SWAP2                          // SRCID51: (2065-2797)
      00002419: POP                            // SRCID51: (2065-2797)
      0000241a: POP                            // SRCID51: (2065-2797)
      0000241b: JUMP                           // SRCID51: (2065-2797)
      0000241c: JUMPDEST                       // SRCID51: (2803-3176)
      0000241d: PUSH1 0x0                      // SRCID51: (2946-2950)
      0000241f: PUSH1 0x20                     // SRCID51: (2984-2986)
      00002421: DUP3                           // SRCID51: (2973-2982)
      00002422: ADD                            // SRCID51: (2969-2987)
      00002423: SWAP1                          // SRCID51: (2961-2987)
      00002424: POP                            // SRCID51: (2961-2987)
      00002425: DUP2                           // SRCID51: (3033-3042)
      00002426: DUP2                           // SRCID51: (3027-3031)
      00002427: SUB                            // SRCID51: (3023-3043)
      00002428: PUSH1 0x0                      // SRCID51: (3019-3020)
      0000242a: DUP4                           // SRCID51: (3008-3017)
      0000242b: ADD                            // SRCID51: (3004-3021)
      0000242c: MSTORE                         // SRCID51: (2997-3044)
      0000242d: PUSH3 0x2438                   // SRCID51: (3061-3169)
      00002431: DUP2                           // SRCID51: (3164-3168)
      00002432: DUP5                           // SRCID51: (3155-3161)
      00002433: PUSH3 0x23b2                   // SRCID51: (3061-3169)
      00002437: JUMP                           // SRCID51: (3061-3169)
      00002438: JUMPDEST                       // SRCID51: (3061-3169)
      00002439: SWAP1                          // SRCID51: (3053-3169)
      0000243a: POP                            // SRCID51: (3053-3169)
      0000243b: SWAP3                          // SRCID51: (2803-3176)
      0000243c: SWAP2                          // SRCID51: (2803-3176)
      0000243d: POP                            // SRCID51: (2803-3176)
      0000243e: POP                            // SRCID51: (2803-3176)
      0000243f: JUMP                           // SRCID51: (2803-3176)
[029] 00002440: JUMPDEST                       // SRCID51: (3182-3300)
[029] 00002441: PUSH3 0x244b                   // SRCID51: (3269-3293)
[029] 00002445: DUP2                           // SRCID51: (3287-3292)
[029] 00002446: PUSH3 0x2366                   // SRCID51: (3269-3293)
[029] 0000244a: JUMP                           // SRCID51: (3269-3293)
[029] 0000244b: JUMPDEST                       // SRCID51: (3269-3293)
[029] 0000244c: DUP3                           // SRCID51: (3264-3267)
[029] 0000244d: MSTORE                         // SRCID51: (3257-3294)
[029] 0000244e: POP                            // SRCID51: (3182-3300)
[029] 0000244f: POP                            // SRCID51: (3182-3300)
[029] 00002450: JUMP                           // SRCID51: (3182-3300)
[019] 00002451: JUMPDEST                       // SRCID51: (3306-3528)
[019] 00002452: PUSH1 0x0                      // SRCID51: (3399-3403)
[019] 00002454: PUSH1 0x20                     // SRCID51: (3437-3439)
[019] 00002456: DUP3                           // SRCID51: (3426-3435)
[019] 00002457: ADD                            // SRCID51: (3422-3440)
[019] 00002458: SWAP1                          // SRCID51: (3414-3440)
[019] 00002459: POP                            // SRCID51: (3414-3440)
[019] 0000245a: PUSH3 0x2468                   // SRCID51: (3450-3521)
[019] 0000245e: PUSH1 0x0                      // SRCID51: (3518-3519)
[019] 00002460: DUP4                           // SRCID51: (3507-3516)
[019] 00002461: ADD                            // SRCID51: (3503-3520)
[019] 00002462: DUP5                           // SRCID51: (3494-3500)
[019] 00002463: PUSH3 0x2440                   // SRCID51: (3450-3521)
[019] 00002467: JUMP                           // SRCID51: (3450-3521)
[019] 00002468: JUMPDEST                       // SRCID51: (3450-3521)
[019] 00002469: SWAP3                          // SRCID51: (3306-3528)
[019] 0000246a: SWAP2                          // SRCID51: (3306-3528)
[019] 0000246b: POP                            // SRCID51: (3306-3528)
[019] 0000246c: POP                            // SRCID51: (3306-3528)
[019] 0000246d: JUMP                           // SRCID51: (3306-3528)
      0000246e: JUMPDEST                       // SRCID51: (3534-3678)
      0000246f: PUSH1 0x0                      // SRCID51: (3631-3637)
      00002471: DUP2                           // SRCID51: (3665-3670)
      00002472: MLOAD                          // SRCID51: (3659-3671)
      00002473: SWAP1                          // SRCID51: (3649-3671)
      00002474: POP                            // SRCID51: (3649-3671)
      00002475: SWAP2                          // SRCID51: (3534-3678)
      00002476: SWAP1                          // SRCID51: (3534-3678)
      00002477: POP                            // SRCID51: (3534-3678)
      00002478: JUMP                           // SRCID51: (3534-3678)
      00002479: JUMPDEST                       // SRCID51: (3684-3898)
      0000247a: PUSH1 0x0                      // SRCID51: (3813-3824)
      0000247c: DUP3                           // SRCID51: (3847-3853)
      0000247d: DUP3                           // SRCID51: (3842-3845)
      0000247e: MSTORE                         // SRCID51: (3835-3854)
      0000247f: PUSH1 0x20                     // SRCID51: (3887-3891)
      00002481: DUP3                           // SRCID51: (3882-3885)
      00002482: ADD                            // SRCID51: (3878-3892)
      00002483: SWAP1                          // SRCID51: (3863-3892)
      00002484: POP                            // SRCID51: (3863-3892)
      00002485: SWAP3                          // SRCID51: (3684-3898)
      00002486: SWAP2                          // SRCID51: (3684-3898)
      00002487: POP                            // SRCID51: (3684-3898)
      00002488: POP                            // SRCID51: (3684-3898)
      00002489: JUMP                           // SRCID51: (3684-3898)
      0000248a: JUMPDEST                       // SRCID51: (3904-4066)
      0000248b: PUSH1 0x0                      // SRCID51: (4001-4005)
      0000248d: DUP2                           // SRCID51: (4024-4027)
      0000248e: SWAP1                          // SRCID51: (4016-4027)
      0000248f: POP                            // SRCID51: (4016-4027)
      00002490: PUSH1 0x20                     // SRCID51: (4054-4058)
      00002492: DUP3                           // SRCID51: (4049-4052)
      00002493: ADD                            // SRCID51: (4045-4059)
      00002494: SWAP1                          // SRCID51: (4037-4059)
      00002495: POP                            // SRCID51: (4037-4059)
      00002496: SWAP2                          // SRCID51: (3904-4066)
      00002497: SWAP1                          // SRCID51: (3904-4066)
      00002498: POP                            // SRCID51: (3904-4066)
      00002499: JUMP                           // SRCID51: (3904-4066)
      0000249a: JUMPDEST                       // SRCID51: (4072-4185)
      0000249b: PUSH1 0x0                      // SRCID51: (4138-4144)
      0000249d: DUP2                           // SRCID51: (4172-4177)
      0000249e: MLOAD                          // SRCID51: (4166-4178)
      0000249f: SWAP1                          // SRCID51: (4156-4178)
      000024a0: POP                            // SRCID51: (4156-4178)
      000024a1: SWAP2                          // SRCID51: (4072-4185)
      000024a2: SWAP1                          // SRCID51: (4072-4185)
      000024a3: POP                            // SRCID51: (4072-4185)
      000024a4: JUMP                           // SRCID51: (4072-4185)
      000024a5: JUMPDEST                       // SRCID51: (4191-4364)
      000024a6: PUSH1 0x0                      // SRCID51: (4279-4290)
      000024a8: DUP3                           // SRCID51: (4313-4319)
      000024a9: DUP3                           // SRCID51: (4308-4311)
      000024aa: MSTORE                         // SRCID51: (4301-4320)
      000024ab: PUSH1 0x20                     // SRCID51: (4353-4357)
      000024ad: DUP3                           // SRCID51: (4348-4351)
      000024ae: ADD                            // SRCID51: (4344-4358)
      000024af: SWAP1                          // SRCID51: (4329-4358)
      000024b0: POP                            // SRCID51: (4329-4358)
      000024b1: SWAP3                          // SRCID51: (4191-4364)
      000024b2: SWAP2                          // SRCID51: (4191-4364)
      000024b3: POP                            // SRCID51: (4191-4364)
      000024b4: POP                            // SRCID51: (4191-4364)
      000024b5: JUMP                           // SRCID51: (4191-4364)
      000024b6: JUMPDEST                       // SRCID51: (4370-4501)
      000024b7: PUSH1 0x0                      // SRCID51: (4436-4440)
      000024b9: DUP2                           // SRCID51: (4459-4462)
      000024ba: SWAP1                          // SRCID51: (4451-4462)
      000024bb: POP                            // SRCID51: (4451-4462)
      000024bc: PUSH1 0x20                     // SRCID51: (4489-4493)
      000024be: DUP3                           // SRCID51: (4484-4487)
      000024bf: ADD                            // SRCID51: (4480-4494)
      000024c0: SWAP1                          // SRCID51: (4472-4494)
      000024c1: POP                            // SRCID51: (4472-4494)
      000024c2: SWAP2                          // SRCID51: (4370-4501)
      000024c3: SWAP1                          // SRCID51: (4370-4501)
      000024c4: POP                            // SRCID51: (4370-4501)
      000024c5: JUMP                           // SRCID51: (4370-4501)
      000024c6: JUMPDEST                       // SRCID51: (4507-4656)
      000024c7: PUSH1 0x0                      // SRCID51: (4543-4550)
      000024c9: PUSH32 0xffffffff00000000000000000000000000000000000000000000000000000000 // SRCID51: (4583-4649)
      000024ea: DUP3                           // SRCID51: (4576-4581)
      000024eb: AND                            // SRCID51: (4572-4650)
      000024ec: SWAP1                          // SRCID51: (4561-4650)
      000024ed: POP                            // SRCID51: (4561-4650)
      000024ee: SWAP2                          // SRCID51: (4507-4656)
      000024ef: SWAP1                          // SRCID51: (4507-4656)
      000024f0: POP                            // SRCID51: (4507-4656)
      000024f1: JUMP                           // SRCID51: (4507-4656)
      000024f2: JUMPDEST                       // SRCID51: (4662-4767)
      000024f3: PUSH3 0x24fd                   // SRCID51: (4737-4760)
      000024f7: DUP2                           // SRCID51: (4754-4759)
      000024f8: PUSH3 0x24c6                   // SRCID51: (4737-4760)
      000024fc: JUMP                           // SRCID51: (4737-4760)
      000024fd: JUMPDEST                       // SRCID51: (4737-4760)
      000024fe: DUP3                           // SRCID51: (4732-4735)
      000024ff: MSTORE                         // SRCID51: (4725-4761)
      00002500: POP                            // SRCID51: (4662-4767)
      00002501: POP                            // SRCID51: (4662-4767)
      00002502: JUMP                           // SRCID51: (4662-4767)
      00002503: JUMPDEST                       // SRCID51: (4773-4948)
      00002504: PUSH1 0x0                      // SRCID51: (4840-4850)
      00002506: PUSH3 0x2511                   // SRCID51: (4861-4905)
      0000250a: DUP4                           // SRCID51: (4901-4904)
      0000250b: DUP4                           // SRCID51: (4893-4899)
      0000250c: PUSH3 0x24f2                   // SRCID51: (4861-4905)
      00002510: JUMP                           // SRCID51: (4861-4905)
      00002511: JUMPDEST                       // SRCID51: (4861-4905)
      00002512: PUSH1 0x20                     // SRCID51: (4937-4941)
      00002514: DUP4                           // SRCID51: (4932-4935)
      00002515: ADD                            // SRCID51: (4928-4942)
      00002516: SWAP1                          // SRCID51: (4914-4942)
      00002517: POP                            // SRCID51: (4914-4942)
      00002518: SWAP3                          // SRCID51: (4773-4948)
      00002519: SWAP2                          // SRCID51: (4773-4948)
      0000251a: POP                            // SRCID51: (4773-4948)
      0000251b: POP                            // SRCID51: (4773-4948)
      0000251c: JUMP                           // SRCID51: (4773-4948)
      0000251d: JUMPDEST                       // SRCID51: (4954-5066)
      0000251e: PUSH1 0x0                      // SRCID51: (5023-5027)
      00002520: PUSH1 0x20                     // SRCID51: (5055-5059)
      00002522: DUP3                           // SRCID51: (5050-5053)
      00002523: ADD                            // SRCID51: (5046-5060)
      00002524: SWAP1                          // SRCID51: (5038-5060)
      00002525: POP                            // SRCID51: (5038-5060)
      00002526: SWAP2                          // SRCID51: (4954-5066)
      00002527: SWAP1                          // SRCID51: (4954-5066)
      00002528: POP                            // SRCID51: (4954-5066)
      00002529: JUMP                           // SRCID51: (4954-5066)
      0000252a: JUMPDEST                       // SRCID51: (5100-5804)
      0000252b: PUSH1 0x0                      // SRCID51: (5207-5210)
      0000252d: PUSH3 0x2537                   // SRCID51: (5236-5289)
      00002531: DUP3                           // SRCID51: (5283-5288)
      00002532: PUSH3 0x249a                   // SRCID51: (5236-5289)
      00002536: JUMP                           // SRCID51: (5236-5289)
      00002537: JUMPDEST                       // SRCID51: (5236-5289)
      00002538: PUSH3 0x2543                   // SRCID51: (5305-5380)
      0000253c: DUP2                           // SRCID51: (5373-5379)
      0000253d: DUP6                           // SRCID51: (5368-5371)
      0000253e: PUSH3 0x24a5                   // SRCID51: (5305-5380)
      00002542: JUMP                           // SRCID51: (5305-5380)
      00002543: JUMPDEST                       // SRCID51: (5305-5380)
      00002544: SWAP4                          // SRCID51: (5298-5380)
      00002545: POP                            // SRCID51: (5298-5380)
      00002546: PUSH3 0x2550                   // SRCID51: (5404-5459)
      0000254a: DUP4                           // SRCID51: (5453-5458)
      0000254b: PUSH3 0x24b6                   // SRCID51: (5404-5459)
      0000254f: JUMP                           // SRCID51: (5404-5459)
      00002550: JUMPDEST                       // SRCID51: (5404-5459)
      00002551: DUP1                           // SRCID51: (5482-5489)
      00002552: PUSH1 0x0                      // SRCID51: (5513-5514)
      00002554: JUMPDEST                       // SRCID51: (5498-5779)
      00002555: DUP4                           // SRCID51: (5523-5529)
      00002556: DUP2                           // SRCID51: (5520-5521)
      00002557: LT                             // SRCID51: (5517-5530)
      00002558: ISZERO                         // SRCID51: (5498-5779)
      00002559: PUSH3 0x2587                   // SRCID51: (5498-5779)
      0000255d: JUMPI                          // SRCID51: (5498-5779)
      0000255e: DUP2                           // SRCID51: (5599-5605)
      0000255f: MLOAD                          // SRCID51: (5593-5606)
      00002560: PUSH3 0x256b                   // SRCID51: (5626-5687)
      00002564: DUP9                           // SRCID51: (5683-5686)
      00002565: DUP3                           // SRCID51: (5668-5681)
      00002566: PUSH3 0x2503                   // SRCID51: (5626-5687)
      0000256a: JUMP                           // SRCID51: (5626-5687)
      0000256b: JUMPDEST                       // SRCID51: (5626-5687)
      0000256c: SWAP8                          // SRCID51: (5619-5687)
      0000256d: POP                            // SRCID51: (5619-5687)
      0000256e: PUSH3 0x2578                   // SRCID51: (5710-5769)
      00002572: DUP4                           // SRCID51: (5762-5768)
      00002573: PUSH3 0x251d                   // SRCID51: (5710-5769)
      00002577: JUMP                           // SRCID51: (5710-5769)
      00002578: JUMPDEST                       // SRCID51: (5710-5769)
      00002579: SWAP3                          // SRCID51: (5700-5769)
      0000257a: POP                            // SRCID51: (5700-5769)
      0000257b: POP                            // SRCID51: (5558-5779)
      0000257c: PUSH1 0x1                      // SRCID51: (5545-5546)
      0000257e: DUP2                           // SRCID51: (5542-5543)
      0000257f: ADD                            // SRCID51: (5538-5547)
      00002580: SWAP1                          // SRCID51: (5533-5547)
      00002581: POP                            // SRCID51: (5533-5547)
      00002582: PUSH3 0x2554                   // SRCID51: (5498-5779)
      00002586: JUMP                           // SRCID51: (5498-5779)
      00002587: JUMPDEST                       // SRCID51: (5498-5779)
      00002588: POP                            // SRCID51: (5502-5516)
      00002589: DUP6                           // SRCID51: (5795-5798)
      0000258a: SWAP4                          // SRCID51: (5788-5798)
      0000258b: POP                            // SRCID51: (5788-5798)
      0000258c: POP                            // SRCID51: (5212-5804)
      0000258d: POP                            // SRCID51: (5212-5804)
      0000258e: POP                            // SRCID51: (5212-5804)
      0000258f: SWAP3                          // SRCID51: (5100-5804)
      00002590: SWAP2                          // SRCID51: (5100-5804)
      00002591: POP                            // SRCID51: (5100-5804)
      00002592: POP                            // SRCID51: (5100-5804)
      00002593: JUMP                           // SRCID51: (5100-5804)
      00002594: JUMPDEST                       // SRCID51: (5886-6525)
      00002595: PUSH1 0x0                      // SRCID51: (6005-6008)
      00002597: PUSH1 0x40                     // SRCID51: (6041-6045)
      00002599: DUP4                           // SRCID51: (6036-6039)
      0000259a: ADD                            // SRCID51: (6032-6046)
      0000259b: PUSH1 0x0                      // SRCID51: (6128-6132)
      0000259d: DUP4                           // SRCID51: (6121-6126)
      0000259e: ADD                            // SRCID51: (6117-6133)
      0000259f: MLOAD                          // SRCID51: (6111-6134)
      000025a0: PUSH3 0x25ae                   // SRCID51: (6147-6210)
      000025a4: PUSH1 0x0                      // SRCID51: (6204-6208)
      000025a6: DUP7                           // SRCID51: (6199-6202)
      000025a7: ADD                            // SRCID51: (6195-6209)
      000025a8: DUP3                           // SRCID51: (6181-6193)
      000025a9: PUSH3 0x237a                   // SRCID51: (6147-6210)
      000025ad: JUMP                           // SRCID51: (6147-6210)
      000025ae: JUMPDEST                       // SRCID51: (6147-6210)
      000025af: POP                            // SRCID51: (6056-6220)
      000025b0: PUSH1 0x20                     // SRCID51: (6307-6311)
      000025b2: DUP4                           // SRCID51: (6300-6305)
      000025b3: ADD                            // SRCID51: (6296-6312)
      000025b4: MLOAD                          // SRCID51: (6290-6313)
      000025b5: DUP5                           // SRCID51: (6360-6363)
      000025b6: DUP3                           // SRCID51: (6354-6358)
      000025b7: SUB                            // SRCID51: (6350-6364)
      000025b8: PUSH1 0x20                     // SRCID51: (6343-6347)
      000025ba: DUP7                           // SRCID51: (6338-6341)
      000025bb: ADD                            // SRCID51: (6334-6348)
      000025bc: MSTORE                         // SRCID51: (6327-6365)
      000025bd: PUSH3 0x25c8                   // SRCID51: (6386-6487)
      000025c1: DUP3                           // SRCID51: (6482-6486)
      000025c2: DUP3                           // SRCID51: (6468-6480)
      000025c3: PUSH3 0x252a                   // SRCID51: (6386-6487)
      000025c7: JUMP                           // SRCID51: (6386-6487)
      000025c8: JUMPDEST                       // SRCID51: (6386-6487)
      000025c9: SWAP2                          // SRCID51: (6378-6487)
      000025ca: POP                            // SRCID51: (6378-6487)
      000025cb: POP                            // SRCID51: (6230-6498)
      000025cc: DUP1                           // SRCID51: (6515-6519)
      000025cd: SWAP2                          // SRCID51: (6508-6519)
      000025ce: POP                            // SRCID51: (6508-6519)
      000025cf: POP                            // SRCID51: (6010-6525)
      000025d0: SWAP3                          // SRCID51: (5886-6525)
      000025d1: SWAP2                          // SRCID51: (5886-6525)
      000025d2: POP                            // SRCID51: (5886-6525)
      000025d3: POP                            // SRCID51: (5886-6525)
      000025d4: JUMP                           // SRCID51: (5886-6525)
      000025d5: JUMPDEST                       // SRCID51: (6531-6807)
      000025d6: PUSH1 0x0                      // SRCID51: (6660-6670)
      000025d8: PUSH3 0x25e3                   // SRCID51: (6695-6801)
      000025dc: DUP4                           // SRCID51: (6797-6800)
      000025dd: DUP4                           // SRCID51: (6789-6795)
      000025de: PUSH3 0x2594                   // SRCID51: (6695-6801)
      000025e2: JUMP                           // SRCID51: (6695-6801)
      000025e3: JUMPDEST                       // SRCID51: (6695-6801)
      000025e4: SWAP1                          // SRCID51: (6681-6801)
      000025e5: POP                            // SRCID51: (6681-6801)
      000025e6: SWAP3                          // SRCID51: (6531-6807)
      000025e7: SWAP2                          // SRCID51: (6531-6807)
      000025e8: POP                            // SRCID51: (6531-6807)
      000025e9: POP                            // SRCID51: (6531-6807)
      000025ea: JUMP                           // SRCID51: (6531-6807)
      000025eb: JUMPDEST                       // SRCID51: (6813-6956)
      000025ec: PUSH1 0x0                      // SRCID51: (6913-6917)
      000025ee: PUSH1 0x20                     // SRCID51: (6945-6949)
      000025f0: DUP3                           // SRCID51: (6940-6943)
      000025f1: ADD                            // SRCID51: (6936-6950)
      000025f2: SWAP1                          // SRCID51: (6928-6950)
      000025f3: POP                            // SRCID51: (6928-6950)
      000025f4: SWAP2                          // SRCID51: (6813-6956)
      000025f5: SWAP1                          // SRCID51: (6813-6956)
      000025f6: POP                            // SRCID51: (6813-6956)
      000025f7: JUMP                           // SRCID51: (6813-6956)
      000025f8: JUMPDEST                       // SRCID51: (7042-8193)
      000025f9: PUSH1 0x0                      // SRCID51: (7221-7224)
      000025fb: PUSH3 0x2605                   // SRCID51: (7250-7334)
      000025ff: DUP3                           // SRCID51: (7328-7333)
      00002600: PUSH3 0x246e                   // SRCID51: (7250-7334)
      00002604: JUMP                           // SRCID51: (7250-7334)
      00002605: JUMPDEST                       // SRCID51: (7250-7334)
      00002606: PUSH3 0x2611                   // SRCID51: (7350-7466)
      0000260a: DUP2                           // SRCID51: (7459-7465)
      0000260b: DUP6                           // SRCID51: (7454-7457)
      0000260c: PUSH3 0x2479                   // SRCID51: (7350-7466)
      00002610: JUMP                           // SRCID51: (7350-7466)
      00002611: JUMPDEST                       // SRCID51: (7350-7466)
      00002612: SWAP4                          // SRCID51: (7343-7466)
      00002613: POP                            // SRCID51: (7343-7466)
      00002614: DUP4                           // SRCID51: (7492-7495)
      00002615: PUSH1 0x20                     // SRCID51: (7537-7541)
      00002617: DUP3                           // SRCID51: (7529-7535)
      00002618: MUL                            // SRCID51: (7525-7542)
      00002619: DUP6                           // SRCID51: (7520-7523)
      0000261a: ADD                            // SRCID51: (7516-7543)
      0000261b: PUSH3 0x2625                   // SRCID51: (7567-7653)
      0000261f: DUP6                           // SRCID51: (7647-7652)
      00002620: PUSH3 0x248a                   // SRCID51: (7567-7653)
      00002624: JUMP                           // SRCID51: (7567-7653)
      00002625: JUMPDEST                       // SRCID51: (7567-7653)
      00002626: DUP1                           // SRCID51: (7676-7683)
      00002627: PUSH1 0x0                      // SRCID51: (7707-7708)
      00002629: JUMPDEST                       // SRCID51: (7692-8148)
      0000262a: DUP6                           // SRCID51: (7717-7723)
      0000262b: DUP2                           // SRCID51: (7714-7715)
      0000262c: LT                             // SRCID51: (7711-7724)
      0000262d: ISZERO                         // SRCID51: (7692-8148)
      0000262e: PUSH3 0x2667                   // SRCID51: (7692-8148)
      00002632: JUMPI                          // SRCID51: (7692-8148)
      00002633: DUP5                           // SRCID51: (7788-7797)
      00002634: DUP5                           // SRCID51: (7782-7786)
      00002635: SUB                            // SRCID51: (7778-7798)
      00002636: DUP10                          // SRCID51: (7773-7776)
      00002637: MSTORE                         // SRCID51: (7766-7799)
      00002638: DUP2                           // SRCID51: (7839-7845)
      00002639: MLOAD                          // SRCID51: (7833-7846)
      0000263a: PUSH3 0x2645                   // SRCID51: (7867-7991)
      0000263e: DUP6                           // SRCID51: (7986-7990)
      0000263f: DUP3                           // SRCID51: (7971-7984)
      00002640: PUSH3 0x25d5                   // SRCID51: (7867-7991)
      00002644: JUMP                           // SRCID51: (7867-7991)
      00002645: JUMPDEST                       // SRCID51: (7867-7991)
      00002646: SWAP5                          // SRCID51: (7859-7991)
      00002647: POP                            // SRCID51: (7859-7991)
      00002648: PUSH3 0x2652                   // SRCID51: (8014-8104)
      0000264c: DUP4                           // SRCID51: (8097-8103)
      0000264d: PUSH3 0x25eb                   // SRCID51: (8014-8104)
      00002651: JUMP                           // SRCID51: (8014-8104)
      00002652: JUMPDEST                       // SRCID51: (8014-8104)
      00002653: SWAP3                          // SRCID51: (8004-8104)
      00002654: POP                            // SRCID51: (8004-8104)
      00002655: PUSH1 0x20                     // SRCID51: (8133-8137)
      00002657: DUP11                          // SRCID51: (8128-8131)
      00002658: ADD                            // SRCID51: (8124-8138)
      00002659: SWAP10                         // SRCID51: (8117-8138)
      0000265a: POP                            // SRCID51: (8117-8138)
      0000265b: POP                            // SRCID51: (7752-8148)
      0000265c: PUSH1 0x1                      // SRCID51: (7739-7740)
      0000265e: DUP2                           // SRCID51: (7736-7737)
      0000265f: ADD                            // SRCID51: (7732-7741)
      00002660: SWAP1                          // SRCID51: (7727-7741)
      00002661: POP                            // SRCID51: (7727-7741)
      00002662: PUSH3 0x2629                   // SRCID51: (7692-8148)
      00002666: JUMP                           // SRCID51: (7692-8148)
      00002667: JUMPDEST                       // SRCID51: (7692-8148)
      00002668: POP                            // SRCID51: (7696-7710)
      00002669: DUP3                           // SRCID51: (8164-8168)
      0000266a: SWAP8                          // SRCID51: (8157-8168)
      0000266b: POP                            // SRCID51: (8157-8168)
      0000266c: DUP8                           // SRCID51: (8184-8187)
      0000266d: SWAP6                          // SRCID51: (8177-8187)
      0000266e: POP                            // SRCID51: (8177-8187)
      0000266f: POP                            // SRCID51: (7226-8193)
      00002670: POP                            // SRCID51: (7226-8193)
      00002671: POP                            // SRCID51: (7226-8193)
      00002672: POP                            // SRCID51: (7226-8193)
      00002673: POP                            // SRCID51: (7226-8193)
      00002674: SWAP3                          // SRCID51: (7042-8193)
      00002675: SWAP2                          // SRCID51: (7042-8193)
      00002676: POP                            // SRCID51: (7042-8193)
      00002677: POP                            // SRCID51: (7042-8193)
      00002678: JUMP                           // SRCID51: (7042-8193)
      00002679: JUMPDEST                       // SRCID51: (8199-8692)
      0000267a: PUSH1 0x0                      // SRCID51: (8402-8406)
      0000267c: PUSH1 0x20                     // SRCID51: (8440-8442)
      0000267e: DUP3                           // SRCID51: (8429-8438)
      0000267f: ADD                            // SRCID51: (8425-8443)
      00002680: SWAP1                          // SRCID51: (8417-8443)
      00002681: POP                            // SRCID51: (8417-8443)
      00002682: DUP2                           // SRCID51: (8489-8498)
      00002683: DUP2                           // SRCID51: (8483-8487)
      00002684: SUB                            // SRCID51: (8479-8499)
      00002685: PUSH1 0x0                      // SRCID51: (8475-8476)
      00002687: DUP4                           // SRCID51: (8464-8473)
      00002688: ADD                            // SRCID51: (8460-8477)
      00002689: MSTORE                         // SRCID51: (8453-8500)
      0000268a: PUSH3 0x2695                   // SRCID51: (8517-8685)
      0000268e: DUP2                           // SRCID51: (8680-8684)
      0000268f: DUP5                           // SRCID51: (8671-8677)
      00002690: PUSH3 0x25f8                   // SRCID51: (8517-8685)
      00002694: JUMP                           // SRCID51: (8517-8685)
      00002695: JUMPDEST                       // SRCID51: (8517-8685)
      00002696: SWAP1                          // SRCID51: (8509-8685)
      00002697: POP                            // SRCID51: (8509-8685)
      00002698: SWAP3                          // SRCID51: (8199-8692)
      00002699: SWAP2                          // SRCID51: (8199-8692)
      0000269a: POP                            // SRCID51: (8199-8692)
      0000269b: POP                            // SRCID51: (8199-8692)
      0000269c: JUMP                           // SRCID51: (8199-8692)
      0000269d: JUMPDEST                       // SRCID51: (8698-8822)
      0000269e: PUSH1 0x0                      // SRCID51: (8775-8781)
      000026a0: DUP2                           // SRCID51: (8809-8814)
      000026a1: MLOAD                          // SRCID51: (8803-8815)
      000026a2: SWAP1                          // SRCID51: (8793-8815)
      000026a3: POP                            // SRCID51: (8793-8815)
      000026a4: SWAP2                          // SRCID51: (8698-8822)
      000026a5: SWAP1                          // SRCID51: (8698-8822)
      000026a6: POP                            // SRCID51: (8698-8822)
      000026a7: JUMP                           // SRCID51: (8698-8822)
      000026a8: JUMPDEST                       // SRCID51: (8828-9022)
      000026a9: PUSH1 0x0                      // SRCID51: (8937-8948)
      000026ab: DUP3                           // SRCID51: (8971-8977)
      000026ac: DUP3                           // SRCID51: (8966-8969)
      000026ad: MSTORE                         // SRCID51: (8959-8978)
      000026ae: PUSH1 0x20                     // SRCID51: (9011-9015)
      000026b0: DUP3                           // SRCID51: (9006-9009)
      000026b1: ADD                            // SRCID51: (9002-9016)
      000026b2: SWAP1                          // SRCID51: (8987-9016)
      000026b3: POP                            // SRCID51: (8987-9016)
      000026b4: SWAP3                          // SRCID51: (8828-9022)
      000026b5: SWAP2                          // SRCID51: (8828-9022)
      000026b6: POP                            // SRCID51: (8828-9022)
      000026b7: POP                            // SRCID51: (8828-9022)
      000026b8: JUMP                           // SRCID51: (8828-9022)
      000026b9: JUMPDEST                       // SRCID51: (9028-9170)
      000026ba: PUSH1 0x0                      // SRCID51: (9105-9109)
      000026bc: DUP2                           // SRCID51: (9128-9131)
      000026bd: SWAP1                          // SRCID51: (9120-9131)
      000026be: POP                            // SRCID51: (9120-9131)
      000026bf: PUSH1 0x20                     // SRCID51: (9158-9162)
      000026c1: DUP3                           // SRCID51: (9153-9156)
      000026c2: ADD                            // SRCID51: (9149-9163)
      000026c3: SWAP1                          // SRCID51: (9141-9163)
      000026c4: POP                            // SRCID51: (9141-9163)
      000026c5: SWAP2                          // SRCID51: (9028-9170)
      000026c6: SWAP1                          // SRCID51: (9028-9170)
      000026c7: POP                            // SRCID51: (9028-9170)
      000026c8: JUMP                           // SRCID51: (9028-9170)
      000026c9: JUMPDEST                       // SRCID51: (9176-9275)
      000026ca: PUSH1 0x0                      // SRCID51: (9228-9234)
      000026cc: DUP2                           // SRCID51: (9262-9267)
      000026cd: MLOAD                          // SRCID51: (9256-9268)
      000026ce: SWAP1                          // SRCID51: (9246-9268)
      000026cf: POP                            // SRCID51: (9246-9268)
      000026d0: SWAP2                          // SRCID51: (9176-9275)
      000026d1: SWAP1                          // SRCID51: (9176-9275)
      000026d2: POP                            // SRCID51: (9176-9275)
      000026d3: JUMP                           // SRCID51: (9176-9275)
      000026d4: JUMPDEST                       // SRCID51: (9281-9440)
      000026d5: PUSH1 0x0                      // SRCID51: (9355-9366)
      000026d7: DUP3                           // SRCID51: (9389-9395)
      000026d8: DUP3                           // SRCID51: (9384-9387)
      000026d9: MSTORE                         // SRCID51: (9377-9396)
      000026da: PUSH1 0x20                     // SRCID51: (9429-9433)
      000026dc: DUP3                           // SRCID51: (9424-9427)
      000026dd: ADD                            // SRCID51: (9420-9434)
      000026de: SWAP1                          // SRCID51: (9405-9434)
      000026df: POP                            // SRCID51: (9405-9434)
      000026e0: SWAP3                          // SRCID51: (9281-9440)
      000026e1: SWAP2                          // SRCID51: (9281-9440)
      000026e2: POP                            // SRCID51: (9281-9440)
      000026e3: POP                            // SRCID51: (9281-9440)
      000026e4: JUMP                           // SRCID51: (9281-9440)
      000026e5: JUMPDEST                       // SRCID51: (9446-9692)
      000026e6: PUSH1 0x0                      // SRCID51: (9527-9528)
      000026e8: JUMPDEST                       // SRCID51: (9537-9650)
      000026e9: DUP4                           // SRCID51: (9551-9557)
      000026ea: DUP2                           // SRCID51: (9548-9549)
      000026eb: LT                             // SRCID51: (9545-9558)
      000026ec: ISZERO                         // SRCID51: (9537-9650)
      000026ed: PUSH3 0x2705                   // SRCID51: (9537-9650)
      000026f1: JUMPI                          // SRCID51: (9537-9650)
      000026f2: DUP1                           // SRCID51: (9636-9637)
      000026f3: DUP3                           // SRCID51: (9631-9634)
      000026f4: ADD                            // SRCID51: (9627-9638)
      000026f5: MLOAD                          // SRCID51: (9621-9639)
      000026f6: DUP2                           // SRCID51: (9617-9618)
      000026f7: DUP5                           // SRCID51: (9612-9615)
      000026f8: ADD                            // SRCID51: (9608-9619)
      000026f9: MSTORE                         // SRCID51: (9601-9640)
      000026fa: PUSH1 0x20                     // SRCID51: (9573-9575)
      000026fc: DUP2                           // SRCID51: (9570-9571)
      000026fd: ADD                            // SRCID51: (9566-9576)
      000026fe: SWAP1                          // SRCID51: (9561-9576)
      000026ff: POP                            // SRCID51: (9561-9576)
      00002700: PUSH3 0x26e8                   // SRCID51: (9537-9650)
      00002704: JUMP                           // SRCID51: (9537-9650)
      00002705: JUMPDEST                       // SRCID51: (9537-9650)
      00002706: PUSH1 0x0                      // SRCID51: (9684-9685)
      00002708: DUP5                           // SRCID51: (9675-9681)
      00002709: DUP5                           // SRCID51: (9670-9673)
      0000270a: ADD                            // SRCID51: (9666-9682)
      0000270b: MSTORE                         // SRCID51: (9659-9686)
      0000270c: POP                            // SRCID51: (9508-9692)
      0000270d: POP                            // SRCID51: (9446-9692)
      0000270e: POP                            // SRCID51: (9446-9692)
      0000270f: POP                            // SRCID51: (9446-9692)
      00002710: JUMP                           // SRCID51: (9446-9692)
      00002711: JUMPDEST                       // SRCID51: (9698-9800)
      00002712: PUSH1 0x0                      // SRCID51: (9739-9745)
      00002714: PUSH1 0x1f                     // SRCID51: (9790-9792)
      00002716: NOT                            // SRCID51: (9786-9793)
      00002717: PUSH1 0x1f                     // SRCID51: (9781-9783)
      00002719: DUP4                           // SRCID51: (9774-9779)
      0000271a: ADD                            // SRCID51: (9770-9784)
      0000271b: AND                            // SRCID51: (9766-9794)
      0000271c: SWAP1                          // SRCID51: (9756-9794)
      0000271d: POP                            // SRCID51: (9756-9794)
      0000271e: SWAP2                          // SRCID51: (9698-9800)
      0000271f: SWAP1                          // SRCID51: (9698-9800)
      00002720: POP                            // SRCID51: (9698-9800)
      00002721: JUMP                           // SRCID51: (9698-9800)
      00002722: JUMPDEST                       // SRCID51: (9806-10163)
      00002723: PUSH1 0x0                      // SRCID51: (9884-9887)
      00002725: PUSH3 0x272f                   // SRCID51: (9912-9951)
      00002729: DUP3                           // SRCID51: (9945-9950)
      0000272a: PUSH3 0x26c9                   // SRCID51: (9912-9951)
      0000272e: JUMP                           // SRCID51: (9912-9951)
      0000272f: JUMPDEST                       // SRCID51: (9912-9951)
      00002730: PUSH3 0x273b                   // SRCID51: (9967-10028)
      00002734: DUP2                           // SRCID51: (10021-10027)
      00002735: DUP6                           // SRCID51: (10016-10019)
      00002736: PUSH3 0x26d4                   // SRCID51: (9967-10028)
      0000273a: JUMP                           // SRCID51: (9967-10028)
      0000273b: JUMPDEST                       // SRCID51: (9967-10028)
      0000273c: SWAP4                          // SRCID51: (9960-10028)
      0000273d: POP                            // SRCID51: (9960-10028)
      0000273e: PUSH3 0x274d                   // SRCID51: (10037-10102)
      00002742: DUP2                           // SRCID51: (10095-10101)
      00002743: DUP6                           // SRCID51: (10090-10093)
      00002744: PUSH1 0x20                     // SRCID51: (10083-10087)
      00002746: DUP7                           // SRCID51: (10076-10081)
      00002747: ADD                            // SRCID51: (10072-10088)
      00002748: PUSH3 0x26e5                   // SRCID51: (10037-10102)
      0000274c: JUMP                           // SRCID51: (10037-10102)
      0000274d: JUMPDEST                       // SRCID51: (10037-10102)
      0000274e: PUSH3 0x2758                   // SRCID51: (10127-10156)
      00002752: DUP2                           // SRCID51: (10149-10155)
      00002753: PUSH3 0x2711                   // SRCID51: (10127-10156)
      00002757: JUMP                           // SRCID51: (10127-10156)
      00002758: JUMPDEST                       // SRCID51: (10127-10156)
      00002759: DUP5                           // SRCID51: (10122-10125)
      0000275a: ADD                            // SRCID51: (10118-10157)
      0000275b: SWAP2                          // SRCID51: (10111-10157)
      0000275c: POP                            // SRCID51: (10111-10157)
      0000275d: POP                            // SRCID51: (9888-10163)
      0000275e: SWAP3                          // SRCID51: (9806-10163)
      0000275f: SWAP2                          // SRCID51: (9806-10163)
      00002760: POP                            // SRCID51: (9806-10163)
      00002761: POP                            // SRCID51: (9806-10163)
      00002762: JUMP                           // SRCID51: (9806-10163)
      00002763: JUMPDEST                       // SRCID51: (10169-10365)
      00002764: PUSH1 0x0                      // SRCID51: (10258-10268)
      00002766: PUSH3 0x2771                   // SRCID51: (10293-10359)
      0000276a: DUP4                           // SRCID51: (10355-10358)
      0000276b: DUP4                           // SRCID51: (10347-10353)
      0000276c: PUSH3 0x2722                   // SRCID51: (10293-10359)
      00002770: JUMP                           // SRCID51: (10293-10359)
      00002771: JUMPDEST                       // SRCID51: (10293-10359)
      00002772: SWAP1                          // SRCID51: (10279-10359)
      00002773: POP                            // SRCID51: (10279-10359)
      00002774: SWAP3                          // SRCID51: (10169-10365)
      00002775: SWAP2                          // SRCID51: (10169-10365)
      00002776: POP                            // SRCID51: (10169-10365)
      00002777: POP                            // SRCID51: (10169-10365)
      00002778: JUMP                           // SRCID51: (10169-10365)
      00002779: JUMPDEST                       // SRCID51: (10371-10494)
      0000277a: PUSH1 0x0                      // SRCID51: (10451-10455)
      0000277c: PUSH1 0x20                     // SRCID51: (10483-10487)
      0000277e: DUP3                           // SRCID51: (10478-10481)
      0000277f: ADD                            // SRCID51: (10474-10488)
      00002780: SWAP1                          // SRCID51: (10466-10488)
      00002781: POP                            // SRCID51: (10466-10488)
      00002782: SWAP2                          // SRCID51: (10371-10494)
      00002783: SWAP1                          // SRCID51: (10371-10494)
      00002784: POP                            // SRCID51: (10371-10494)
      00002785: JUMP                           // SRCID51: (10371-10494)
      00002786: JUMPDEST                       // SRCID51: (10528-11519)
      00002787: PUSH1 0x0                      // SRCID51: (10667-10670)
      00002789: PUSH3 0x2793                   // SRCID51: (10696-10760)
      0000278d: DUP3                           // SRCID51: (10754-10759)
      0000278e: PUSH3 0x269d                   // SRCID51: (10696-10760)
      00002792: JUMP                           // SRCID51: (10696-10760)
      00002793: JUMPDEST                       // SRCID51: (10696-10760)
      00002794: PUSH3 0x279f                   // SRCID51: (10776-10872)
      00002798: DUP2                           // SRCID51: (10865-10871)
      00002799: DUP6                           // SRCID51: (10860-10863)
      0000279a: PUSH3 0x26a8                   // SRCID51: (10776-10872)
      0000279e: JUMP                           // SRCID51: (10776-10872)
      0000279f: JUMPDEST                       // SRCID51: (10776-10872)
      000027a0: SWAP4                          // SRCID51: (10769-10872)
      000027a1: POP                            // SRCID51: (10769-10872)
      000027a2: DUP4                           // SRCID51: (10898-10901)
      000027a3: PUSH1 0x20                     // SRCID51: (10943-10947)
      000027a5: DUP3                           // SRCID51: (10935-10941)
      000027a6: MUL                            // SRCID51: (10931-10948)
      000027a7: DUP6                           // SRCID51: (10926-10929)
      000027a8: ADD                            // SRCID51: (10922-10949)
      000027a9: PUSH3 0x27b3                   // SRCID51: (10973-11039)
      000027ad: DUP6                           // SRCID51: (11033-11038)
      000027ae: PUSH3 0x26b9                   // SRCID51: (10973-11039)
      000027b2: JUMP                           // SRCID51: (10973-11039)
      000027b3: JUMPDEST                       // SRCID51: (10973-11039)
      000027b4: DUP1                           // SRCID51: (11062-11069)
      000027b5: PUSH1 0x0                      // SRCID51: (11093-11094)
      000027b7: JUMPDEST                       // SRCID51: (11078-11474)
      000027b8: DUP6                           // SRCID51: (11103-11109)
      000027b9: DUP2                           // SRCID51: (11100-11101)
      000027ba: LT                             // SRCID51: (11097-11110)
      000027bb: ISZERO                         // SRCID51: (11078-11474)
      000027bc: PUSH3 0x27f5                   // SRCID51: (11078-11474)
      000027c0: JUMPI                          // SRCID51: (11078-11474)
      000027c1: DUP5                           // SRCID51: (11174-11183)
      000027c2: DUP5                           // SRCID51: (11168-11172)
      000027c3: SUB                            // SRCID51: (11164-11184)
      000027c4: DUP10                          // SRCID51: (11159-11162)
      000027c5: MSTORE                         // SRCID51: (11152-11185)
      000027c6: DUP2                           // SRCID51: (11225-11231)
      000027c7: MLOAD                          // SRCID51: (11219-11232)
      000027c8: PUSH3 0x27d3                   // SRCID51: (11253-11337)
      000027cc: DUP6                           // SRCID51: (11332-11336)
      000027cd: DUP3                           // SRCID51: (11317-11330)
      000027ce: PUSH3 0x2763                   // SRCID51: (11253-11337)
      000027d2: JUMP                           // SRCID51: (11253-11337)
      000027d3: JUMPDEST                       // SRCID51: (11253-11337)
      000027d4: SWAP5                          // SRCID51: (11245-11337)
      000027d5: POP                            // SRCID51: (11245-11337)
      000027d6: PUSH3 0x27e0                   // SRCID51: (11360-11430)
      000027da: DUP4                           // SRCID51: (11423-11429)
      000027db: PUSH3 0x2779                   // SRCID51: (11360-11430)
      000027df: JUMP                           // SRCID51: (11360-11430)
      000027e0: JUMPDEST                       // SRCID51: (11360-11430)
      000027e1: SWAP3                          // SRCID51: (11350-11430)
      000027e2: POP                            // SRCID51: (11350-11430)
      000027e3: PUSH1 0x20                     // SRCID51: (11459-11463)
      000027e5: DUP11                          // SRCID51: (11454-11457)
      000027e6: ADD                            // SRCID51: (11450-11464)
      000027e7: SWAP10                         // SRCID51: (11443-11464)
      000027e8: POP                            // SRCID51: (11443-11464)
      000027e9: POP                            // SRCID51: (11138-11474)
      000027ea: PUSH1 0x1                      // SRCID51: (11125-11126)
      000027ec: DUP2                           // SRCID51: (11122-11123)
      000027ed: ADD                            // SRCID51: (11118-11127)
      000027ee: SWAP1                          // SRCID51: (11113-11127)
      000027ef: POP                            // SRCID51: (11113-11127)
      000027f0: PUSH3 0x27b7                   // SRCID51: (11078-11474)
      000027f4: JUMP                           // SRCID51: (11078-11474)
      000027f5: JUMPDEST                       // SRCID51: (11078-11474)
      000027f6: POP                            // SRCID51: (11082-11096)
      000027f7: DUP3                           // SRCID51: (11490-11494)
      000027f8: SWAP8                          // SRCID51: (11483-11494)
      000027f9: POP                            // SRCID51: (11483-11494)
      000027fa: DUP8                           // SRCID51: (11510-11513)
      000027fb: SWAP6                          // SRCID51: (11503-11513)
      000027fc: POP                            // SRCID51: (11503-11513)
      000027fd: POP                            // SRCID51: (10672-11519)
      000027fe: POP                            // SRCID51: (10672-11519)
      000027ff: POP                            // SRCID51: (10672-11519)
      00002800: POP                            // SRCID51: (10672-11519)
      00002801: POP                            // SRCID51: (10672-11519)
      00002802: SWAP3                          // SRCID51: (10528-11519)
      00002803: SWAP2                          // SRCID51: (10528-11519)
      00002804: POP                            // SRCID51: (10528-11519)
      00002805: POP                            // SRCID51: (10528-11519)
      00002806: JUMP                           // SRCID51: (10528-11519)
      00002807: JUMPDEST                       // SRCID51: (11525-11938)
      00002808: PUSH1 0x0                      // SRCID51: (11688-11692)
      0000280a: PUSH1 0x20                     // SRCID51: (11726-11728)
      0000280c: DUP3                           // SRCID51: (11715-11724)
      0000280d: ADD                            // SRCID51: (11711-11729)
      0000280e: SWAP1                          // SRCID51: (11703-11729)
      0000280f: POP                            // SRCID51: (11703-11729)
      00002810: DUP2                           // SRCID51: (11775-11784)
      00002811: DUP2                           // SRCID51: (11769-11773)
      00002812: SUB                            // SRCID51: (11765-11785)
      00002813: PUSH1 0x0                      // SRCID51: (11761-11762)
      00002815: DUP4                           // SRCID51: (11750-11759)
      00002816: ADD                            // SRCID51: (11746-11763)
      00002817: MSTORE                         // SRCID51: (11739-11786)
      00002818: PUSH3 0x2823                   // SRCID51: (11803-11931)
      0000281c: DUP2                           // SRCID51: (11926-11930)
      0000281d: DUP5                           // SRCID51: (11917-11923)
      0000281e: PUSH3 0x2786                   // SRCID51: (11803-11931)
      00002822: JUMP                           // SRCID51: (11803-11931)
      00002823: JUMPDEST                       // SRCID51: (11803-11931)
      00002824: SWAP1                          // SRCID51: (11795-11931)
      00002825: POP                            // SRCID51: (11795-11931)
      00002826: SWAP3                          // SRCID51: (11525-11938)
      00002827: SWAP2                          // SRCID51: (11525-11938)
      00002828: POP                            // SRCID51: (11525-11938)
      00002829: POP                            // SRCID51: (11525-11938)
      0000282a: JUMP                           // SRCID51: (11525-11938)
      0000282b: JUMPDEST                       // SRCID51: (11944-12034)
      0000282c: PUSH1 0x0                      // SRCID51: (11978-11985)
      0000282e: DUP2                           // SRCID51: (12021-12026)
      0000282f: ISZERO                         // SRCID51: (12014-12027)
      00002830: ISZERO                         // SRCID51: (12007-12028)
      00002831: SWAP1                          // SRCID51: (11996-12028)
      00002832: POP                            // SRCID51: (11996-12028)
      00002833: SWAP2                          // SRCID51: (11944-12034)
      00002834: SWAP1                          // SRCID51: (11944-12034)
      00002835: POP                            // SRCID51: (11944-12034)
      00002836: JUMP                           // SRCID51: (11944-12034)
      00002837: JUMPDEST                       // SRCID51: (12040-12149)
      00002838: PUSH3 0x2842                   // SRCID51: (12121-12142)
      0000283c: DUP2                           // SRCID51: (12136-12141)
      0000283d: PUSH3 0x282b                   // SRCID51: (12121-12142)
      00002841: JUMP                           // SRCID51: (12121-12142)
      00002842: JUMPDEST                       // SRCID51: (12121-12142)
      00002843: DUP3                           // SRCID51: (12116-12119)
      00002844: MSTORE                         // SRCID51: (12109-12143)
      00002845: POP                            // SRCID51: (12040-12149)
      00002846: POP                            // SRCID51: (12040-12149)
      00002847: JUMP                           // SRCID51: (12040-12149)
      00002848: JUMPDEST                       // SRCID51: (12155-12365)
      00002849: PUSH1 0x0                      // SRCID51: (12242-12246)
      0000284b: PUSH1 0x20                     // SRCID51: (12280-12282)
      0000284d: DUP3                           // SRCID51: (12269-12278)
      0000284e: ADD                            // SRCID51: (12265-12283)
      0000284f: SWAP1                          // SRCID51: (12257-12283)
      00002850: POP                            // SRCID51: (12257-12283)
      00002851: PUSH3 0x285f                   // SRCID51: (12293-12358)
      00002855: PUSH1 0x0                      // SRCID51: (12355-12356)
      00002857: DUP4                           // SRCID51: (12344-12353)
      00002858: ADD                            // SRCID51: (12340-12357)
      00002859: DUP5                           // SRCID51: (12331-12337)
      0000285a: PUSH3 0x2837                   // SRCID51: (12293-12358)
      0000285e: JUMP                           // SRCID51: (12293-12358)
      0000285f: JUMPDEST                       // SRCID51: (12293-12358)
      00002860: SWAP3                          // SRCID51: (12155-12365)
      00002861: SWAP2                          // SRCID51: (12155-12365)
      00002862: POP                            // SRCID51: (12155-12365)
      00002863: POP                            // SRCID51: (12155-12365)
      00002864: JUMP                           // SRCID51: (12155-12365)
[057] 00002865: JUMPDEST                       // SRCID51: (12371-12448)
[057] 00002866: PUSH1 0x0                      // SRCID51: (12408-12415)
[057] 00002868: DUP2                           // SRCID51: (12437-12442)
[057] 00002869: SWAP1                          // SRCID51: (12426-12442)
[057] 0000286a: POP                            // SRCID51: (12426-12442)
[057] 0000286b: SWAP2                          // SRCID51: (12371-12448)
[057] 0000286c: SWAP1                          // SRCID51: (12371-12448)
[057] 0000286d: POP                            // SRCID51: (12371-12448)
[057] 0000286e: JUMP                           // SRCID51: (12371-12448)
[022] 0000286f: JUMPDEST                       // SRCID51: (12454-12572)
[022] 00002870: PUSH3 0x287a                   // SRCID51: (12541-12565)
[022] 00002874: DUP2                           // SRCID51: (12559-12564)
[022] 00002875: PUSH3 0x2865                   // SRCID51: (12541-12565)
[022] 00002879: JUMP                           // SRCID51: (12541-12565)
[022] 0000287a: JUMPDEST                       // SRCID51: (12541-12565)
[022] 0000287b: DUP3                           // SRCID51: (12536-12539)
[022] 0000287c: MSTORE                         // SRCID51: (12529-12566)
[022] 0000287d: POP                            // SRCID51: (12454-12572)
[022] 0000287e: POP                            // SRCID51: (12454-12572)
[022] 0000287f: JUMP                           // SRCID51: (12454-12572)
[009] 00002880: JUMPDEST                       // SRCID51: (12578-12910)
[009] 00002881: PUSH1 0x0                      // SRCID51: (12699-12703)
[009] 00002883: PUSH1 0x40                     // SRCID51: (12737-12739)
[009] 00002885: DUP3                           // SRCID51: (12726-12735)
[009] 00002886: ADD                            // SRCID51: (12722-12740)
[009] 00002887: SWAP1                          // SRCID51: (12714-12740)
[009] 00002888: POP                            // SRCID51: (12714-12740)
[009] 00002889: PUSH3 0x2897                   // SRCID51: (12750-12821)
[009] 0000288d: PUSH1 0x0                      // SRCID51: (12818-12819)
[009] 0000288f: DUP4                           // SRCID51: (12807-12816)
[009] 00002890: ADD                            // SRCID51: (12803-12820)
[009] 00002891: DUP6                           // SRCID51: (12794-12800)
[009] 00002892: PUSH3 0x2440                   // SRCID51: (12750-12821)
[009] 00002896: JUMP                           // SRCID51: (12750-12821)
[009] 00002897: JUMPDEST                       // SRCID51: (12750-12821)
[009] 00002898: PUSH3 0x28a6                   // SRCID51: (12831-12903)
[009] 0000289c: PUSH1 0x20                     // SRCID51: (12899-12901)
[009] 0000289e: DUP4                           // SRCID51: (12888-12897)
[009] 0000289f: ADD                            // SRCID51: (12884-12902)
[009] 000028a0: DUP5                           // SRCID51: (12875-12881)
[009] 000028a1: PUSH3 0x286f                   // SRCID51: (12831-12903)
[009] 000028a5: JUMP                           // SRCID51: (12831-12903)
[009] 000028a6: JUMPDEST                       // SRCID51: (12831-12903)
[009] 000028a7: SWAP4                          // SRCID51: (12578-12910)
[009] 000028a8: SWAP3                          // SRCID51: (12578-12910)
[009] 000028a9: POP                            // SRCID51: (12578-12910)
[009] 000028aa: POP                            // SRCID51: (12578-12910)
[009] 000028ab: POP                            // SRCID51: (12578-12910)
[009] 000028ac: JUMP                           // SRCID51: (12578-12910)
      000028ad: JUMPDEST                       // SRCID51: (12997-13114)
      000028ae: PUSH1 0x0                      // SRCID51: (13106-13107)
      000028b0: DUP1                           // SRCID51: (13103-13104)
      000028b1: REVERT                         // SRCID51: (13096-13108)
[010] 000028b2: JUMPDEST                       // SRCID51: (13243-13365)
[010] 000028b3: PUSH3 0x28bd                   // SRCID51: (13316-13340)
[010] 000028b7: DUP2                           // SRCID51: (13334-13339)
[010] 000028b8: PUSH3 0x2366                   // SRCID51: (13316-13340)
[010] 000028bc: JUMP                           // SRCID51: (13316-13340)
[010] 000028bd: JUMPDEST                       // SRCID51: (13316-13340)
[010] 000028be: DUP2                           // SRCID51: (13309-13314)
[010] 000028bf: EQ                             // SRCID51: (13306-13341)
[010] 000028c0: PUSH3 0x28c9                   // SRCID51: (13296-13359)
[010] 000028c4: JUMPI                          // SRCID51: (13296-13359)
      000028c5: PUSH1 0x0                      // SRCID51: (13355-13356)
      000028c7: DUP1                           // SRCID51: (13352-13353)
      000028c8: REVERT                         // SRCID51: (13345-13357)
[010] 000028c9: JUMPDEST                       // SRCID51: (13296-13359)
[010] 000028ca: POP                            // SRCID51: (13243-13365)
[010] 000028cb: JUMP                           // SRCID51: (13243-13365)
[010] 000028cc: JUMPDEST                       // SRCID51: (13371-13514)
[010] 000028cd: PUSH1 0x0                      // SRCID51: (13428-13433)
[010] 000028cf: DUP2                           // SRCID51: (13459-13465)
[010] 000028d0: MLOAD                          // SRCID51: (13453-13466)
[010] 000028d1: SWAP1                          // SRCID51: (13444-13466)
[010] 000028d2: POP                            // SRCID51: (13444-13466)
[010] 000028d3: PUSH3 0x28dd                   // SRCID51: (13475-13508)
[010] 000028d7: DUP2                           // SRCID51: (13502-13507)
[010] 000028d8: PUSH3 0x28b2                   // SRCID51: (13475-13508)
[010] 000028dc: JUMP                           // SRCID51: (13475-13508)
[010] 000028dd: JUMPDEST                       // SRCID51: (13475-13508)
[010] 000028de: SWAP3                          // SRCID51: (13371-13514)
[010] 000028df: SWAP2                          // SRCID51: (13371-13514)
[010] 000028e0: POP                            // SRCID51: (13371-13514)
[010] 000028e1: POP                            // SRCID51: (13371-13514)
[010] 000028e2: JUMP                           // SRCID51: (13371-13514)
[010] 000028e3: JUMPDEST                       // SRCID51: (13520-13871)
[010] 000028e4: PUSH1 0x0                      // SRCID51: (13590-13596)
[010] 000028e6: PUSH1 0x20                     // SRCID51: (13639-13641)
[010] 000028e8: DUP3                           // SRCID51: (13627-13636)
[010] 000028e9: DUP5                           // SRCID51: (13618-13625)
[010] 000028ea: SUB                            // SRCID51: (13614-13637)
[010] 000028eb: SLT                            // SRCID51: (13610-13642)
[010] 000028ec: ISZERO                         // SRCID51: (13607-13726)
[010] 000028ed: PUSH3 0x28fc                   // SRCID51: (13607-13726)
[010] 000028f1: JUMPI                          // SRCID51: (13607-13726)
      000028f2: PUSH3 0x28fb                   // SRCID51: (13645-13724)
      000028f6: PUSH3 0x28ad                   // SRCID51: (13645-13724)
      000028fa: JUMP                           // SRCID51: (13645-13724)
      000028fb: JUMPDEST                       // SRCID51: (13645-13724)
[010] 000028fc: JUMPDEST                       // SRCID51: (13607-13726)
[010] 000028fd: PUSH1 0x0                      // SRCID51: (13765-13766)
[010] 000028ff: PUSH3 0x290c                   // SRCID51: (13790-13854)
[010] 00002903: DUP5                           // SRCID51: (13846-13853)
[010] 00002904: DUP3                           // SRCID51: (13837-13843)
[010] 00002905: DUP6                           // SRCID51: (13826-13835)
[010] 00002906: ADD                            // SRCID51: (13822-13844)
[010] 00002907: PUSH3 0x28cc                   // SRCID51: (13790-13854)
[010] 0000290b: JUMP                           // SRCID51: (13790-13854)
[010] 0000290c: JUMPDEST                       // SRCID51: (13790-13854)
[010] 0000290d: SWAP2                          // SRCID51: (13780-13854)
[010] 0000290e: POP                            // SRCID51: (13780-13854)
[010] 0000290f: POP                            // SRCID51: (13736-13864)
[010] 00002910: SWAP3                          // SRCID51: (13520-13871)
[010] 00002911: SWAP2                          // SRCID51: (13520-13871)
[010] 00002912: POP                            // SRCID51: (13520-13871)
[010] 00002913: POP                            // SRCID51: (13520-13871)
[010] 00002914: JUMP                           // SRCID51: (13520-13871)
[020] 00002915: JUMPDEST                       // SRCID51: (13877-13999)
[020] 00002916: PUSH3 0x2920                   // SRCID51: (13950-13974)
[020] 0000291a: DUP2                           // SRCID51: (13968-13973)
[020] 0000291b: PUSH3 0x2865                   // SRCID51: (13950-13974)
[020] 0000291f: JUMP                           // SRCID51: (13950-13974)
[020] 00002920: JUMPDEST                       // SRCID51: (13950-13974)
[020] 00002921: DUP2                           // SRCID51: (13943-13948)
[020] 00002922: EQ                             // SRCID51: (13940-13975)
[020] 00002923: PUSH3 0x292c                   // SRCID51: (13930-13993)
[020] 00002927: JUMPI                          // SRCID51: (13930-13993)
      00002928: PUSH1 0x0                      // SRCID51: (13989-13990)
      0000292a: DUP1                           // SRCID51: (13986-13987)
      0000292b: REVERT                         // SRCID51: (13979-13991)
[020] 0000292c: JUMPDEST                       // SRCID51: (13930-13993)
[020] 0000292d: POP                            // SRCID51: (13877-13999)
[020] 0000292e: JUMP                           // SRCID51: (13877-13999)
[020] 0000292f: JUMPDEST                       // SRCID51: (14005-14148)
[020] 00002930: PUSH1 0x0                      // SRCID51: (14062-14067)
[020] 00002932: DUP2                           // SRCID51: (14093-14099)
[020] 00002933: MLOAD                          // SRCID51: (14087-14100)
[020] 00002934: SWAP1                          // SRCID51: (14078-14100)
[020] 00002935: POP                            // SRCID51: (14078-14100)
[020] 00002936: PUSH3 0x2940                   // SRCID51: (14109-14142)
[020] 0000293a: DUP2                           // SRCID51: (14136-14141)
[020] 0000293b: PUSH3 0x2915                   // SRCID51: (14109-14142)
[020] 0000293f: JUMP                           // SRCID51: (14109-14142)
[020] 00002940: JUMPDEST                       // SRCID51: (14109-14142)
[020] 00002941: SWAP3                          // SRCID51: (14005-14148)
[020] 00002942: SWAP2                          // SRCID51: (14005-14148)
[020] 00002943: POP                            // SRCID51: (14005-14148)
[020] 00002944: POP                            // SRCID51: (14005-14148)
[020] 00002945: JUMP                           // SRCID51: (14005-14148)
[020] 00002946: JUMPDEST                       // SRCID51: (14154-14505)
[020] 00002947: PUSH1 0x0                      // SRCID51: (14224-14230)
[020] 00002949: PUSH1 0x20                     // SRCID51: (14273-14275)
[020] 0000294b: DUP3                           // SRCID51: (14261-14270)
[020] 0000294c: DUP5                           // SRCID51: (14252-14259)
[020] 0000294d: SUB                            // SRCID51: (14248-14271)
[020] 0000294e: SLT                            // SRCID51: (14244-14276)
[020] 0000294f: ISZERO                         // SRCID51: (14241-14360)
[020] 00002950: PUSH3 0x295f                   // SRCID51: (14241-14360)
[020] 00002954: JUMPI                          // SRCID51: (14241-14360)
      00002955: PUSH3 0x295e                   // SRCID51: (14279-14358)
      00002959: PUSH3 0x28ad                   // SRCID51: (14279-14358)
      0000295d: JUMP                           // SRCID51: (14279-14358)
      0000295e: JUMPDEST                       // SRCID51: (14279-14358)
[020] 0000295f: JUMPDEST                       // SRCID51: (14241-14360)
[020] 00002960: PUSH1 0x0                      // SRCID51: (14399-14400)
[020] 00002962: PUSH3 0x296f                   // SRCID51: (14424-14488)
[020] 00002966: DUP5                           // SRCID51: (14480-14487)
[020] 00002967: DUP3                           // SRCID51: (14471-14477)
[020] 00002968: DUP6                           // SRCID51: (14460-14469)
[020] 00002969: ADD                            // SRCID51: (14456-14478)
[020] 0000296a: PUSH3 0x292f                   // SRCID51: (14424-14488)
[020] 0000296e: JUMP                           // SRCID51: (14424-14488)
[020] 0000296f: JUMPDEST                       // SRCID51: (14424-14488)
[020] 00002970: SWAP2                          // SRCID51: (14414-14488)
[020] 00002971: POP                            // SRCID51: (14414-14488)
[020] 00002972: POP                            // SRCID51: (14370-14498)
[020] 00002973: SWAP3                          // SRCID51: (14154-14505)
[020] 00002974: SWAP2                          // SRCID51: (14154-14505)
[020] 00002975: POP                            // SRCID51: (14154-14505)
[020] 00002976: POP                            // SRCID51: (14154-14505)
[020] 00002977: JUMP                           // SRCID51: (14154-14505)
[013] 00002978: JUMPDEST                       // SRCID51: (14511-14733)
[013] 00002979: PUSH1 0x0                      // SRCID51: (14604-14608)
[013] 0000297b: PUSH1 0x20                     // SRCID51: (14642-14644)
[013] 0000297d: DUP3                           // SRCID51: (14631-14640)
[013] 0000297e: ADD                            // SRCID51: (14627-14645)
[013] 0000297f: SWAP1                          // SRCID51: (14619-14645)
[013] 00002980: POP                            // SRCID51: (14619-14645)
[013] 00002981: PUSH3 0x298f                   // SRCID51: (14655-14726)
[013] 00002985: PUSH1 0x0                      // SRCID51: (14723-14724)
[013] 00002987: DUP4                           // SRCID51: (14712-14721)
[013] 00002988: ADD                            // SRCID51: (14708-14725)
[013] 00002989: DUP5                           // SRCID51: (14699-14705)
[013] 0000298a: PUSH3 0x286f                   // SRCID51: (14655-14726)
[013] 0000298e: JUMP                           // SRCID51: (14655-14726)
[013] 0000298f: JUMPDEST                       // SRCID51: (14655-14726)
[013] 00002990: SWAP3                          // SRCID51: (14511-14733)
[013] 00002991: SWAP2                          // SRCID51: (14511-14733)
[013] 00002992: POP                            // SRCID51: (14511-14733)
[013] 00002993: POP                            // SRCID51: (14511-14733)
[013] 00002994: JUMP                           // SRCID51: (14511-14733)
[001] 00002995: JUMPDEST                       // SRCID51: (14739-14829)
[001] 00002996: PUSH1 0x0                      // SRCID51: (14789-14796)
[001] 00002998: DUP2                           // SRCID51: (14818-14823)
[001] 00002999: SWAP1                          // SRCID51: (14807-14823)
[001] 0000299a: POP                            // SRCID51: (14807-14823)
[001] 0000299b: SWAP2                          // SRCID51: (14739-14829)
[001] 0000299c: SWAP1                          // SRCID51: (14739-14829)
[001] 0000299d: POP                            // SRCID51: (14739-14829)
[001] 0000299e: JUMP                           // SRCID51: (14739-14829)
[001] 0000299f: JUMPDEST                       // SRCID51: (14835-15003)
[001] 000029a0: PUSH1 0x0                      // SRCID51: (14898-14907)
[001] 000029a2: PUSH3 0x29c0                   // SRCID51: (14931-14997)
[001] 000029a6: PUSH3 0x29ba                   // SRCID51: (14949-14996)
[001] 000029aa: PUSH3 0x29b4                   // SRCID51: (14958-14995)
[001] 000029ae: DUP5                           // SRCID51: (14989-14994)
[001] 000029af: PUSH3 0x2995                   // SRCID51: (14958-14995)
[001] 000029b3: JUMP                           // SRCID51: (14958-14995)
[001] 000029b4: JUMPDEST                       // SRCID51: (14958-14995)
[001] 000029b5: PUSH3 0x22b2                   // SRCID51: (14949-14996)
[001] 000029b9: JUMP                           // SRCID51: (14949-14996)
[001] 000029ba: JUMPDEST                       // SRCID51: (14949-14996)
[001] 000029bb: PUSH3 0x2865                   // SRCID51: (14931-14997)
[001] 000029bf: JUMP                           // SRCID51: (14931-14997)
[001] 000029c0: JUMPDEST                       // SRCID51: (14931-14997)
[001] 000029c1: SWAP1                          // SRCID51: (14918-14997)
[001] 000029c2: POP                            // SRCID51: (14918-14997)
[001] 000029c3: SWAP2                          // SRCID51: (14835-15003)
[001] 000029c4: SWAP1                          // SRCID51: (14835-15003)
[001] 000029c5: POP                            // SRCID51: (14835-15003)
[001] 000029c6: JUMP                           // SRCID51: (14835-15003)
[001] 000029c7: JUMPDEST                       // SRCID51: (15009-15166)
[001] 000029c8: PUSH3 0x29d2                   // SRCID51: (15109-15159)
[001] 000029cc: DUP2                           // SRCID51: (15153-15158)
[001] 000029cd: PUSH3 0x299f                   // SRCID51: (15109-15159)
[001] 000029d1: JUMP                           // SRCID51: (15109-15159)
[001] 000029d2: JUMPDEST                       // SRCID51: (15109-15159)
[001] 000029d3: DUP3                           // SRCID51: (15104-15107)
[001] 000029d4: MSTORE                         // SRCID51: (15097-15160)
[001] 000029d5: POP                            // SRCID51: (15009-15166)
[001] 000029d6: POP                            // SRCID51: (15009-15166)
[001] 000029d7: JUMP                           // SRCID51: (15009-15166)
[001] 000029d8: JUMPDEST                       // SRCID51: (15172-15530)
[001] 000029d9: PUSH1 0x0                      // SRCID51: (15306-15310)
[001] 000029db: PUSH1 0x40                     // SRCID51: (15344-15346)
[001] 000029dd: DUP3                           // SRCID51: (15333-15342)
[001] 000029de: ADD                            // SRCID51: (15329-15347)
[001] 000029df: SWAP1                          // SRCID51: (15321-15347)
[001] 000029e0: POP                            // SRCID51: (15321-15347)
[001] 000029e1: PUSH3 0x29ef                   // SRCID51: (15357-15428)
[001] 000029e5: PUSH1 0x0                      // SRCID51: (15425-15426)
[001] 000029e7: DUP4                           // SRCID51: (15414-15423)
[001] 000029e8: ADD                            // SRCID51: (15410-15427)
[001] 000029e9: DUP6                           // SRCID51: (15401-15407)
[001] 000029ea: PUSH3 0x2440                   // SRCID51: (15357-15428)
[001] 000029ee: JUMP                           // SRCID51: (15357-15428)
[001] 000029ef: JUMPDEST                       // SRCID51: (15357-15428)
[001] 000029f0: PUSH3 0x29fe                   // SRCID51: (15438-15523)
[001] 000029f4: PUSH1 0x20                     // SRCID51: (15519-15521)
[001] 000029f6: DUP4                           // SRCID51: (15508-15517)
[001] 000029f7: ADD                            // SRCID51: (15504-15522)
[001] 000029f8: DUP5                           // SRCID51: (15495-15501)
[001] 000029f9: PUSH3 0x29c7                   // SRCID51: (15438-15523)
[001] 000029fd: JUMP                           // SRCID51: (15438-15523)
[001] 000029fe: JUMPDEST                       // SRCID51: (15438-15523)
[001] 000029ff: SWAP4                          // SRCID51: (15172-15530)
[001] 00002a00: SWAP3                          // SRCID51: (15172-15530)
[001] 00002a01: POP                            // SRCID51: (15172-15530)
[001] 00002a02: POP                            // SRCID51: (15172-15530)
[001] 00002a03: POP                            // SRCID51: (15172-15530)
[001] 00002a04: JUMP                           // SRCID51: (15172-15530)
      00002a05: JUMPDEST                       // SRCID51: (15536-15716)
      00002a06: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID51: (15584-15661)
      00002a27: PUSH1 0x0                      // SRCID51: (15581-15582)
      00002a29: MSTORE                         // SRCID51: (15574-15662)
      00002a2a: PUSH1 0x22                     // SRCID51: (15681-15685)
      00002a2c: PUSH1 0x4                      // SRCID51: (15678-15679)
      00002a2e: MSTORE                         // SRCID51: (15671-15686)
      00002a2f: PUSH1 0x24                     // SRCID51: (15705-15709)
      00002a31: PUSH1 0x0                      // SRCID51: (15702-15703)
      00002a33: REVERT                         // SRCID51: (15695-15710)
      00002a34: JUMPDEST                       // SRCID51: (15722-16042)
      00002a35: PUSH1 0x0                      // SRCID51: (15766-15772)
      00002a37: PUSH1 0x2                      // SRCID51: (15803-15804)
      00002a39: DUP3                           // SRCID51: (15797-15801)
      00002a3a: DIV                            // SRCID51: (15793-15805)
      00002a3b: SWAP1                          // SRCID51: (15783-15805)
      00002a3c: POP                            // SRCID51: (15783-15805)
      00002a3d: PUSH1 0x1                      // SRCID51: (15850-15851)
      00002a3f: DUP3                           // SRCID51: (15844-15848)
      00002a40: AND                            // SRCID51: (15840-15852)
      00002a41: DUP1                           // SRCID51: (15871-15889)
      00002a42: PUSH3 0x2a4d                   // SRCID51: (15861-15942)
      00002a46: JUMPI                          // SRCID51: (15861-15942)
      00002a47: PUSH1 0x7f                     // SRCID51: (15927-15931)
      00002a49: DUP3                           // SRCID51: (15919-15925)
      00002a4a: AND                            // SRCID51: (15915-15932)
      00002a4b: SWAP2                          // SRCID51: (15905-15932)
      00002a4c: POP                            // SRCID51: (15905-15932)
      00002a4d: JUMPDEST                       // SRCID51: (15861-15942)
      00002a4e: PUSH1 0x20                     // SRCID51: (15989-15991)
      00002a50: DUP3                           // SRCID51: (15981-15987)
      00002a51: LT                             // SRCID51: (15978-15992)
      00002a52: DUP2                           // SRCID51: (15958-15976)
      00002a53: SUB                            // SRCID51: (15955-15993)
      00002a54: PUSH3 0x2a63                   // SRCID51: (15952-16036)
      00002a58: JUMPI                          // SRCID51: (15952-16036)
      00002a59: PUSH3 0x2a62                   // SRCID51: (16008-16026)
      00002a5d: PUSH3 0x2a05                   // SRCID51: (16008-16026)
      00002a61: JUMP                           // SRCID51: (16008-16026)
      00002a62: JUMPDEST                       // SRCID51: (16008-16026)
      00002a63: JUMPDEST                       // SRCID51: (15952-16036)
      00002a64: POP                            // SRCID51: (15773-16042)
      00002a65: SWAP2                          // SRCID51: (15722-16042)
      00002a66: SWAP1                          // SRCID51: (15722-16042)
      00002a67: POP                            // SRCID51: (15722-16042)
      00002a68: JUMP                           // SRCID51: (15722-16042)
      00002a69: JUMPDEST                       // SRCID51: (16048-16125)
      00002a6a: PUSH1 0x0                      // SRCID51: (16085-16092)
      00002a6c: DUP2                           // SRCID51: (16114-16119)
      00002a6d: SWAP1                          // SRCID51: (16103-16119)
      00002a6e: POP                            // SRCID51: (16103-16119)
      00002a6f: SWAP2                          // SRCID51: (16048-16125)
      00002a70: SWAP1                          // SRCID51: (16048-16125)
      00002a71: POP                            // SRCID51: (16048-16125)
      00002a72: JUMP                           // SRCID51: (16048-16125)
      00002a73: JUMPDEST                       // SRCID51: (16131-16249)
      00002a74: PUSH3 0x2a7e                   // SRCID51: (16218-16242)
      00002a78: DUP2                           // SRCID51: (16236-16241)
      00002a79: PUSH3 0x2a69                   // SRCID51: (16218-16242)
      00002a7d: JUMP                           // SRCID51: (16218-16242)
      00002a7e: JUMPDEST                       // SRCID51: (16218-16242)
      00002a7f: DUP3                           // SRCID51: (16213-16216)
      00002a80: MSTORE                         // SRCID51: (16206-16243)
      00002a81: POP                            // SRCID51: (16131-16249)
      00002a82: POP                            // SRCID51: (16131-16249)
      00002a83: JUMP                           // SRCID51: (16131-16249)
      00002a84: JUMPDEST                       // SRCID51: (16255-16587)
      00002a85: PUSH1 0x0                      // SRCID51: (16376-16380)
      00002a87: PUSH1 0x40                     // SRCID51: (16414-16416)
      00002a89: DUP3                           // SRCID51: (16403-16412)
      00002a8a: ADD                            // SRCID51: (16399-16417)
      00002a8b: SWAP1                          // SRCID51: (16391-16417)
      00002a8c: POP                            // SRCID51: (16391-16417)
      00002a8d: PUSH3 0x2a9b                   // SRCID51: (16427-16498)
      00002a91: PUSH1 0x0                      // SRCID51: (16495-16496)
      00002a93: DUP4                           // SRCID51: (16484-16493)
      00002a94: ADD                            // SRCID51: (16480-16497)
      00002a95: DUP6                           // SRCID51: (16471-16477)
      00002a96: PUSH3 0x2440                   // SRCID51: (16427-16498)
      00002a9a: JUMP                           // SRCID51: (16427-16498)
      00002a9b: JUMPDEST                       // SRCID51: (16427-16498)
      00002a9c: PUSH3 0x2aaa                   // SRCID51: (16508-16580)
      00002aa0: PUSH1 0x20                     // SRCID51: (16576-16578)
      00002aa2: DUP4                           // SRCID51: (16565-16574)
      00002aa3: ADD                            // SRCID51: (16561-16579)
      00002aa4: DUP5                           // SRCID51: (16552-16558)
      00002aa5: PUSH3 0x2a73                   // SRCID51: (16508-16580)
      00002aa9: JUMP                           // SRCID51: (16508-16580)
      00002aaa: JUMPDEST                       // SRCID51: (16508-16580)
      00002aab: SWAP4                          // SRCID51: (16255-16587)
      00002aac: SWAP3                          // SRCID51: (16255-16587)
      00002aad: POP                            // SRCID51: (16255-16587)
      00002aae: POP                            // SRCID51: (16255-16587)
      00002aaf: POP                            // SRCID51: (16255-16587)
      00002ab0: JUMP                           // SRCID51: (16255-16587)
      00002ab1: JUMPDEST                       // SRCID51: (16593-16671)
      00002ab2: PUSH1 0x0                      // SRCID51: (16631-16638)
      00002ab4: DUP2                           // SRCID51: (16660-16665)
      00002ab5: SWAP1                          // SRCID51: (16649-16665)
      00002ab6: POP                            // SRCID51: (16649-16665)
      00002ab7: SWAP2                          // SRCID51: (16593-16671)
      00002ab8: SWAP1                          // SRCID51: (16593-16671)
      00002ab9: POP                            // SRCID51: (16593-16671)
      00002aba: JUMP                           // SRCID51: (16593-16671)
      00002abb: JUMPDEST                       // SRCID51: (16677-16830)
      00002abc: PUSH3 0x2ad0                   // SRCID51: (16780-16823)
      00002ac0: PUSH3 0x2aca                   // SRCID51: (16799-16822)
      00002ac4: DUP3                           // SRCID51: (16816-16821)
      00002ac5: PUSH3 0x24c6                   // SRCID51: (16799-16822)
      00002ac9: JUMP                           // SRCID51: (16799-16822)
      00002aca: JUMPDEST                       // SRCID51: (16799-16822)
      00002acb: PUSH3 0x2ab1                   // SRCID51: (16780-16823)
      00002acf: JUMP                           // SRCID51: (16780-16823)
      00002ad0: JUMPDEST                       // SRCID51: (16780-16823)
      00002ad1: DUP3                           // SRCID51: (16775-16778)
      00002ad2: MSTORE                         // SRCID51: (16768-16824)
      00002ad3: POP                            // SRCID51: (16677-16830)
      00002ad4: POP                            // SRCID51: (16677-16830)
      00002ad5: JUMP                           // SRCID51: (16677-16830)
      00002ad6: JUMPDEST                       // SRCID51: (16836-16934)
      00002ad7: PUSH1 0x0                      // SRCID51: (16887-16893)
      00002ad9: DUP2                           // SRCID51: (16921-16926)
      00002ada: MLOAD                          // SRCID51: (16915-16927)
      00002adb: SWAP1                          // SRCID51: (16905-16927)
      00002adc: POP                            // SRCID51: (16905-16927)
      00002add: SWAP2                          // SRCID51: (16836-16934)
      00002ade: SWAP1                          // SRCID51: (16836-16934)
      00002adf: POP                            // SRCID51: (16836-16934)
      00002ae0: JUMP                           // SRCID51: (16836-16934)
      00002ae1: JUMPDEST                       // SRCID51: (16940-17087)
      00002ae2: PUSH1 0x0                      // SRCID51: (17041-17052)
      00002ae4: DUP2                           // SRCID51: (17078-17081)
      00002ae5: SWAP1                          // SRCID51: (17063-17081)
      00002ae6: POP                            // SRCID51: (17063-17081)
      00002ae7: SWAP3                          // SRCID51: (16940-17087)
      00002ae8: SWAP2                          // SRCID51: (16940-17087)
      00002ae9: POP                            // SRCID51: (16940-17087)
      00002aea: POP                            // SRCID51: (16940-17087)
      00002aeb: JUMP                           // SRCID51: (16940-17087)
      00002aec: JUMPDEST                       // SRCID51: (17093-17479)
      00002aed: PUSH1 0x0                      // SRCID51: (17197-17200)
      00002aef: PUSH3 0x2af9                   // SRCID51: (17225-17263)
      00002af3: DUP3                           // SRCID51: (17257-17262)
      00002af4: PUSH3 0x2ad6                   // SRCID51: (17225-17263)
      00002af8: JUMP                           // SRCID51: (17225-17263)
      00002af9: JUMPDEST                       // SRCID51: (17225-17263)
      00002afa: PUSH3 0x2b05                   // SRCID51: (17279-17367)
      00002afe: DUP2                           // SRCID51: (17360-17366)
      00002aff: DUP6                           // SRCID51: (17355-17358)
      00002b00: PUSH3 0x2ae1                   // SRCID51: (17279-17367)
      00002b04: JUMP                           // SRCID51: (17279-17367)
      00002b05: JUMPDEST                       // SRCID51: (17279-17367)
      00002b06: SWAP4                          // SRCID51: (17272-17367)
      00002b07: POP                            // SRCID51: (17272-17367)
      00002b08: PUSH3 0x2b17                   // SRCID51: (17376-17441)
      00002b0c: DUP2                           // SRCID51: (17434-17440)
      00002b0d: DUP6                           // SRCID51: (17429-17432)
      00002b0e: PUSH1 0x20                     // SRCID51: (17422-17426)
      00002b10: DUP7                           // SRCID51: (17415-17420)
      00002b11: ADD                            // SRCID51: (17411-17427)
      00002b12: PUSH3 0x26e5                   // SRCID51: (17376-17441)
      00002b16: JUMP                           // SRCID51: (17376-17441)
      00002b17: JUMPDEST                       // SRCID51: (17376-17441)
      00002b18: DUP1                           // SRCID51: (17466-17472)
      00002b19: DUP5                           // SRCID51: (17461-17464)
      00002b1a: ADD                            // SRCID51: (17457-17473)
      00002b1b: SWAP2                          // SRCID51: (17450-17473)
      00002b1c: POP                            // SRCID51: (17450-17473)
      00002b1d: POP                            // SRCID51: (17201-17479)
      00002b1e: SWAP3                          // SRCID51: (17093-17479)
      00002b1f: SWAP2                          // SRCID51: (17093-17479)
      00002b20: POP                            // SRCID51: (17093-17479)
      00002b21: POP                            // SRCID51: (17093-17479)
      00002b22: JUMP                           // SRCID51: (17093-17479)
      00002b23: JUMPDEST                       // SRCID51: (17485-17892)
      00002b24: PUSH1 0x0                      // SRCID51: (17641-17644)
      00002b26: PUSH3 0x2b31                   // SRCID51: (17656-17729)
      00002b2a: DUP3                           // SRCID51: (17725-17728)
      00002b2b: DUP6                           // SRCID51: (17716-17722)
      00002b2c: PUSH3 0x2abb                   // SRCID51: (17656-17729)
      00002b30: JUMP                           // SRCID51: (17656-17729)
      00002b31: JUMPDEST                       // SRCID51: (17656-17729)
      00002b32: PUSH1 0x4                      // SRCID51: (17754-17755)
      00002b34: DUP3                           // SRCID51: (17749-17752)
      00002b35: ADD                            // SRCID51: (17745-17756)
      00002b36: SWAP2                          // SRCID51: (17738-17756)
      00002b37: POP                            // SRCID51: (17738-17756)
      00002b38: PUSH3 0x2b43                   // SRCID51: (17773-17866)
      00002b3c: DUP3                           // SRCID51: (17862-17865)
      00002b3d: DUP5                           // SRCID51: (17853-17859)
      00002b3e: PUSH3 0x2aec                   // SRCID51: (17773-17866)
      00002b42: JUMP                           // SRCID51: (17773-17866)
      00002b43: JUMPDEST                       // SRCID51: (17773-17866)
      00002b44: SWAP2                          // SRCID51: (17766-17866)
      00002b45: POP                            // SRCID51: (17766-17866)
      00002b46: DUP2                           // SRCID51: (17883-17886)
      00002b47: SWAP1                          // SRCID51: (17876-17886)
      00002b48: POP                            // SRCID51: (17876-17886)
      00002b49: SWAP4                          // SRCID51: (17485-17892)
      00002b4a: SWAP3                          // SRCID51: (17485-17892)
      00002b4b: POP                            // SRCID51: (17485-17892)
      00002b4c: POP                            // SRCID51: (17485-17892)
      00002b4d: POP                            // SRCID51: (17485-17892)
      00002b4e: JUMP                           // SRCID51: (17485-17892)
      00002b4f: JUMPDEST                       // SRCID51: (17898-18169)
      00002b50: PUSH1 0x0                      // SRCID51: (18028-18031)
      00002b52: PUSH3 0x2b5d                   // SRCID51: (18050-18143)
      00002b56: DUP3                           // SRCID51: (18139-18142)
      00002b57: DUP5                           // SRCID51: (18130-18136)
      00002b58: PUSH3 0x2aec                   // SRCID51: (18050-18143)
      00002b5c: JUMP                           // SRCID51: (18050-18143)
      00002b5d: JUMPDEST                       // SRCID51: (18050-18143)
      00002b5e: SWAP2                          // SRCID51: (18043-18143)
      00002b5f: POP                            // SRCID51: (18043-18143)
      00002b60: DUP2                           // SRCID51: (18160-18163)
      00002b61: SWAP1                          // SRCID51: (18153-18163)
      00002b62: POP                            // SRCID51: (18153-18163)
      00002b63: SWAP3                          // SRCID51: (17898-18169)
      00002b64: SWAP2                          // SRCID51: (17898-18169)
      00002b65: POP                            // SRCID51: (17898-18169)
      00002b66: POP                            // SRCID51: (17898-18169)
      00002b67: JUMP                           // SRCID51: (17898-18169)
      00002b68: JUMPDEST                       // SRCID51: (18175-18291)
      00002b69: PUSH3 0x2b73                   // SRCID51: (18245-18266)
      00002b6d: DUP2                           // SRCID51: (18260-18265)
      00002b6e: PUSH3 0x282b                   // SRCID51: (18245-18266)
      00002b72: JUMP                           // SRCID51: (18245-18266)
      00002b73: JUMPDEST                       // SRCID51: (18245-18266)
      00002b74: DUP2                           // SRCID51: (18238-18243)
      00002b75: EQ                             // SRCID51: (18235-18267)
      00002b76: PUSH3 0x2b7f                   // SRCID51: (18225-18285)
      00002b7a: JUMPI                          // SRCID51: (18225-18285)
      00002b7b: PUSH1 0x0                      // SRCID51: (18281-18282)
      00002b7d: DUP1                           // SRCID51: (18278-18279)
      00002b7e: REVERT                         // SRCID51: (18271-18283)
      00002b7f: JUMPDEST                       // SRCID51: (18225-18285)
      00002b80: POP                            // SRCID51: (18175-18291)
      00002b81: JUMP                           // SRCID51: (18175-18291)
      00002b82: JUMPDEST                       // SRCID51: (18297-18434)
      00002b83: PUSH1 0x0                      // SRCID51: (18351-18356)
      00002b85: DUP2                           // SRCID51: (18382-18388)
      00002b86: MLOAD                          // SRCID51: (18376-18389)
      00002b87: SWAP1                          // SRCID51: (18367-18389)
      00002b88: POP                            // SRCID51: (18367-18389)
      00002b89: PUSH3 0x2b93                   // SRCID51: (18398-18428)
      00002b8d: DUP2                           // SRCID51: (18422-18427)
      00002b8e: PUSH3 0x2b68                   // SRCID51: (18398-18428)
      00002b92: JUMP                           // SRCID51: (18398-18428)
      00002b93: JUMPDEST                       // SRCID51: (18398-18428)
      00002b94: SWAP3                          // SRCID51: (18297-18434)
      00002b95: SWAP2                          // SRCID51: (18297-18434)
      00002b96: POP                            // SRCID51: (18297-18434)
      00002b97: POP                            // SRCID51: (18297-18434)
      00002b98: JUMP                           // SRCID51: (18297-18434)
      00002b99: JUMPDEST                       // SRCID51: (18440-18785)
      00002b9a: PUSH1 0x0                      // SRCID51: (18507-18513)
      00002b9c: PUSH1 0x20                     // SRCID51: (18556-18558)
      00002b9e: DUP3                           // SRCID51: (18544-18553)
      00002b9f: DUP5                           // SRCID51: (18535-18542)
      00002ba0: SUB                            // SRCID51: (18531-18554)
      00002ba1: SLT                            // SRCID51: (18527-18559)
      00002ba2: ISZERO                         // SRCID51: (18524-18643)
      00002ba3: PUSH3 0x2bb2                   // SRCID51: (18524-18643)
      00002ba7: JUMPI                          // SRCID51: (18524-18643)
      00002ba8: PUSH3 0x2bb1                   // SRCID51: (18562-18641)
      00002bac: PUSH3 0x28ad                   // SRCID51: (18562-18641)
      00002bb0: JUMP                           // SRCID51: (18562-18641)
      00002bb1: JUMPDEST                       // SRCID51: (18562-18641)
      00002bb2: JUMPDEST                       // SRCID51: (18524-18643)
      00002bb3: PUSH1 0x0                      // SRCID51: (18682-18683)
      00002bb5: PUSH3 0x2bc2                   // SRCID51: (18707-18768)
      00002bb9: DUP5                           // SRCID51: (18760-18767)
      00002bba: DUP3                           // SRCID51: (18751-18757)
      00002bbb: DUP6                           // SRCID51: (18740-18749)
      00002bbc: ADD                            // SRCID51: (18736-18758)
      00002bbd: PUSH3 0x2b82                   // SRCID51: (18707-18768)
      00002bc1: JUMP                           // SRCID51: (18707-18768)
      00002bc2: JUMPDEST                       // SRCID51: (18707-18768)
      00002bc3: SWAP2                          // SRCID51: (18697-18768)
      00002bc4: POP                            // SRCID51: (18697-18768)
      00002bc5: POP                            // SRCID51: (18653-18778)
      00002bc6: SWAP3                          // SRCID51: (18440-18785)
      00002bc7: SWAP2                          // SRCID51: (18440-18785)
      00002bc8: POP                            // SRCID51: (18440-18785)
      00002bc9: POP                            // SRCID51: (18440-18785)
      00002bca: JUMP                           // SRCID51: (18440-18785)
      00002bcb: JUMPDEST                       // SRCID51: (18791-18960)
      00002bcc: PUSH1 0x0                      // SRCID51: (18875-18886)
      00002bce: DUP3                           // SRCID51: (18909-18915)
      00002bcf: DUP3                           // SRCID51: (18904-18907)
      00002bd0: MSTORE                         // SRCID51: (18897-18916)
      00002bd1: PUSH1 0x20                     // SRCID51: (18949-18953)
      00002bd3: DUP3                           // SRCID51: (18944-18947)
      00002bd4: ADD                            // SRCID51: (18940-18954)
      00002bd5: SWAP1                          // SRCID51: (18925-18954)
      00002bd6: POP                            // SRCID51: (18925-18954)
      00002bd7: SWAP3                          // SRCID51: (18791-18960)
      00002bd8: SWAP2                          // SRCID51: (18791-18960)
      00002bd9: POP                            // SRCID51: (18791-18960)
      00002bda: POP                            // SRCID51: (18791-18960)
      00002bdb: JUMP                           // SRCID51: (18791-18960)
      00002bdc: JUMPDEST                       // SRCID51: (18966-19139)
      00002bdd: PUSH32 0x4572726f723a20417373657274696f6e204661696c6564000000000000000000 // SRCID51: (19106-19131)
      00002bfe: PUSH1 0x0                      // SRCID51: (19102-19103)
      00002c00: DUP3                           // SRCID51: (19094-19100)
      00002c01: ADD                            // SRCID51: (19090-19104)
      00002c02: MSTORE                         // SRCID51: (19083-19132)
      00002c03: POP                            // SRCID51: (18966-19139)
      00002c04: JUMP                           // SRCID51: (18966-19139)
      00002c05: JUMPDEST                       // SRCID51: (19145-19511)
      00002c06: PUSH1 0x0                      // SRCID51: (19287-19290)
      00002c08: PUSH3 0x2c14                   // SRCID51: (19308-19375)
      00002c0c: PUSH1 0x17                     // SRCID51: (19372-19374)
      00002c0e: DUP4                           // SRCID51: (19367-19370)
      00002c0f: PUSH3 0x2bcb                   // SRCID51: (19308-19375)
      00002c13: JUMP                           // SRCID51: (19308-19375)
      00002c14: JUMPDEST                       // SRCID51: (19308-19375)
      00002c15: SWAP2                          // SRCID51: (19301-19375)
      00002c16: POP                            // SRCID51: (19301-19375)
      00002c17: PUSH3 0x2c21                   // SRCID51: (19384-19477)
      00002c1b: DUP3                           // SRCID51: (19473-19476)
      00002c1c: PUSH3 0x2bdc                   // SRCID51: (19384-19477)
      00002c20: JUMP                           // SRCID51: (19384-19477)
      00002c21: JUMPDEST                       // SRCID51: (19384-19477)
      00002c22: PUSH1 0x20                     // SRCID51: (19502-19504)
      00002c24: DUP3                           // SRCID51: (19497-19500)
      00002c25: ADD                            // SRCID51: (19493-19505)
      00002c26: SWAP1                          // SRCID51: (19486-19505)
      00002c27: POP                            // SRCID51: (19486-19505)
      00002c28: SWAP2                          // SRCID51: (19145-19511)
      00002c29: SWAP1                          // SRCID51: (19145-19511)
      00002c2a: POP                            // SRCID51: (19145-19511)
      00002c2b: JUMP                           // SRCID51: (19145-19511)
      00002c2c: JUMPDEST                       // SRCID51: (19517-19936)
      00002c2d: PUSH1 0x0                      // SRCID51: (19683-19687)
      00002c2f: PUSH1 0x20                     // SRCID51: (19721-19723)
      00002c31: DUP3                           // SRCID51: (19710-19719)
      00002c32: ADD                            // SRCID51: (19706-19724)
      00002c33: SWAP1                          // SRCID51: (19698-19724)
      00002c34: POP                            // SRCID51: (19698-19724)
      00002c35: DUP2                           // SRCID51: (19770-19779)
      00002c36: DUP2                           // SRCID51: (19764-19768)
      00002c37: SUB                            // SRCID51: (19760-19780)
      00002c38: PUSH1 0x0                      // SRCID51: (19756-19757)
      00002c3a: DUP4                           // SRCID51: (19745-19754)
      00002c3b: ADD                            // SRCID51: (19741-19758)
      00002c3c: MSTORE                         // SRCID51: (19734-19781)
      00002c3d: PUSH3 0x2c47                   // SRCID51: (19798-19929)
      00002c41: DUP2                           // SRCID51: (19924-19928)
      00002c42: PUSH3 0x2c05                   // SRCID51: (19798-19929)
      00002c46: JUMP                           // SRCID51: (19798-19929)
      00002c47: JUMPDEST                       // SRCID51: (19798-19929)
      00002c48: SWAP1                          // SRCID51: (19790-19929)
      00002c49: POP                            // SRCID51: (19790-19929)
      00002c4a: SWAP2                          // SRCID51: (19517-19936)
      00002c4b: SWAP1                          // SRCID51: (19517-19936)
      00002c4c: POP                            // SRCID51: (19517-19936)
      00002c4d: JUMP                           // SRCID51: (19517-19936)
      00002c4e: JUMPDEST                       // SRCID51: (19942-20122)
      00002c4f: PUSH32 0x4e487b7100000000000000000000000000000000000000000000000000000000 // SRCID51: (19990-20067)
      00002c70: PUSH1 0x0                      // SRCID51: (19987-19988)
      00002c72: MSTORE                         // SRCID51: (19980-20068)
      00002c73: PUSH1 0x11                     // SRCID51: (20087-20091)
      00002c75: PUSH1 0x4                      // SRCID51: (20084-20085)
      00002c77: MSTORE                         // SRCID51: (20077-20092)
      00002c78: PUSH1 0x24                     // SRCID51: (20111-20115)
      00002c7a: PUSH1 0x0                      // SRCID51: (20108-20109)
      00002c7c: REVERT                         // SRCID51: (20101-20116)
[007] 00002c7d: JUMPDEST                       // SRCID51: (20128-20319)
[007] 00002c7e: PUSH1 0x0                      // SRCID51: (20168-20171)
[007] 00002c80: PUSH3 0x2c8a                   // SRCID51: (20187-20207)
[007] 00002c84: DUP3                           // SRCID51: (20205-20206)
[007] 00002c85: PUSH3 0x2865                   // SRCID51: (20187-20207)
[007] 00002c89: JUMP                           // SRCID51: (20187-20207)
[007] 00002c8a: JUMPDEST                       // SRCID51: (20187-20207)
[007] 00002c8b: SWAP2                          // SRCID51: (20182-20207)
[007] 00002c8c: POP                            // SRCID51: (20182-20207)
[007] 00002c8d: PUSH3 0x2c97                   // SRCID51: (20221-20241)
[007] 00002c91: DUP4                           // SRCID51: (20239-20240)
[007] 00002c92: PUSH3 0x2865                   // SRCID51: (20221-20241)
[007] 00002c96: JUMP                           // SRCID51: (20221-20241)
[007] 00002c97: JUMPDEST                       // SRCID51: (20221-20241)
[007] 00002c98: SWAP3                          // SRCID51: (20216-20241)
[007] 00002c99: POP                            // SRCID51: (20216-20241)
[007] 00002c9a: DUP3                           // SRCID51: (20264-20265)
[007] 00002c9b: DUP3                           // SRCID51: (20261-20262)
[007] 00002c9c: ADD                            // SRCID51: (20257-20266)
[007] 00002c9d: SWAP1                          // SRCID51: (20250-20266)
[007] 00002c9e: POP                            // SRCID51: (20250-20266)
[007] 00002c9f: DUP1                           // SRCID51: (20285-20288)
[007] 00002ca0: DUP3                           // SRCID51: (20282-20283)
[007] 00002ca1: GT                             // SRCID51: (20279-20289)
[007] 00002ca2: ISZERO                         // SRCID51: (20276-20312)
[007] 00002ca3: PUSH3 0x2cb2                   // SRCID51: (20276-20312)
[007] 00002ca7: JUMPI                          // SRCID51: (20276-20312)
      00002ca8: PUSH3 0x2cb1                   // SRCID51: (20292-20310)
      00002cac: PUSH3 0x2c4e                   // SRCID51: (20292-20310)
      00002cb0: JUMP                           // SRCID51: (20292-20310)
      00002cb1: JUMPDEST                       // SRCID51: (20292-20310)
[007] 00002cb2: JUMPDEST                       // SRCID51: (20276-20312)
[007] 00002cb3: SWAP3                          // SRCID51: (20128-20319)
[007] 00002cb4: SWAP2                          // SRCID51: (20128-20319)
[007] 00002cb5: POP                            // SRCID51: (20128-20319)
[007] 00002cb6: POP                            // SRCID51: (20128-20319)
[007] 00002cb7: JUMP                           // SRCID51: (20128-20319)
      00002cb8: JUMPDEST                       // SRCID51: (20325-20767)
      00002cb9: PUSH1 0x0                      // SRCID51: (20474-20478)
      00002cbb: PUSH1 0x60                     // SRCID51: (20512-20514)
      00002cbd: DUP3                           // SRCID51: (20501-20510)
      00002cbe: ADD                            // SRCID51: (20497-20515)
      00002cbf: SWAP1                          // SRCID51: (20489-20515)
      00002cc0: POP                            // SRCID51: (20489-20515)
      00002cc1: PUSH3 0x2ccf                   // SRCID51: (20525-20596)
      00002cc5: PUSH1 0x0                      // SRCID51: (20593-20594)
      00002cc7: DUP4                           // SRCID51: (20582-20591)
      00002cc8: ADD                            // SRCID51: (20578-20595)
      00002cc9: DUP7                           // SRCID51: (20569-20575)
      00002cca: PUSH3 0x2440                   // SRCID51: (20525-20596)
      00002cce: JUMP                           // SRCID51: (20525-20596)
      00002ccf: JUMPDEST                       // SRCID51: (20525-20596)
      00002cd0: PUSH3 0x2cde                   // SRCID51: (20606-20678)
      00002cd4: PUSH1 0x20                     // SRCID51: (20674-20676)
      00002cd6: DUP4                           // SRCID51: (20663-20672)
      00002cd7: ADD                            // SRCID51: (20659-20677)
      00002cd8: DUP6                           // SRCID51: (20650-20656)
      00002cd9: PUSH3 0x2a73                   // SRCID51: (20606-20678)
      00002cdd: JUMP                           // SRCID51: (20606-20678)
      00002cde: JUMPDEST                       // SRCID51: (20606-20678)
      00002cdf: PUSH3 0x2ced                   // SRCID51: (20688-20760)
      00002ce3: PUSH1 0x40                     // SRCID51: (20756-20758)
      00002ce5: DUP4                           // SRCID51: (20745-20754)
      00002ce6: ADD                            // SRCID51: (20741-20759)
      00002ce7: DUP5                           // SRCID51: (20732-20738)
      00002ce8: PUSH3 0x2a73                   // SRCID51: (20688-20760)
      00002cec: JUMP                           // SRCID51: (20688-20760)
      00002ced: JUMPDEST                       // SRCID51: (20688-20760)
      00002cee: SWAP5                          // SRCID51: (20325-20767)
      00002cef: SWAP4                          // SRCID51: (20325-20767)
      00002cf0: POP                            // SRCID51: (20325-20767)
      00002cf1: POP                            // SRCID51: (20325-20767)
      00002cf2: POP                            // SRCID51: (20325-20767)
      00002cf3: POP                            // SRCID51: (20325-20767)
      00002cf4: JUMP                           // SRCID51: (20325-20767)
